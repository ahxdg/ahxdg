{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1498122508862},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1498122508879},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1498122508862},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1498122508862},{"_id":"source/404/index.md","hash":"f414520ce9e05bd04e92886908ebe385d082da7b","modified":1498385907742},{"_id":"source/_posts/FlexPaper无法播放跨域的swf文件.md","hash":"ddd7d585882ea21543acd40c29e8d0640dd3bf9f","modified":1523433985087},{"_id":"source/_posts/Life-without-love-之三色.md","hash":"f4ca89cb38aae0c04414deb2752f0892d3f0648e","modified":1519981503776},{"_id":"source/_posts/MarkDown使用笔记.md","hash":"7b8d33f8d7eeec9666c1237bd429736d8163f253","modified":1498384438095},{"_id":"source/_posts/CrossDomain.md","hash":"0a47890cd823027260cb8f353c342a57c73c97af","modified":1501233412473},{"_id":"source/_posts/Vue更新store时，同步更新组件.md","hash":"a5e7fba0128679f7c66a7def680d3b862d43283e","modified":1525323099736},{"_id":"themes/next/_config.yml","hash":"1bb3a06a565858af66a64f931f2f9d731ffc952b","modified":1524803528404},{"_id":"source/_posts/Tips-of-the-Sublime.md","hash":"26c7be7c4105b564e854a4f297f6ae1da9801736","modified":1519981503778},{"_id":"source/_posts/hexo使用笔记.md","hash":"9dfa385f81ff50b24e87dff1b798b67882e1b930","modified":1500370882726},{"_id":"source/_posts/python实例-利用imap处理邮件.md","hash":"b6f266038e88a6a934416f85fe7e889b9fb20487","modified":1525928945658},{"_id":"source/_posts/python实例-跳一跳.md","hash":"24c1216da40f590380ded15d92e9c2d62e11f12f","modified":1520610489968},{"_id":"source/_posts/canvas学习.md","hash":"a40cf9648467fe6e3a8fc41b8e5a9b85c9edab76","modified":1504161332022},{"_id":"source/_posts/input上传图片的问题总结.md","hash":"4e1a06c51cae8b4fd77e1c99135be2d409d857cf","modified":1500368465194},{"_id":"source/_posts/vue使用笔记-背景图片的路径问题.md","hash":"d2d19b9e3dcc6505e7959fd98e814134a3cf19d0","modified":1503637886589},{"_id":"source/_posts/react-笔记.md","hash":"2c3e38b23860906cf36f93553ecb5a280b11c3ec","modified":1500009004061},{"_id":"source/_posts/record.md","hash":"4b1ba63b312ee12242fc4d9ef36827286106199c","modified":1524289102892},{"_id":"source/_posts/python实例-获取国内城市区域划分数据，写cityPicker插件.md","hash":"ef3bb2a751df2914098358c9271667c09a6be1c7","modified":1524288140584},{"_id":"source/_posts/vue使用笔记-vue-cli项目目录及配置文件浅析.md","hash":"efd6f04cf25b84cd6ca04df86ad351dd894108e8","modified":1503731851500},{"_id":"source/_posts/vue使用笔记.md","hash":"5a269e5d1566f1af4d6c09943a3911586c361ee5","modified":1503637654320},{"_id":"source/_posts/webpack搭建项目实践.md","hash":"e3934e19c05175ced9399674f7af3be224f5bb04","modified":1503798955790},{"_id":"source/_posts/webRTC录音功能.md","hash":"11d537d28167f634277e8acef0a2ad3fee3b749e","modified":1522398678952},{"_id":"source/_posts/你不知道的js-学习笔记.md","hash":"b0979cce68540a0fb030b6fbba273c3c2395fb76","modified":1500368578700},{"_id":"source/_posts/倒看西游，看真实人生.md","hash":"826bd9563ac701a4a84fe2b4a44314013f20b3fd","modified":1524756594087},{"_id":"source/_posts/webpack使用笔记.md","hash":"604fccd37faafff121d8d62dca008908177bfe19","modified":1520959195188},{"_id":"source/_posts/前后端的数据交互问题分析.md","hash":"e6d7e36b60492c3b21ce5a2b6e606bb197023ddd","modified":1501202897805},{"_id":"source/_posts/关于法定纪念日不放假的思考.md","hash":"6f6a51ffb3ef096018ee789a7f74c828437090bb","modified":1525406523082},{"_id":"source/_posts/我是搬运工-js数组打乱-shuffle.md","hash":"8d59024ab53b388d5fffd6fb556ecb3991d68a86","modified":1503882212908},{"_id":"source/_posts/故事汇-你为什么要爬山.md","hash":"a54c45c842bb1410ff773bcd9ea1da0c024fec76","modified":1519981503795},{"_id":"source/_posts/算法-人，狼，羊，白菜过河问题.md","hash":"0e41fe0f2e09a9f0f9f9b8567b8150faf7e75f7a","modified":1520613136009},{"_id":"source/_posts/前后端分离的思考.md","hash":"f6b6d9a028808e7a0639747acd666336059cf553","modified":1501220009335},{"_id":"source/_posts/单页面的交互方式探索.md","hash":"ff53a16063245014ed9ee56c7cb9269372ca45b9","modified":1501152223491},{"_id":"source/_posts/把sublime添加到右键菜单，方便文件右键sublime打开.md","hash":"103cacb0a41698d377061031849cbd0d48268a1e","modified":1519981503792},{"_id":"source/_posts/基础-JS之sort.md","hash":"bbfbe6e7e6532620f6c2adf6966d93701c4f2add","modified":1525792623997},{"_id":"source/about/index.md","hash":"4a810efbe87df09d0f41f4aa9739247b92aa4814","modified":1525397460117},{"_id":"source/categories/index.md","hash":"e2b9377f992bd59c5e5c5528024c19cc51690ffe","modified":1498207744100},{"_id":"source/pic/index.md","hash":"d1ff821a1235e2702fe53769473f2545cfeb68fd","modified":1498530804496},{"_id":"source/tags/index.md","hash":"4954d5df9378bc3bbb04adc35056c07b936a57bf","modified":1498384845575},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1498122508864},{"_id":"themes/next/languages/en.yml","hash":"1df53a833aef6eaa1ae3967679b3e3b6a90fd30d","modified":1519983375676},{"_id":"source/_posts/走慢一点，等一等灵魂.md","hash":"3d42a3adbcd8a8626b460361ba8b4bc4cf11421f","modified":1501152226813},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1498122508864},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1498122508863},{"_id":"source/_posts/认真学习AMD和CMD.md","hash":"8e4022d55135120de2601ca3f3ce44d14f6a6e41","modified":1525342829482},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1498122508864},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1498122508864},{"_id":"themes/next/languages/zh-tw.yml","hash":"e72486c798afe44c520cbfb778da3a413262d596","modified":1519983357458},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1498122508865},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1498122508865},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1498122508865},{"_id":"themes/next/languages/zh-hk.yml","hash":"3ebea345b389cf4f5f0bba3348c0a3b05586827f","modified":1519983359791},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1498122508865},{"_id":"themes/next/layout/_layout.swig","hash":"0f547afe52721ffcbbc32bbf18d1041f1b546685","modified":1498122508866},{"_id":"themes/next/languages/zh-Hans.yml","hash":"684833a78e573222edef0d9396d78d8fb2d36226","modified":1519983349697},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1498122508878},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1498122508878},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1498122508878},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1498122508879},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1498122508880},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1498122508878},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1498122508941},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1498122508941},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1498122508941},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1498122508879},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1498122508878},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1498384789341},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508898},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1498122508866},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1498122508866},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1498122508867},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1498122508866},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1498122508867},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1498122508867},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1498122508876},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1498122508876},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4b029551ddb44c53f895e96cf8ff5ffbe02322fb","modified":1498122508867},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1498122508876},{"_id":"themes/next/layout/_macro/post.swig","hash":"6f3c6078b9dbc238ccf86fb228c24c0b94f67d47","modified":1498122508867},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1498122508876},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1498122508868},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1498122508876},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1498122508868},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1498122508869},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1498122508869},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1498122508876},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1498122508869},{"_id":"themes/next/layout/_partials/head.swig","hash":"09b110f77c415c5b71ebd886771a10bc84b95633","modified":1498122508868},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1498122508869},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1498122508880},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1498122508871},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1498122508871},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1498122508880},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1498122508880},{"_id":"themes/next/scripts/tags/note.js","hash":"fc4958427ca7bdb47a7d830077f432ed824973e4","modified":1498122508881},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1498122508881},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1498122508881},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1498122508880},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1523436473638},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1498122508899},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1498122508872},{"_id":"themes/next/source/images/avatar.jpg","hash":"176071b4fd4a618bebe62eb4615eee71511eb371","modified":1466674215130},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1498122508899},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1498122508900},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1498122508900},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1498122508900},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1498122508899},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498122508901},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1498122508900},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1498122508900},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1498122508901},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1498122508901},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1498122508901},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1498122508901},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1498122508901},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508871},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508872},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508893},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508893},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508897},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508894},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1498122508898},{"_id":"themes/next/source/images/favicon.ico","hash":"357487576b4aaea31d184e4988332467c21e9715","modified":1513666345821},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1498122508873},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1498122508873},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1498122508873},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1498122508872},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1498122508872},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1498122508873},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1498122508874},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1498122508873},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1498122508874},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1498122508874},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1498122508875},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1498122508874},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1498122508875},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1498122508875},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1498122508875},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1498122508876},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1498122508875},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1498122508875},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1498122508877},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1498122508874},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1498122508878},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1498122508868},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1498122508878},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1498122508868},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1498122508869},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1498122508869},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1498122508877},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1498122508869},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1498122508870},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1498122508870},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1498122508871},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1498122508872},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1498122508893},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1498122508893},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1498122508870},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1498122508897},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1498122508894},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dacede1cc110c762e7a5468dc0e34ae1a962d5aa","modified":1498122508898},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1498122508911},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1498122508898},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1498122508911},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"68db2c0bf1064176627199394f25f6dc37ea23ad","modified":1498122508911},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1498122508911},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1498122508908},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1498122508870},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1498122508917},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1498122508916},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1498122508917},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1498122508929},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1498122508929},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1498122508929},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1498122508929},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1498122508915},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1498122508916},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1498122508917},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1498122508930},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1498122508929},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1498122508928},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1498122508915},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1498122508915},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1498122508930},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1498122508930},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1498122508930},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1498122508930},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1498122508931},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1498122508931},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1498122508931},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1498122508931},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1498122508931},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1498122508931},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1498122508915},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1498122508933},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1498122508932},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1498122508932},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1498122508933},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1498122508902},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1498122508932},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1498122508902},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1498122508902},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1498122508903},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1498122508902},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1498122508902},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1498122508903},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1498122508903},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1498122508903},{"_id":"themes/next/source/js/src/utils.js","hash":"c976214b8bbaa9512b886bf3687e94696f705e33","modified":1498122508904},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1498122508932},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1498122508903},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1498122508938},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1498122508938},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1498122508940},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1498122508940},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1498122508932},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1498122508940},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1498122508928},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1498122508881},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1498122508877},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1498122508877},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1498122508892},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1498122508881},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1498122508885},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1498122508889},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1498122508892},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1498122508892},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1498122508893},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1498122508892},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1498122508893},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1498122508894},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1498122508894},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1498122508894},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1498122508895},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1498122508895},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1498122508895},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1498122508894},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1498122508895},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1498122508897},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1498122508897},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1498122508897},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1498122508897},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1498122508907},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1498122508911},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1498122508897},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1498122508912},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1498122508912},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1498122508912},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1498122508912},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1498122508912},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1498122508915},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1498122508907},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1498122508914},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1498122508918},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1498122508918},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1498122508918},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1498122508914},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1498122508916},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1498122508916},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1498122508903},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1498122508937},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1498122508937},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1498122508906},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1498122508906},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1498122508927},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1498122508939},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1498122508883},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1498122508883},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1498122508883},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1498122508883},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1498122508883},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1498122508884},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1498122508887},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1498122508887},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1498122508889},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1498122508885},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1498122508888},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1498122508885},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1498122508885},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1498122508885},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1498122508886},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1498122508927},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1498122508887},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1498122508886},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1498122508887},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1498122508890},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bc08cfb2ef2ff44ba3fc7dffdb2deb01a9d17d15","modified":1498122508887},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1498122508890},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1498122508892},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1498122508891},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1498122508890},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1498122508890},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1498122508889},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74019008ba973ab30f0f4a6b3c2cd33c66d3a4b4","modified":1498122508890},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1498122508882},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1498122508889},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1498122508896},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1498122508895},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1498122508895},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1498122508889},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1498122508904},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1498122508905},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1498122508904},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1498122508913},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1498122508905},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1498122508914},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1498122508913},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1498122508926},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1498122508920},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1498122508913},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1498122508921},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1498122508913},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1498122508913},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1498122508910},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1498122508936},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1498122508924}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2017-06-25T09:48:44.000Z","_content":"你打开的页面找不到了...去[首页](/)看看新文章吧~","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2017-06-25 17:48:44\n---\n你打开的页面找不到了...去[首页](/)看看新文章吧~","updated":"2017-06-25T10:18:27.742Z","path":"404/index.html","comments":1,"layout":"page","_id":"cjh2069um0000uw2cvata85u4","content":"<p>你打开的页面找不到了…去<a href=\"/\">首页</a>看看新文章吧~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>你打开的页面找不到了…去<a href=\"/\">首页</a>看看新文章吧~</p>\n"},{"title":"categories","date":"2017-06-23T08:49:04.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-06-23 16:49:04\n---\n","updated":"2017-06-23T08:49:04.100Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjh2069uv0002uw2cxir83hlg","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-06-23T08:48:45.000Z","_content":"\n<br/>\n> 总想搭个博客写点什么，一直都没有坚持下来。希望这次能够坚持写下去~\n\n我不是一个有趣的人，周末还是想赖在家里，但现在不会熬夜到一两点才睡。\n我会在这里分享一些自己在前端开发过程中遇到的坑和一些生活中遇到的有趣的事。\n我准备让自己变的更加有趣~\n\n<div style=\"display: none;\"><p style=\"text-align: center;margin-bottom: 10px;\"><b>Roll the dice</b></p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">otherwise, don’t even start.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">this could mean losing girlfriends, wives, relatives, jobs</p><p style=\"text-align: center;margin-bottom: 10px;\">and maybe your mind.</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean not eating for 3 or 4 days.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean freezing on a park bench.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean jail,it could mean derision,</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean mockery,isolation.</p><p style=\"text-align: center;margin-bottom: 10px;\">isolation is the gift,</p><p style=\"text-align: center;margin-bottom: 10px;\">all the others are a test of your endurance,</p><p style=\"text-align: center;margin-bottom: 10px;\">of how much you really want to do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">and you’ll do it</p><p style=\"text-align: center;margin-bottom: 10px;\">despite rejection and the worst odds</p><p style=\"text-align: center;margin-bottom: 10px;\">and it will be better than anything else you can imagine.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try,</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">there is no other feeling like that.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will be alone with the gods and the nights will flame with fire.</p><p style=\"text-align: center;margin-bottom: 10px;\">do it, do it, do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will ride life straight to perfect laughter,</p><p style=\"text-align: center;margin-bottom: 10px;\">it’s the only good fight</p><p style=\"text-align: center;margin-bottom: 10px;\">there is.</p><p style=\"text-align: right;\">- Charles Bukowski</p></div><audio src=\"http://ydschool-online.nos.netease.com/1483954760832NO.25+Roll+the+dice.mp3\" autoplay style=\"display: none;position: absolute;top: -1000px;\"></audio>\n<br>\n\n昵称：togor\n信封：flyfish_doc@163.com\n坐标：杭州","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-06-23 16:48:45\n---\n\n<br/>\n> 总想搭个博客写点什么，一直都没有坚持下来。希望这次能够坚持写下去~\n\n我不是一个有趣的人，周末还是想赖在家里，但现在不会熬夜到一两点才睡。\n我会在这里分享一些自己在前端开发过程中遇到的坑和一些生活中遇到的有趣的事。\n我准备让自己变的更加有趣~\n\n<div style=\"display: none;\"><p style=\"text-align: center;margin-bottom: 10px;\"><b>Roll the dice</b></p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">otherwise, don’t even start.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">this could mean losing girlfriends, wives, relatives, jobs</p><p style=\"text-align: center;margin-bottom: 10px;\">and maybe your mind.</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean not eating for 3 or 4 days.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean freezing on a park bench.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean jail,it could mean derision,</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean mockery,isolation.</p><p style=\"text-align: center;margin-bottom: 10px;\">isolation is the gift,</p><p style=\"text-align: center;margin-bottom: 10px;\">all the others are a test of your endurance,</p><p style=\"text-align: center;margin-bottom: 10px;\">of how much you really want to do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">and you’ll do it</p><p style=\"text-align: center;margin-bottom: 10px;\">despite rejection and the worst odds</p><p style=\"text-align: center;margin-bottom: 10px;\">and it will be better than anything else you can imagine.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try,</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">there is no other feeling like that.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will be alone with the gods and the nights will flame with fire.</p><p style=\"text-align: center;margin-bottom: 10px;\">do it, do it, do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will ride life straight to perfect laughter,</p><p style=\"text-align: center;margin-bottom: 10px;\">it’s the only good fight</p><p style=\"text-align: center;margin-bottom: 10px;\">there is.</p><p style=\"text-align: right;\">- Charles Bukowski</p></div><audio src=\"http://ydschool-online.nos.netease.com/1483954760832NO.25+Roll+the+dice.mp3\" autoplay style=\"display: none;position: absolute;top: -1000px;\"></audio>\n<br>\n\n昵称：togor\n信封：flyfish_doc@163.com\n坐标：杭州","updated":"2018-05-04T01:31:00.117Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjh2069uy0005uw2c7yrot1l8","content":"<p><br></p>\n<blockquote>\n<p>总想搭个博客写点什么，一直都没有坚持下来。希望这次能够坚持写下去~</p>\n</blockquote>\n<p>我不是一个有趣的人，周末还是想赖在家里，但现在不会熬夜到一两点才睡。<br>我会在这里分享一些自己在前端开发过程中遇到的坑和一些生活中遇到的有趣的事。<br>我准备让自己变的更加有趣~</p>\n<p><div style=\"display: none;\"><p style=\"text-align: center;margin-bottom: 10px;\"><b>Roll the dice</b></p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">otherwise, don’t even start.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">this could mean losing girlfriends, wives, relatives, jobs</p><p style=\"text-align: center;margin-bottom: 10px;\">and maybe your mind.</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean not eating for 3 or 4 days.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean freezing on a park bench.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean jail,it could mean derision,</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean mockery,isolation.</p><p style=\"text-align: center;margin-bottom: 10px;\">isolation is the gift,</p><p style=\"text-align: center;margin-bottom: 10px;\">all the others are a test of your endurance,</p><p style=\"text-align: center;margin-bottom: 10px;\">of how much you really want to do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">and you’ll do it</p><p style=\"text-align: center;margin-bottom: 10px;\">despite rejection and the worst odds</p><p style=\"text-align: center;margin-bottom: 10px;\">and it will be better than anything else you can imagine.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try,</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">there is no other feeling like that.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will be alone with the gods and the nights will flame with fire.</p><p style=\"text-align: center;margin-bottom: 10px;\">do it, do it, do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will ride life straight to perfect laughter,</p><p style=\"text-align: center;margin-bottom: 10px;\">it’s the only good fight</p><p style=\"text-align: center;margin-bottom: 10px;\">there is.</p><p style=\"text-align: right;\">- Charles Bukowski</p></div><audio src=\"http://ydschool-online.nos.netease.com/1483954760832NO.25+Roll+the+dice.mp3\" autoplay style=\"display: none;position: absolute;top: -1000px;\"></audio><br><br></p>\n<p>昵称：togor<br>信封：flyfish_doc@163.com<br>坐标：杭州</p>\n","site":{"data":{}},"excerpt":"","more":"<p><br></p>\n<blockquote>\n<p>总想搭个博客写点什么，一直都没有坚持下来。希望这次能够坚持写下去~</p>\n</blockquote>\n<p>我不是一个有趣的人，周末还是想赖在家里，但现在不会熬夜到一两点才睡。<br>我会在这里分享一些自己在前端开发过程中遇到的坑和一些生活中遇到的有趣的事。<br>我准备让自己变的更加有趣~</p>\n<p><div style=\"display: none;\"><p style=\"text-align: center;margin-bottom: 10px;\"><b>Roll the dice</b></p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">otherwise, don’t even start.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try, go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">this could mean losing girlfriends, wives, relatives, jobs</p><p style=\"text-align: center;margin-bottom: 10px;\">and maybe your mind.</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean not eating for 3 or 4 days.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean freezing on a park bench.</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean jail,it could mean derision,</p><p style=\"text-align: center;margin-bottom: 10px;\">it could mean mockery,isolation.</p><p style=\"text-align: center;margin-bottom: 10px;\">isolation is the gift,</p><p style=\"text-align: center;margin-bottom: 10px;\">all the others are a test of your endurance,</p><p style=\"text-align: center;margin-bottom: 10px;\">of how much you really want to do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">and you’ll do it</p><p style=\"text-align: center;margin-bottom: 10px;\">despite rejection and the worst odds</p><p style=\"text-align: center;margin-bottom: 10px;\">and it will be better than anything else you can imagine.</p><p style=\"text-align: center;margin-bottom: 10px;\">if you’re going to try,</p><p style=\"text-align: center;margin-bottom: 10px;\">go all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">there is no other feeling like that.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will be alone with the gods and the nights will flame with fire.</p><p style=\"text-align: center;margin-bottom: 10px;\">do it, do it, do it.</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way</p><p style=\"text-align: center;margin-bottom: 10px;\">all the way.</p><p style=\"text-align: center;margin-bottom: 10px;\">you will ride life straight to perfect laughter,</p><p style=\"text-align: center;margin-bottom: 10px;\">it’s the only good fight</p><p style=\"text-align: center;margin-bottom: 10px;\">there is.</p><p style=\"text-align: right;\">- Charles Bukowski</p></div><audio src=\"http://ydschool-online.nos.netease.com/1483954760832NO.25+Roll+the+dice.mp3\" autoplay style=\"display: none;position: absolute;top: -1000px;\"></audio><br><br></p>\n<p>昵称：togor<br>信封：flyfish_doc@163.com<br>坐标：杭州</p>\n"},{"title":"tags","date":"2017-06-23T08:42:17.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-23 16:42:17\ntype: \"tags\"\n---","updated":"2017-06-25T10:00:45.575Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjh2069v10007uw2cpzmwkzp1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"相册","date":"2017-06-27T01:50:28.000Z","type":"pic","_content":"<style>\n\t.pic-list,.pic-list li{margin: 0;padding: 0;list-style: none;}\n</style>\n<ul class=\"pic-list\">\n\t<li>1</li>\n</ul>","source":"pic/index.md","raw":"---\ntitle: 相册\ndate: 2017-06-27 09:50:28\ntype: pic\n---\n<style>\n\t.pic-list,.pic-list li{margin: 0;padding: 0;list-style: none;}\n</style>\n<ul class=\"pic-list\">\n\t<li>1</li>\n</ul>","updated":"2017-06-27T02:33:24.496Z","path":"pic/index.html","comments":1,"layout":"page","_id":"cjh2069v20009uw2ca6pgxffo","content":"<p><style><br>    .pic-list,.pic-list li{margin: 0;padding: 0;list-style: none;}<br></style></p>\n<ul class=\"pic-list\"><br>    <li>1</li><br></ul>","site":{"data":{}},"excerpt":"","more":"<p><style><br>    .pic-list,.pic-list li{margin: 0;padding: 0;list-style: none;}<br></style></p>\n<ul class=\"pic-list\"><br>    <li>1</li><br></ul>"}],"Post":[{"title":"MarkDown使用笔记","date":"2017-06-23T09:20:56.000Z","_content":"\n##### 空行\n```\n<br/>\n```\n\n##### 引用\n```\n>\n```\n\n##### 加粗\n```\n**加粗文本**\n__加粗文本__\n```\n\n##### 斜体\n```\n*斜体文本*\n_斜体文本_\n```\n\n##### 链接\n```\n\t文字链接：[keer](https://ahxdg.github.io/)\n\t图片链接：![我的头像](/images/avatar.jpg)\n```\n\n##### 列表\n```\n\t无序列表：* 列表内容\n\t无序列表：+ 列表内容\n\t无序列表：- 列表内容\n\n\t嵌套使用：* 列表一\n      \t    * 列表二\n\n\t有序列表：1. 列表内容\n\n\t正常情况下输入\" 1986. What a great season \"，会显示一个有序列表，但如果只是想显示文案形式的文字，\n\t可以使用转义字符\"\\\"，即：1986\\. What a great season\n\n\t注意：中间有空格\n```\n\n##### 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n...\n```\n###### 特殊的标题\n```\nMarkdown还支持Setext和atx风格的标题\n\nSetext格式的写法：\n\t这是Setext格式的标题\n\t====================\n\n\t这是Setext格式的副标题\n\t--------------------\n注：(=/-两个以上，且必须跟在标题下面)\n```\n\n##### 表格\n```\n | Tables    | address   |\n | --------- | :-------: |\n | tab       | china     |\n\n 或者：\n\n | Tables    | address   |\n | :-------- | :-------- |\n | tab       | china     |\n```\n\n##### 虚线/分割线\n```\n\t----\n\t****\n\t____\n\n\t注：(3个以上，“-”符号上面一行必须是空行，如果上面一行有文字，则会把上面一行当成一个标题)\n```\n\n\n##### 代码块\n```\n单行代码：\n\t$这里是单行代码$\n\n多行代码：\n\t $$$\n\t 这里是多行代码块\n\t $$$\n\n注：这里的\" $ \"代替\" ` \"\n```\n\n##### 上标/下标\n```\n\t上标和下标在Markdown中没有特殊的标记形式，不过我们可以通过html标签来书写。\n\t上标：<sup>这是上标<sup>\n\t下标：<sub>这是下标<sub>\n```\n\n##### 特殊字符\n```\n\t® - &reg;\n\t© - &copy;\n\t& - &amp;\n\t< - &lt;\n\t> - &gt;\n```\n\n##### 下划线/删除线\n```\n下划线：\n\tMarkdown中没有默认的下划线标记形式，不过一些扩展中有（自行搜索）\n\t不过和上标/下标一样，可以利用html标签来实现：\n\t<u>这段文字有下划线</u>\n\n删除线：\n  \t~~这里删除的文字~~\n\n注：由于u标签已经不被推荐使用，还是尽量避免。（一般链接都带有下划线，避免混淆）\n```\n\n##### 缩进\n```\n\tMarkdown中没有缩进，写过html的很容易想到用两个或四个&nbsp;解决问题。\n\t但你会发现，再多的&nbsp;都没有用。怎么办？\n\t很简单，你可以用半角的空格：&ensp;或者是全角的空格：&emsp;\n\n\t注：&ensp;只占一个空格，&emsp;占两个空格。\n```","source":"_posts/MarkDown使用笔记.md","raw":"---\ntitle: MarkDown使用笔记\ndate: 2017-06-23 17:20:56\ntags: [笔记]\n---\n\n##### 空行\n```\n<br/>\n```\n\n##### 引用\n```\n>\n```\n\n##### 加粗\n```\n**加粗文本**\n__加粗文本__\n```\n\n##### 斜体\n```\n*斜体文本*\n_斜体文本_\n```\n\n##### 链接\n```\n\t文字链接：[keer](https://ahxdg.github.io/)\n\t图片链接：![我的头像](/images/avatar.jpg)\n```\n\n##### 列表\n```\n\t无序列表：* 列表内容\n\t无序列表：+ 列表内容\n\t无序列表：- 列表内容\n\n\t嵌套使用：* 列表一\n      \t    * 列表二\n\n\t有序列表：1. 列表内容\n\n\t正常情况下输入\" 1986. What a great season \"，会显示一个有序列表，但如果只是想显示文案形式的文字，\n\t可以使用转义字符\"\\\"，即：1986\\. What a great season\n\n\t注意：中间有空格\n```\n\n##### 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n...\n```\n###### 特殊的标题\n```\nMarkdown还支持Setext和atx风格的标题\n\nSetext格式的写法：\n\t这是Setext格式的标题\n\t====================\n\n\t这是Setext格式的副标题\n\t--------------------\n注：(=/-两个以上，且必须跟在标题下面)\n```\n\n##### 表格\n```\n | Tables    | address   |\n | --------- | :-------: |\n | tab       | china     |\n\n 或者：\n\n | Tables    | address   |\n | :-------- | :-------- |\n | tab       | china     |\n```\n\n##### 虚线/分割线\n```\n\t----\n\t****\n\t____\n\n\t注：(3个以上，“-”符号上面一行必须是空行，如果上面一行有文字，则会把上面一行当成一个标题)\n```\n\n\n##### 代码块\n```\n单行代码：\n\t$这里是单行代码$\n\n多行代码：\n\t $$$\n\t 这里是多行代码块\n\t $$$\n\n注：这里的\" $ \"代替\" ` \"\n```\n\n##### 上标/下标\n```\n\t上标和下标在Markdown中没有特殊的标记形式，不过我们可以通过html标签来书写。\n\t上标：<sup>这是上标<sup>\n\t下标：<sub>这是下标<sub>\n```\n\n##### 特殊字符\n```\n\t® - &reg;\n\t© - &copy;\n\t& - &amp;\n\t< - &lt;\n\t> - &gt;\n```\n\n##### 下划线/删除线\n```\n下划线：\n\tMarkdown中没有默认的下划线标记形式，不过一些扩展中有（自行搜索）\n\t不过和上标/下标一样，可以利用html标签来实现：\n\t<u>这段文字有下划线</u>\n\n删除线：\n  \t~~这里删除的文字~~\n\n注：由于u标签已经不被推荐使用，还是尽量避免。（一般链接都带有下划线，避免混淆）\n```\n\n##### 缩进\n```\n\tMarkdown中没有缩进，写过html的很容易想到用两个或四个&nbsp;解决问题。\n\t但你会发现，再多的&nbsp;都没有用。怎么办？\n\t很简单，你可以用半角的空格：&ensp;或者是全角的空格：&emsp;\n\n\t注：&ensp;只占一个空格，&emsp;占两个空格。\n```","slug":"MarkDown使用笔记","published":1,"updated":"2017-06-25T09:53:58.095Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069uo0001uw2c0hfz10vv","content":"<h5 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;br/&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">**加粗文本**</div><div class=\"line\">__加粗文本__</div></pre></td></tr></table></figure>\n<h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">*斜体文本*</div><div class=\"line\">_斜体文本_</div></pre></td></tr></table></figure>\n<h5 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">文字链接：[keer](https://ahxdg.github.io/)</div><div class=\"line\">图片链接：![我的头像](/images/avatar.jpg)</div></pre></td></tr></table></figure>\n<h5 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">无序列表：* 列表内容</div><div class=\"line\">无序列表：+ 列表内容</div><div class=\"line\">无序列表：- 列表内容</div><div class=\"line\"></div><div class=\"line\">嵌套使用：* 列表一</div><div class=\"line\">     \t    * 列表二</div><div class=\"line\"></div><div class=\"line\">有序列表：1. 列表内容</div><div class=\"line\"></div><div class=\"line\">正常情况下输入&quot; 1986. What a great season &quot;，会显示一个有序列表，但如果只是想显示文案形式的文字，</div><div class=\"line\">可以使用转义字符&quot;\\&quot;，即：1986\\. What a great season</div><div class=\"line\"></div><div class=\"line\">注意：中间有空格</div></pre></td></tr></table></figure>\n<h5 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h6 id=\"特殊的标题\"><a href=\"#特殊的标题\" class=\"headerlink\" title=\"特殊的标题\"></a>特殊的标题</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown还支持Setext和atx风格的标题</div><div class=\"line\"></div><div class=\"line\">Setext格式的写法：</div><div class=\"line\">\t这是Setext格式的标题</div><div class=\"line\">\t====================</div><div class=\"line\"></div><div class=\"line\">\t这是Setext格式的副标题</div><div class=\"line\">\t--------------------</div><div class=\"line\">注：(=/-两个以上，且必须跟在标题下面)</div></pre></td></tr></table></figure>\n<h5 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables    | address   |</div><div class=\"line\">| --------- | :-------: |</div><div class=\"line\">| tab       | china     |</div><div class=\"line\"></div><div class=\"line\">或者：</div><div class=\"line\"></div><div class=\"line\">| Tables    | address   |</div><div class=\"line\">| :-------- | :-------- |</div><div class=\"line\">| tab       | china     |</div></pre></td></tr></table></figure>\n<h5 id=\"虚线-分割线\"><a href=\"#虚线-分割线\" class=\"headerlink\" title=\"虚线/分割线\"></a>虚线/分割线</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">----</div><div class=\"line\">****</div><div class=\"line\">____</div><div class=\"line\"></div><div class=\"line\">注：(3个以上，“-”符号上面一行必须是空行，如果上面一行有文字，则会把上面一行当成一个标题)</div></pre></td></tr></table></figure>\n<h5 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">单行代码：</div><div class=\"line\">\t$这里是单行代码$</div><div class=\"line\"></div><div class=\"line\">多行代码：</div><div class=\"line\">\t $$$</div><div class=\"line\">\t 这里是多行代码块</div><div class=\"line\">\t $$$</div><div class=\"line\"></div><div class=\"line\">注：这里的&quot; $ &quot;代替&quot; ` &quot;</div></pre></td></tr></table></figure>\n<h5 id=\"上标-下标\"><a href=\"#上标-下标\" class=\"headerlink\" title=\"上标/下标\"></a>上标/下标</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">上标和下标在Markdown中没有特殊的标记形式，不过我们可以通过html标签来书写。</div><div class=\"line\">上标：&lt;sup&gt;这是上标&lt;sup&gt;</div><div class=\"line\">下标：&lt;sub&gt;这是下标&lt;sub&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">® - &amp;reg;</div><div class=\"line\">© - &amp;copy;</div><div class=\"line\">&amp; - &amp;amp;</div><div class=\"line\">&lt; - &amp;lt;</div><div class=\"line\">&gt; - &amp;gt;</div></pre></td></tr></table></figure>\n<h5 id=\"下划线-删除线\"><a href=\"#下划线-删除线\" class=\"headerlink\" title=\"下划线/删除线\"></a>下划线/删除线</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">下划线：</div><div class=\"line\">\tMarkdown中没有默认的下划线标记形式，不过一些扩展中有（自行搜索）</div><div class=\"line\">\t不过和上标/下标一样，可以利用html标签来实现：</div><div class=\"line\">\t&lt;u&gt;这段文字有下划线&lt;/u&gt;</div><div class=\"line\"></div><div class=\"line\">删除线：</div><div class=\"line\">  \t~~这里删除的文字~~</div><div class=\"line\"></div><div class=\"line\">注：由于u标签已经不被推荐使用，还是尽量避免。（一般链接都带有下划线，避免混淆）</div></pre></td></tr></table></figure>\n<h5 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown中没有缩进，写过html的很容易想到用两个或四个&amp;nbsp;解决问题。</div><div class=\"line\">但你会发现，再多的&amp;nbsp;都没有用。怎么办？</div><div class=\"line\">很简单，你可以用半角的空格：&amp;ensp;或者是全角的空格：&amp;emsp;</div><div class=\"line\"></div><div class=\"line\">注：&amp;ensp;只占一个空格，&amp;emsp;占两个空格。</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5 id=\"空行\"><a href=\"#空行\" class=\"headerlink\" title=\"空行\"></a>空行</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;br/&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">**加粗文本**</div><div class=\"line\">__加粗文本__</div></pre></td></tr></table></figure>\n<h5 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">*斜体文本*</div><div class=\"line\">_斜体文本_</div></pre></td></tr></table></figure>\n<h5 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">文字链接：[keer](https://ahxdg.github.io/)</div><div class=\"line\">图片链接：![我的头像](/images/avatar.jpg)</div></pre></td></tr></table></figure>\n<h5 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">无序列表：* 列表内容</div><div class=\"line\">无序列表：+ 列表内容</div><div class=\"line\">无序列表：- 列表内容</div><div class=\"line\"></div><div class=\"line\">嵌套使用：* 列表一</div><div class=\"line\">     \t    * 列表二</div><div class=\"line\"></div><div class=\"line\">有序列表：1. 列表内容</div><div class=\"line\"></div><div class=\"line\">正常情况下输入&quot; 1986. What a great season &quot;，会显示一个有序列表，但如果只是想显示文案形式的文字，</div><div class=\"line\">可以使用转义字符&quot;\\&quot;，即：1986\\. What a great season</div><div class=\"line\"></div><div class=\"line\">注意：中间有空格</div></pre></td></tr></table></figure>\n<h5 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 一级标题</div><div class=\"line\">## 二级标题</div><div class=\"line\">### 三级标题</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h6 id=\"特殊的标题\"><a href=\"#特殊的标题\" class=\"headerlink\" title=\"特殊的标题\"></a>特殊的标题</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown还支持Setext和atx风格的标题</div><div class=\"line\"></div><div class=\"line\">Setext格式的写法：</div><div class=\"line\">\t这是Setext格式的标题</div><div class=\"line\">\t====================</div><div class=\"line\"></div><div class=\"line\">\t这是Setext格式的副标题</div><div class=\"line\">\t--------------------</div><div class=\"line\">注：(=/-两个以上，且必须跟在标题下面)</div></pre></td></tr></table></figure>\n<h5 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">| Tables    | address   |</div><div class=\"line\">| --------- | :-------: |</div><div class=\"line\">| tab       | china     |</div><div class=\"line\"></div><div class=\"line\">或者：</div><div class=\"line\"></div><div class=\"line\">| Tables    | address   |</div><div class=\"line\">| :-------- | :-------- |</div><div class=\"line\">| tab       | china     |</div></pre></td></tr></table></figure>\n<h5 id=\"虚线-分割线\"><a href=\"#虚线-分割线\" class=\"headerlink\" title=\"虚线/分割线\"></a>虚线/分割线</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">----</div><div class=\"line\">****</div><div class=\"line\">____</div><div class=\"line\"></div><div class=\"line\">注：(3个以上，“-”符号上面一行必须是空行，如果上面一行有文字，则会把上面一行当成一个标题)</div></pre></td></tr></table></figure>\n<h5 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">单行代码：</div><div class=\"line\">\t$这里是单行代码$</div><div class=\"line\"></div><div class=\"line\">多行代码：</div><div class=\"line\">\t $$$</div><div class=\"line\">\t 这里是多行代码块</div><div class=\"line\">\t $$$</div><div class=\"line\"></div><div class=\"line\">注：这里的&quot; $ &quot;代替&quot; ` &quot;</div></pre></td></tr></table></figure>\n<h5 id=\"上标-下标\"><a href=\"#上标-下标\" class=\"headerlink\" title=\"上标/下标\"></a>上标/下标</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">上标和下标在Markdown中没有特殊的标记形式，不过我们可以通过html标签来书写。</div><div class=\"line\">上标：&lt;sup&gt;这是上标&lt;sup&gt;</div><div class=\"line\">下标：&lt;sub&gt;这是下标&lt;sub&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">® - &amp;reg;</div><div class=\"line\">© - &amp;copy;</div><div class=\"line\">&amp; - &amp;amp;</div><div class=\"line\">&lt; - &amp;lt;</div><div class=\"line\">&gt; - &amp;gt;</div></pre></td></tr></table></figure>\n<h5 id=\"下划线-删除线\"><a href=\"#下划线-删除线\" class=\"headerlink\" title=\"下划线/删除线\"></a>下划线/删除线</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">下划线：</div><div class=\"line\">\tMarkdown中没有默认的下划线标记形式，不过一些扩展中有（自行搜索）</div><div class=\"line\">\t不过和上标/下标一样，可以利用html标签来实现：</div><div class=\"line\">\t&lt;u&gt;这段文字有下划线&lt;/u&gt;</div><div class=\"line\"></div><div class=\"line\">删除线：</div><div class=\"line\">  \t~~这里删除的文字~~</div><div class=\"line\"></div><div class=\"line\">注：由于u标签已经不被推荐使用，还是尽量避免。（一般链接都带有下划线，避免混淆）</div></pre></td></tr></table></figure>\n<h5 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Markdown中没有缩进，写过html的很容易想到用两个或四个&amp;nbsp;解决问题。</div><div class=\"line\">但你会发现，再多的&amp;nbsp;都没有用。怎么办？</div><div class=\"line\">很简单，你可以用半角的空格：&amp;ensp;或者是全角的空格：&amp;emsp;</div><div class=\"line\"></div><div class=\"line\">注：&amp;ensp;只占一个空格，&amp;emsp;占两个空格。</div></pre></td></tr></table></figure>"},{"title":"FlexPaper无法播放跨域的swf文件","date":"2018-04-11T07:33:50.000Z","_content":"\n> 今天接到一个问题，公司有个项目使用了flexpaper，做文档展示。但无法正常显示swf文件\n\n其实，如果在本地先做好demo，问题可能就很快被发现的。\n但是，由于这个项目三个人参与，且后端代码，前端代码和静态资源（swf文件）分别由三个人负责，所以问题一直没有被发现，因为不清楚到底是谁那里出了问题。\n\n中午接到问题时，我也是一脸懵逼，因为刚进来，根本不知道这个项目。\n\n**处理过程：**\n\n1，先把前端代码拿到手，配置好打开发现只是一个样式demo，并没有flexpaper。索性在本地写一个flexpaper的demo\n\n2，找到后端负责人（因为他在开发这个项目，并且是套的前端代码），拿到他的开发环境，浏览器打开发现只是未显示swf文件，并没有报错。\n\n3，找到负责swf文件的人，从他那里copy了一份。直接拖到chrome浏览器发现是直接下载，又拖到360浏览器，可以正常打开，**排除文件出错**。\n\n\n由于是参照后端的项目写的demo，代码中引入的FlexPaperViewer.swf是服务器上的文件，而播放的swf是本地的文件，所以报了一个错误：\n```js\nGET http://192.168.0.180:8078/crossdomain.xml 404 (Not Found)\n```\n\n从报错信息中可以得知，是跨域问题。\n\n修改FlexPaperViewer.swf的引入路径，把FlexPaperViewer.swf文件下载到本地，引入本地的FlexPaperViewer.swf试一下，可以正常打开。\n\n**也就是说：当我们引入FlexPaperViewer文件时，对于需要播放的swf文件必须是在同一个域名下，不然就会出现上面的错误。**\n\n\n当然，除此之外还有别的解决方案：就是上面报错的信息中所提到的crossdomain.xml文件，当FlexPaperViewer文件和需要播放的swf文件在不同域时，我们可以在需要播放的swf文件所在域的根目录下添加一个crossdomain.xml：\n```xml\n<?xml version=\"1.0\"?>\n<cross-domain-policy>\n   <allow-access-from domain=\"FlexPaperViewer文件所在的域\" />\n</cross-domain-policy>\n```\n意思是：允许FlexPaperViewer文件所在的域对本域名下的文件进行跨域请求，这样就不会报错了。","source":"_posts/FlexPaper无法播放跨域的swf文件.md","raw":"---\ntitle: FlexPaper无法播放跨域的swf文件\ndate: 2018-04-11 15:33:50\ntags:\n---\n\n> 今天接到一个问题，公司有个项目使用了flexpaper，做文档展示。但无法正常显示swf文件\n\n其实，如果在本地先做好demo，问题可能就很快被发现的。\n但是，由于这个项目三个人参与，且后端代码，前端代码和静态资源（swf文件）分别由三个人负责，所以问题一直没有被发现，因为不清楚到底是谁那里出了问题。\n\n中午接到问题时，我也是一脸懵逼，因为刚进来，根本不知道这个项目。\n\n**处理过程：**\n\n1，先把前端代码拿到手，配置好打开发现只是一个样式demo，并没有flexpaper。索性在本地写一个flexpaper的demo\n\n2，找到后端负责人（因为他在开发这个项目，并且是套的前端代码），拿到他的开发环境，浏览器打开发现只是未显示swf文件，并没有报错。\n\n3，找到负责swf文件的人，从他那里copy了一份。直接拖到chrome浏览器发现是直接下载，又拖到360浏览器，可以正常打开，**排除文件出错**。\n\n\n由于是参照后端的项目写的demo，代码中引入的FlexPaperViewer.swf是服务器上的文件，而播放的swf是本地的文件，所以报了一个错误：\n```js\nGET http://192.168.0.180:8078/crossdomain.xml 404 (Not Found)\n```\n\n从报错信息中可以得知，是跨域问题。\n\n修改FlexPaperViewer.swf的引入路径，把FlexPaperViewer.swf文件下载到本地，引入本地的FlexPaperViewer.swf试一下，可以正常打开。\n\n**也就是说：当我们引入FlexPaperViewer文件时，对于需要播放的swf文件必须是在同一个域名下，不然就会出现上面的错误。**\n\n\n当然，除此之外还有别的解决方案：就是上面报错的信息中所提到的crossdomain.xml文件，当FlexPaperViewer文件和需要播放的swf文件在不同域时，我们可以在需要播放的swf文件所在域的根目录下添加一个crossdomain.xml：\n```xml\n<?xml version=\"1.0\"?>\n<cross-domain-policy>\n   <allow-access-from domain=\"FlexPaperViewer文件所在的域\" />\n</cross-domain-policy>\n```\n意思是：允许FlexPaperViewer文件所在的域对本域名下的文件进行跨域请求，这样就不会报错了。","slug":"FlexPaper无法播放跨域的swf文件","published":1,"updated":"2018-04-11T08:06:25.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069uv0003uw2cai30knqm","content":"<blockquote>\n<p>今天接到一个问题，公司有个项目使用了flexpaper，做文档展示。但无法正常显示swf文件</p>\n</blockquote>\n<p>其实，如果在本地先做好demo，问题可能就很快被发现的。<br>但是，由于这个项目三个人参与，且后端代码，前端代码和静态资源（swf文件）分别由三个人负责，所以问题一直没有被发现，因为不清楚到底是谁那里出了问题。</p>\n<p>中午接到问题时，我也是一脸懵逼，因为刚进来，根本不知道这个项目。</p>\n<p><strong>处理过程：</strong></p>\n<p>1，先把前端代码拿到手，配置好打开发现只是一个样式demo，并没有flexpaper。索性在本地写一个flexpaper的demo</p>\n<p>2，找到后端负责人（因为他在开发这个项目，并且是套的前端代码），拿到他的开发环境，浏览器打开发现只是未显示swf文件，并没有报错。</p>\n<p>3，找到负责swf文件的人，从他那里copy了一份。直接拖到chrome浏览器发现是直接下载，又拖到360浏览器，可以正常打开，<strong>排除文件出错</strong>。</p>\n<p>由于是参照后端的项目写的demo，代码中引入的FlexPaperViewer.swf是服务器上的文件，而播放的swf是本地的文件，所以报了一个错误：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">GET http:<span class=\"comment\">//192.168.0.180:8078/crossdomain.xml 404 (Not Found)</span></div></pre></td></tr></table></figure></p>\n<p>从报错信息中可以得知，是跨域问题。</p>\n<p>修改FlexPaperViewer.swf的引入路径，把FlexPaperViewer.swf文件下载到本地，引入本地的FlexPaperViewer.swf试一下，可以正常打开。</p>\n<p><strong>也就是说：当我们引入FlexPaperViewer文件时，对于需要播放的swf文件必须是在同一个域名下，不然就会出现上面的错误。</strong></p>\n<p>当然，除此之外还有别的解决方案：就是上面报错的信息中所提到的crossdomain.xml文件，当FlexPaperViewer文件和需要播放的swf文件在不同域时，我们可以在需要播放的swf文件所在域的根目录下添加一个crossdomain.xml：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cross-domain-policy</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">allow-access-from</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"FlexPaperViewer文件所在的域\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">cross-domain-policy</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>意思是：允许FlexPaperViewer文件所在的域对本域名下的文件进行跨域请求，这样就不会报错了。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>今天接到一个问题，公司有个项目使用了flexpaper，做文档展示。但无法正常显示swf文件</p>\n</blockquote>\n<p>其实，如果在本地先做好demo，问题可能就很快被发现的。<br>但是，由于这个项目三个人参与，且后端代码，前端代码和静态资源（swf文件）分别由三个人负责，所以问题一直没有被发现，因为不清楚到底是谁那里出了问题。</p>\n<p>中午接到问题时，我也是一脸懵逼，因为刚进来，根本不知道这个项目。</p>\n<p><strong>处理过程：</strong></p>\n<p>1，先把前端代码拿到手，配置好打开发现只是一个样式demo，并没有flexpaper。索性在本地写一个flexpaper的demo</p>\n<p>2，找到后端负责人（因为他在开发这个项目，并且是套的前端代码），拿到他的开发环境，浏览器打开发现只是未显示swf文件，并没有报错。</p>\n<p>3，找到负责swf文件的人，从他那里copy了一份。直接拖到chrome浏览器发现是直接下载，又拖到360浏览器，可以正常打开，<strong>排除文件出错</strong>。</p>\n<p>由于是参照后端的项目写的demo，代码中引入的FlexPaperViewer.swf是服务器上的文件，而播放的swf是本地的文件，所以报了一个错误：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">GET http:<span class=\"comment\">//192.168.0.180:8078/crossdomain.xml 404 (Not Found)</span></div></pre></td></tr></table></figure></p>\n<p>从报错信息中可以得知，是跨域问题。</p>\n<p>修改FlexPaperViewer.swf的引入路径，把FlexPaperViewer.swf文件下载到本地，引入本地的FlexPaperViewer.swf试一下，可以正常打开。</p>\n<p><strong>也就是说：当我们引入FlexPaperViewer文件时，对于需要播放的swf文件必须是在同一个域名下，不然就会出现上面的错误。</strong></p>\n<p>当然，除此之外还有别的解决方案：就是上面报错的信息中所提到的crossdomain.xml文件，当FlexPaperViewer文件和需要播放的swf文件在不同域时，我们可以在需要播放的swf文件所在域的根目录下添加一个crossdomain.xml：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cross-domain-policy</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">allow-access-from</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"FlexPaperViewer文件所在的域\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">cross-domain-policy</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>意思是：允许FlexPaperViewer文件所在的域对本域名下的文件进行跨域请求，这样就不会报错了。</p>\n"},{"title":"Life-without-love-之三色","date":"2017-11-27T13:33:40.000Z","_content":"\n闭眼皆盛世\n\n我们一路奋战，不是为了改变这个世界，而是为了不让世界改变我们。","source":"_posts/Life-without-love-之三色.md","raw":"---\ntitle: Life-without-love-之三色\ndate: 2017-11-27 21:33:40\ntags:\n\t- lwl\n---\n\n闭眼皆盛世\n\n我们一路奋战，不是为了改变这个世界，而是为了不让世界改变我们。","slug":"Life-without-love-之三色","published":1,"updated":"2018-05-11T13:44:38.707Z","_id":"cjh2069uy0006uw2cqg2dtg5v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>闭眼皆盛世</p>\n<p>我们一路奋战，不是为了改变这个世界，而是为了不让世界改变我们。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>闭眼皆盛世</p>\n<p>我们一路奋战，不是为了改变这个世界，而是为了不让世界改变我们。</p>\n"},{"title":"CrossDomain","date":"2017-07-28T07:28:02.000Z","_content":"\n> 今天有空，研究下跨域。\n\n##### 什么是跨域？\n\nA resource makes a cross-origin HTTP request when it requests a resource from a different domain, protocol, or port to its own. \n当从不同的域名、协议、端口向自身请求资源时，资源会产生跨源HTTP请求。即为跨域\n\n例如：在http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images\n\n为了安全考虑，浏览器都会遵循同源策略，因此web应用只会将http请求发到自己的域。而为了改善web应用，开发人员要求浏览器允许跨域请求。\n\n为什么说要求浏览器允许跨域请求，因为服务器本身是允许跨域请求的，只是浏览器有同源策略，当我们发起跨域请求时，浏览器会发送请求给别人家的服务器，如果别人家的服务器的返回头里有Access-Control-Allow-Origin:*，就表示允许跨域请求，那么我们才会得到返回的数据，否则，浏览器会自动过滤掉返回的数据，并告诉你跨域请求失败或错误的信息。\n\n##### 跨域方式\n\n1，","source":"_posts/CrossDomain.md","raw":"---\ntitle: CrossDomain\ndate: 2017-07-28 15:28:02\ntags:\n\t- 笔记\n---\n\n> 今天有空，研究下跨域。\n\n##### 什么是跨域？\n\nA resource makes a cross-origin HTTP request when it requests a resource from a different domain, protocol, or port to its own. \n当从不同的域名、协议、端口向自身请求资源时，资源会产生跨源HTTP请求。即为跨域\n\n例如：在http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images\n\n为了安全考虑，浏览器都会遵循同源策略，因此web应用只会将http请求发到自己的域。而为了改善web应用，开发人员要求浏览器允许跨域请求。\n\n为什么说要求浏览器允许跨域请求，因为服务器本身是允许跨域请求的，只是浏览器有同源策略，当我们发起跨域请求时，浏览器会发送请求给别人家的服务器，如果别人家的服务器的返回头里有Access-Control-Allow-Origin:*，就表示允许跨域请求，那么我们才会得到返回的数据，否则，浏览器会自动过滤掉返回的数据，并告诉你跨域请求失败或错误的信息。\n\n##### 跨域方式\n\n1，","slug":"CrossDomain","published":1,"updated":"2017-07-28T09:16:52.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v10008uw2cxysmqwan","content":"<blockquote>\n<p>今天有空，研究下跨域。</p>\n</blockquote>\n<h5 id=\"什么是跨域？\"><a href=\"#什么是跨域？\" class=\"headerlink\" title=\"什么是跨域？\"></a>什么是跨域？</h5><p>A resource makes a cross-origin HTTP request when it requests a resource from a different domain, protocol, or port to its own.<br>当从不同的域名、协议、端口向自身请求资源时，资源会产生跨源HTTP请求。即为跨域</p>\n<p>例如：在<a href=\"http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images\" target=\"_blank\" rel=\"external\">http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images</a></p>\n<p>为了安全考虑，浏览器都会遵循同源策略，因此web应用只会将http请求发到自己的域。而为了改善web应用，开发人员要求浏览器允许跨域请求。</p>\n<p>为什么说要求浏览器允许跨域请求，因为服务器本身是允许跨域请求的，只是浏览器有同源策略，当我们发起跨域请求时，浏览器会发送请求给别人家的服务器，如果别人家的服务器的返回头里有Access-Control-Allow-Origin:*，就表示允许跨域请求，那么我们才会得到返回的数据，否则，浏览器会自动过滤掉返回的数据，并告诉你跨域请求失败或错误的信息。</p>\n<h5 id=\"跨域方式\"><a href=\"#跨域方式\" class=\"headerlink\" title=\"跨域方式\"></a>跨域方式</h5><p>1，</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>今天有空，研究下跨域。</p>\n</blockquote>\n<h5 id=\"什么是跨域？\"><a href=\"#什么是跨域？\" class=\"headerlink\" title=\"什么是跨域？\"></a>什么是跨域？</h5><p>A resource makes a cross-origin HTTP request when it requests a resource from a different domain, protocol, or port to its own.<br>当从不同的域名、协议、端口向自身请求资源时，资源会产生跨源HTTP请求。即为跨域</p>\n<p>例如：在<a href=\"http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images\" target=\"_blank\" rel=\"external\">http://domain-a.com上的一个页面请求http://domain-b.com/image.jpg，而如今许多页面都会有类似的请求，如：css/js/images</a></p>\n<p>为了安全考虑，浏览器都会遵循同源策略，因此web应用只会将http请求发到自己的域。而为了改善web应用，开发人员要求浏览器允许跨域请求。</p>\n<p>为什么说要求浏览器允许跨域请求，因为服务器本身是允许跨域请求的，只是浏览器有同源策略，当我们发起跨域请求时，浏览器会发送请求给别人家的服务器，如果别人家的服务器的返回头里有Access-Control-Allow-Origin:*，就表示允许跨域请求，那么我们才会得到返回的数据，否则，浏览器会自动过滤掉返回的数据，并告诉你跨域请求失败或错误的信息。</p>\n<h5 id=\"跨域方式\"><a href=\"#跨域方式\" class=\"headerlink\" title=\"跨域方式\"></a>跨域方式</h5><p>1，</p>\n"},{"title":"Tips of the Sublime","date":"2017-12-01T08:10:17.000Z","_content":"\n> 用sublime也快两年了，知道sublime对于前端开发是很方便的。但自己对于sublime的快捷键和插件等却从没有认真思考和学习过...\n\n这里，暂时简单记录一下，自己平常使用到快捷方式和插件。以便再日后使用时，可以方便查找。\n\n\n##### 快捷键 (windows)\n\n```avrasm\nCtrl + Shift + D\t复制一行\nCtrl  + D\t\t选中该文档中下一个与所有与当前被选中的内容一样的文本\nShift + Tab\t\t向前缩进一个Tab\nShift + Home\t\t选中本行光标之前的所有文本\nShift + End\t\t选中本行光标之后的所有文本\nDelete\t\t\t删除光标所在位置的后一个字符\nCtrl + Enter\t在该行后面插入一行，不影响当前行的内容\nCtrl + Shift + Enter\t在该行前面插入一行，不影响当前行的内容\nCtrl + ←\t\t光标向左移动一个单词，若是中文，则移至相连中文的第一个字前面\nCtrl + →\t\t光标向后移动一个单词，若是中文，则移至相连中文的第一个字后面\nCtrl + Shift + ↑\t向上移动一行\nCtrl + Shift + ↓\t向下移动一行\n\nAlt + Shfit + 数字 分屏\n\nCtrl + Shift + P\t打开命令面板\nCtrl + Shift + L\t在选中的多行末尾添加光标\nCtrl + P\t\t打开全局查找文件的面板\nCtrl + G\t\t定位到行\nCtrl + R\t\t定位到函数\nCtrl + Shift + F\t全局查找\n\n```\n\n注：在win10系統中，当自带输入法为中文时，无法使用Ctrl+Shift+F\n\n\n##### 插件\n\n###### Emmet\nEmmet是一款编辑器插件，可以极大地改善你的HTML和CSS工作流程。\n\n###### jsHint\njsHint js/json语法检查插件，帮你检查js的语法错误，让你的代码规范化。\n```\n// JSLint.sublime-settings（插件安装的目录下可以找到）\n{\n\t\"run_on_save\": true\t\t// 保存文件时自动检查\n}\n```\n\n###### HTML-CSS-JS Prettify\n让你的html,js,css,json代码更加优美。\n\n###### Less\n高亮显示less文件\n\n###### jade\n高亮显示jade\n\n###### LiveReload\n结合chrome浏览器，使sublime更改文件后具有自动刷新的功能\n\n###### Vue Syntax Highlight\n高亮显示Vue\n\n###### ReactJS\n高亮显示React\n\n###### Colorsublime\n为sublime提供多种主题\n\n###### Pretty JSON\njson文件格式化\n","source":"_posts/Tips-of-the-Sublime.md","raw":"---\ntitle: Tips of the Sublime\ndate: 2017-12-01 16:10:17\ntags:\n\t- tips\n---\n\n> 用sublime也快两年了，知道sublime对于前端开发是很方便的。但自己对于sublime的快捷键和插件等却从没有认真思考和学习过...\n\n这里，暂时简单记录一下，自己平常使用到快捷方式和插件。以便再日后使用时，可以方便查找。\n\n\n##### 快捷键 (windows)\n\n```avrasm\nCtrl + Shift + D\t复制一行\nCtrl  + D\t\t选中该文档中下一个与所有与当前被选中的内容一样的文本\nShift + Tab\t\t向前缩进一个Tab\nShift + Home\t\t选中本行光标之前的所有文本\nShift + End\t\t选中本行光标之后的所有文本\nDelete\t\t\t删除光标所在位置的后一个字符\nCtrl + Enter\t在该行后面插入一行，不影响当前行的内容\nCtrl + Shift + Enter\t在该行前面插入一行，不影响当前行的内容\nCtrl + ←\t\t光标向左移动一个单词，若是中文，则移至相连中文的第一个字前面\nCtrl + →\t\t光标向后移动一个单词，若是中文，则移至相连中文的第一个字后面\nCtrl + Shift + ↑\t向上移动一行\nCtrl + Shift + ↓\t向下移动一行\n\nAlt + Shfit + 数字 分屏\n\nCtrl + Shift + P\t打开命令面板\nCtrl + Shift + L\t在选中的多行末尾添加光标\nCtrl + P\t\t打开全局查找文件的面板\nCtrl + G\t\t定位到行\nCtrl + R\t\t定位到函数\nCtrl + Shift + F\t全局查找\n\n```\n\n注：在win10系統中，当自带输入法为中文时，无法使用Ctrl+Shift+F\n\n\n##### 插件\n\n###### Emmet\nEmmet是一款编辑器插件，可以极大地改善你的HTML和CSS工作流程。\n\n###### jsHint\njsHint js/json语法检查插件，帮你检查js的语法错误，让你的代码规范化。\n```\n// JSLint.sublime-settings（插件安装的目录下可以找到）\n{\n\t\"run_on_save\": true\t\t// 保存文件时自动检查\n}\n```\n\n###### HTML-CSS-JS Prettify\n让你的html,js,css,json代码更加优美。\n\n###### Less\n高亮显示less文件\n\n###### jade\n高亮显示jade\n\n###### LiveReload\n结合chrome浏览器，使sublime更改文件后具有自动刷新的功能\n\n###### Vue Syntax Highlight\n高亮显示Vue\n\n###### ReactJS\n高亮显示React\n\n###### Colorsublime\n为sublime提供多种主题\n\n###### Pretty JSON\njson文件格式化\n","slug":"Tips-of-the-Sublime","published":1,"updated":"2018-03-02T09:05:03.778Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v3000auw2cu7pm1n3o","content":"<blockquote>\n<p>用sublime也快两年了，知道sublime对于前端开发是很方便的。但自己对于sublime的快捷键和插件等却从没有认真思考和学习过…</p>\n</blockquote>\n<p>这里，暂时简单记录一下，自己平常使用到快捷方式和插件。以便再日后使用时，可以方便查找。</p>\n<h5 id=\"快捷键-windows\"><a href=\"#快捷键-windows\" class=\"headerlink\" title=\"快捷键 (windows)\"></a>快捷键 (windows)</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">Ctrl + Shift + D\t复制一行</div><div class=\"line\">Ctrl  + D\t\t选中该文档中下一个与所有与当前被选中的内容一样的文本</div><div class=\"line\">Shift + Tab\t\t向前缩进一个Tab</div><div class=\"line\">Shift + Home\t\t选中本行光标之前的所有文本</div><div class=\"line\">Shift + End\t\t选中本行光标之后的所有文本</div><div class=\"line\">Delete\t\t\t删除光标所在位置的后一个字符</div><div class=\"line\">Ctrl + Enter\t在该行后面插入一行，不影响当前行的内容</div><div class=\"line\">Ctrl + Shift + Enter\t在该行前面插入一行，不影响当前行的内容</div><div class=\"line\">Ctrl + ←\t\t光标向左移动一个单词，若是中文，则移至相连中文的第一个字前面</div><div class=\"line\">Ctrl + →\t\t光标向后移动一个单词，若是中文，则移至相连中文的第一个字后面</div><div class=\"line\">Ctrl + Shift + ↑\t向上移动一行</div><div class=\"line\">Ctrl + Shift + ↓\t向下移动一行</div><div class=\"line\"></div><div class=\"line\">Alt + Shfit + 数字 分屏</div><div class=\"line\"></div><div class=\"line\">Ctrl + Shift + P\t打开命令面板</div><div class=\"line\">Ctrl + Shift + L\t在选中的多行末尾添加光标</div><div class=\"line\">Ctrl + P\t\t打开全局查找文件的面板</div><div class=\"line\">Ctrl + G\t\t定位到行</div><div class=\"line\">Ctrl + R\t\t定位到函数</div><div class=\"line\">Ctrl + Shift + F\t全局查找</div></pre></td></tr></table></figure>\n<p>注：在win10系統中，当自带输入法为中文时，无法使用Ctrl+Shift+F</p>\n<h5 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h5><h6 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h6><p>Emmet是一款编辑器插件，可以极大地改善你的HTML和CSS工作流程。</p>\n<h6 id=\"jsHint\"><a href=\"#jsHint\" class=\"headerlink\" title=\"jsHint\"></a>jsHint</h6><p>jsHint js/json语法检查插件，帮你检查js的语法错误，让你的代码规范化。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">// JSLint.sublime-settings（插件安装的目录下可以找到）</div><div class=\"line\">&#123;</div><div class=\"line\">\t&quot;run_on_save&quot;: true\t\t// 保存文件时自动检查</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h6 id=\"HTML-CSS-JS-Prettify\"><a href=\"#HTML-CSS-JS-Prettify\" class=\"headerlink\" title=\"HTML-CSS-JS Prettify\"></a>HTML-CSS-JS Prettify</h6><p>让你的html,js,css,json代码更加优美。</p>\n<h6 id=\"Less\"><a href=\"#Less\" class=\"headerlink\" title=\"Less\"></a>Less</h6><p>高亮显示less文件</p>\n<h6 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade\"></a>jade</h6><p>高亮显示jade</p>\n<h6 id=\"LiveReload\"><a href=\"#LiveReload\" class=\"headerlink\" title=\"LiveReload\"></a>LiveReload</h6><p>结合chrome浏览器，使sublime更改文件后具有自动刷新的功能</p>\n<h6 id=\"Vue-Syntax-Highlight\"><a href=\"#Vue-Syntax-Highlight\" class=\"headerlink\" title=\"Vue Syntax Highlight\"></a>Vue Syntax Highlight</h6><p>高亮显示Vue</p>\n<h6 id=\"ReactJS\"><a href=\"#ReactJS\" class=\"headerlink\" title=\"ReactJS\"></a>ReactJS</h6><p>高亮显示React</p>\n<h6 id=\"Colorsublime\"><a href=\"#Colorsublime\" class=\"headerlink\" title=\"Colorsublime\"></a>Colorsublime</h6><p>为sublime提供多种主题</p>\n<h6 id=\"Pretty-JSON\"><a href=\"#Pretty-JSON\" class=\"headerlink\" title=\"Pretty JSON\"></a>Pretty JSON</h6><p>json文件格式化</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>用sublime也快两年了，知道sublime对于前端开发是很方便的。但自己对于sublime的快捷键和插件等却从没有认真思考和学习过…</p>\n</blockquote>\n<p>这里，暂时简单记录一下，自己平常使用到快捷方式和插件。以便再日后使用时，可以方便查找。</p>\n<h5 id=\"快捷键-windows\"><a href=\"#快捷键-windows\" class=\"headerlink\" title=\"快捷键 (windows)\"></a>快捷键 (windows)</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">Ctrl + Shift + D\t复制一行</div><div class=\"line\">Ctrl  + D\t\t选中该文档中下一个与所有与当前被选中的内容一样的文本</div><div class=\"line\">Shift + Tab\t\t向前缩进一个Tab</div><div class=\"line\">Shift + Home\t\t选中本行光标之前的所有文本</div><div class=\"line\">Shift + End\t\t选中本行光标之后的所有文本</div><div class=\"line\">Delete\t\t\t删除光标所在位置的后一个字符</div><div class=\"line\">Ctrl + Enter\t在该行后面插入一行，不影响当前行的内容</div><div class=\"line\">Ctrl + Shift + Enter\t在该行前面插入一行，不影响当前行的内容</div><div class=\"line\">Ctrl + ←\t\t光标向左移动一个单词，若是中文，则移至相连中文的第一个字前面</div><div class=\"line\">Ctrl + →\t\t光标向后移动一个单词，若是中文，则移至相连中文的第一个字后面</div><div class=\"line\">Ctrl + Shift + ↑\t向上移动一行</div><div class=\"line\">Ctrl + Shift + ↓\t向下移动一行</div><div class=\"line\"></div><div class=\"line\">Alt + Shfit + 数字 分屏</div><div class=\"line\"></div><div class=\"line\">Ctrl + Shift + P\t打开命令面板</div><div class=\"line\">Ctrl + Shift + L\t在选中的多行末尾添加光标</div><div class=\"line\">Ctrl + P\t\t打开全局查找文件的面板</div><div class=\"line\">Ctrl + G\t\t定位到行</div><div class=\"line\">Ctrl + R\t\t定位到函数</div><div class=\"line\">Ctrl + Shift + F\t全局查找</div></pre></td></tr></table></figure>\n<p>注：在win10系統中，当自带输入法为中文时，无法使用Ctrl+Shift+F</p>\n<h5 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h5><h6 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h6><p>Emmet是一款编辑器插件，可以极大地改善你的HTML和CSS工作流程。</p>\n<h6 id=\"jsHint\"><a href=\"#jsHint\" class=\"headerlink\" title=\"jsHint\"></a>jsHint</h6><p>jsHint js/json语法检查插件，帮你检查js的语法错误，让你的代码规范化。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">// JSLint.sublime-settings（插件安装的目录下可以找到）</div><div class=\"line\">&#123;</div><div class=\"line\">\t&quot;run_on_save&quot;: true\t\t// 保存文件时自动检查</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h6 id=\"HTML-CSS-JS-Prettify\"><a href=\"#HTML-CSS-JS-Prettify\" class=\"headerlink\" title=\"HTML-CSS-JS Prettify\"></a>HTML-CSS-JS Prettify</h6><p>让你的html,js,css,json代码更加优美。</p>\n<h6 id=\"Less\"><a href=\"#Less\" class=\"headerlink\" title=\"Less\"></a>Less</h6><p>高亮显示less文件</p>\n<h6 id=\"jade\"><a href=\"#jade\" class=\"headerlink\" title=\"jade\"></a>jade</h6><p>高亮显示jade</p>\n<h6 id=\"LiveReload\"><a href=\"#LiveReload\" class=\"headerlink\" title=\"LiveReload\"></a>LiveReload</h6><p>结合chrome浏览器，使sublime更改文件后具有自动刷新的功能</p>\n<h6 id=\"Vue-Syntax-Highlight\"><a href=\"#Vue-Syntax-Highlight\" class=\"headerlink\" title=\"Vue Syntax Highlight\"></a>Vue Syntax Highlight</h6><p>高亮显示Vue</p>\n<h6 id=\"ReactJS\"><a href=\"#ReactJS\" class=\"headerlink\" title=\"ReactJS\"></a>ReactJS</h6><p>高亮显示React</p>\n<h6 id=\"Colorsublime\"><a href=\"#Colorsublime\" class=\"headerlink\" title=\"Colorsublime\"></a>Colorsublime</h6><p>为sublime提供多种主题</p>\n<h6 id=\"Pretty-JSON\"><a href=\"#Pretty-JSON\" class=\"headerlink\" title=\"Pretty JSON\"></a>Pretty JSON</h6><p>json文件格式化</p>\n"},{"title":"hexo使用笔记","date":"2017-06-22T09:31:43.000Z","_content":"1，新建文章：**hexo new [filename]**\n2，删除文章：到source>_posts目录下，删除对应的md文件，重新生成静态文件。（网上没找到命令删除的方法^.^）\n3，更改默认头像：在主题的**配置文件**里找到avatar，再其后添加相应的图片地址即可。\n4，新建页面：**hexo new page [pagename]**\n\t&ensp;&ensp;例如：\n\t&emsp;&emsp;新建about页面：hexo new page about\n5，生成静态文件：**hexo generate**","source":"_posts/hexo使用笔记.md","raw":"---\ntitle: hexo使用笔记\ndate: 2017-06-22 17:31:43\ntags:\n  - 笔记\n---\n1，新建文章：**hexo new [filename]**\n2，删除文章：到source>_posts目录下，删除对应的md文件，重新生成静态文件。（网上没找到命令删除的方法^.^）\n3，更改默认头像：在主题的**配置文件**里找到avatar，再其后添加相应的图片地址即可。\n4，新建页面：**hexo new page [pagename]**\n\t&ensp;&ensp;例如：\n\t&emsp;&emsp;新建about页面：hexo new page about\n5，生成静态文件：**hexo generate**","slug":"hexo使用笔记","published":1,"updated":"2017-07-18T09:41:22.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v5000duw2ctgiyhx7x","content":"<p>1，新建文章：<strong>hexo new [filename]</strong><br>2，删除文章：到source&gt;_posts目录下，删除对应的md文件，重新生成静态文件。（网上没找到命令删除的方法^.^）<br>3，更改默认头像：在主题的<strong>配置文件</strong>里找到avatar，再其后添加相应的图片地址即可。<br>4，新建页面：<strong>hexo new page [pagename]</strong><br>    &ensp;&ensp;例如：<br>    &emsp;&emsp;新建about页面：hexo new page about<br>5，生成静态文件：<strong>hexo generate</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1，新建文章：<strong>hexo new [filename]</strong><br>2，删除文章：到source&gt;_posts目录下，删除对应的md文件，重新生成静态文件。（网上没找到命令删除的方法^.^）<br>3，更改默认头像：在主题的<strong>配置文件</strong>里找到avatar，再其后添加相应的图片地址即可。<br>4，新建页面：<strong>hexo new page [pagename]</strong><br>    &ensp;&ensp;例如：<br>    &emsp;&emsp;新建about页面：hexo new page about<br>5，生成静态文件：<strong>hexo generate</strong></p>\n"},{"title":"[python实例] - 跳一跳","date":"2018-03-02T09:54:31.000Z","_content":"\n> 祭出已经玩了很久的跳一跳, 就当是在python的路上回忆吧.\n\n**技术方案**：通过adb连接android手机，获取屏幕信息[跳一跳]，再利用ginput获取起始点和目标位置，测试并统计出跳一跳按压时长和位移的关系值，通过adb命令模拟手指按压。\n**注意事项**：为避免微信检测是否为脚本执行，swipe的按压位置要随机\n**升级方案**：利用python的图像处理，自动获取起始点和目标位置，可以使得程序更加自动化。\n\n```python\nimport subprocess\nfrom PIL import Image\nfrom pylab import *\nimport random\n\nx = str(random.randint(300,700))\ny = str(random.randint(1300,1800))\n\ncmd = \"adb shell screencap -p /sdcard/t1t.png && adb pull /sdcard/t1t.png\"\n\np = subprocess.Popen(cmd, shell=True)\np.communicate()\n\nimg = array(Image.open('./t1t.png'))\nimshow(img)\n\nxy = ginput(2)\nshow()\n\ndef dist (l):\n  return ((l[1][0]-l[0][0])**2 + (l[1][1]-l[0][1])**2)**0.5 * 1.4\n\nl = dist(xy)\nll = \"adb shell input swipe \" + x + \" \" + y + \" \" + x + \" \" + y + \" \" + str(int(l))\n\nsubprocess.Popen(ll, shell=True)\n```\n\n此方法每跳一格都要执行一次命令，可以按升级方案处理。","source":"_posts/python实例-跳一跳.md","raw":"---\ntitle: '[python实例] - 跳一跳'\ndate: 2018-03-02 17:54:31\ntags:\n  - python\n---\n\n> 祭出已经玩了很久的跳一跳, 就当是在python的路上回忆吧.\n\n**技术方案**：通过adb连接android手机，获取屏幕信息[跳一跳]，再利用ginput获取起始点和目标位置，测试并统计出跳一跳按压时长和位移的关系值，通过adb命令模拟手指按压。\n**注意事项**：为避免微信检测是否为脚本执行，swipe的按压位置要随机\n**升级方案**：利用python的图像处理，自动获取起始点和目标位置，可以使得程序更加自动化。\n\n```python\nimport subprocess\nfrom PIL import Image\nfrom pylab import *\nimport random\n\nx = str(random.randint(300,700))\ny = str(random.randint(1300,1800))\n\ncmd = \"adb shell screencap -p /sdcard/t1t.png && adb pull /sdcard/t1t.png\"\n\np = subprocess.Popen(cmd, shell=True)\np.communicate()\n\nimg = array(Image.open('./t1t.png'))\nimshow(img)\n\nxy = ginput(2)\nshow()\n\ndef dist (l):\n  return ((l[1][0]-l[0][0])**2 + (l[1][1]-l[0][1])**2)**0.5 * 1.4\n\nl = dist(xy)\nll = \"adb shell input swipe \" + x + \" \" + y + \" \" + x + \" \" + y + \" \" + str(int(l))\n\nsubprocess.Popen(ll, shell=True)\n```\n\n此方法每跳一格都要执行一次命令，可以按升级方案处理。","slug":"python实例-跳一跳","published":1,"updated":"2018-03-09T15:48:09.968Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v6000fuw2cfk0nv2co","content":"<blockquote>\n<p>祭出已经玩了很久的跳一跳, 就当是在python的路上回忆吧.</p>\n</blockquote>\n<p><strong>技术方案</strong>：通过adb连接android手机，获取屏幕信息[跳一跳]，再利用ginput获取起始点和目标位置，测试并统计出跳一跳按压时长和位移的关系值，通过adb命令模拟手指按压。<br><strong>注意事项</strong>：为避免微信检测是否为脚本执行，swipe的按压位置要随机<br><strong>升级方案</strong>：利用python的图像处理，自动获取起始点和目标位置，可以使得程序更加自动化。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">from</span> pylab <span class=\"keyword\">import</span> *</div><div class=\"line\"><span class=\"keyword\">import</span> random</div><div class=\"line\"></div><div class=\"line\">x = str(random.randint(<span class=\"number\">300</span>,<span class=\"number\">700</span>))</div><div class=\"line\">y = str(random.randint(<span class=\"number\">1300</span>,<span class=\"number\">1800</span>))</div><div class=\"line\"></div><div class=\"line\">cmd = <span class=\"string\">\"adb shell screencap -p /sdcard/t1t.png &amp;&amp; adb pull /sdcard/t1t.png\"</span></div><div class=\"line\"></div><div class=\"line\">p = subprocess.Popen(cmd, shell=<span class=\"keyword\">True</span>)</div><div class=\"line\">p.communicate()</div><div class=\"line\"></div><div class=\"line\">img = array(Image.open(<span class=\"string\">'./t1t.png'</span>))</div><div class=\"line\">imshow(img)</div><div class=\"line\"></div><div class=\"line\">xy = ginput(<span class=\"number\">2</span>)</div><div class=\"line\">show()</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dist</span> <span class=\"params\">(l)</span>:</span></div><div class=\"line\">  <span class=\"keyword\">return</span> ((l[<span class=\"number\">1</span>][<span class=\"number\">0</span>]-l[<span class=\"number\">0</span>][<span class=\"number\">0</span>])**<span class=\"number\">2</span> + (l[<span class=\"number\">1</span>][<span class=\"number\">1</span>]-l[<span class=\"number\">0</span>][<span class=\"number\">1</span>])**<span class=\"number\">2</span>)**<span class=\"number\">0.5</span> * <span class=\"number\">1.4</span></div><div class=\"line\"></div><div class=\"line\">l = dist(xy)</div><div class=\"line\">ll = <span class=\"string\">\"adb shell input swipe \"</span> + x + <span class=\"string\">\" \"</span> + y + <span class=\"string\">\" \"</span> + x + <span class=\"string\">\" \"</span> + y + <span class=\"string\">\" \"</span> + str(int(l))</div><div class=\"line\"></div><div class=\"line\">subprocess.Popen(ll, shell=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure>\n<p>此方法每跳一格都要执行一次命令，可以按升级方案处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>祭出已经玩了很久的跳一跳, 就当是在python的路上回忆吧.</p>\n</blockquote>\n<p><strong>技术方案</strong>：通过adb连接android手机，获取屏幕信息[跳一跳]，再利用ginput获取起始点和目标位置，测试并统计出跳一跳按压时长和位移的关系值，通过adb命令模拟手指按压。<br><strong>注意事项</strong>：为避免微信检测是否为脚本执行，swipe的按压位置要随机<br><strong>升级方案</strong>：利用python的图像处理，自动获取起始点和目标位置，可以使得程序更加自动化。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">from</span> pylab <span class=\"keyword\">import</span> *</div><div class=\"line\"><span class=\"keyword\">import</span> random</div><div class=\"line\"></div><div class=\"line\">x = str(random.randint(<span class=\"number\">300</span>,<span class=\"number\">700</span>))</div><div class=\"line\">y = str(random.randint(<span class=\"number\">1300</span>,<span class=\"number\">1800</span>))</div><div class=\"line\"></div><div class=\"line\">cmd = <span class=\"string\">\"adb shell screencap -p /sdcard/t1t.png &amp;&amp; adb pull /sdcard/t1t.png\"</span></div><div class=\"line\"></div><div class=\"line\">p = subprocess.Popen(cmd, shell=<span class=\"keyword\">True</span>)</div><div class=\"line\">p.communicate()</div><div class=\"line\"></div><div class=\"line\">img = array(Image.open(<span class=\"string\">'./t1t.png'</span>))</div><div class=\"line\">imshow(img)</div><div class=\"line\"></div><div class=\"line\">xy = ginput(<span class=\"number\">2</span>)</div><div class=\"line\">show()</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dist</span> <span class=\"params\">(l)</span>:</span></div><div class=\"line\">  <span class=\"keyword\">return</span> ((l[<span class=\"number\">1</span>][<span class=\"number\">0</span>]-l[<span class=\"number\">0</span>][<span class=\"number\">0</span>])**<span class=\"number\">2</span> + (l[<span class=\"number\">1</span>][<span class=\"number\">1</span>]-l[<span class=\"number\">0</span>][<span class=\"number\">1</span>])**<span class=\"number\">2</span>)**<span class=\"number\">0.5</span> * <span class=\"number\">1.4</span></div><div class=\"line\"></div><div class=\"line\">l = dist(xy)</div><div class=\"line\">ll = <span class=\"string\">\"adb shell input swipe \"</span> + x + <span class=\"string\">\" \"</span> + y + <span class=\"string\">\" \"</span> + x + <span class=\"string\">\" \"</span> + y + <span class=\"string\">\" \"</span> + str(int(l))</div><div class=\"line\"></div><div class=\"line\">subprocess.Popen(ll, shell=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure>\n<p>此方法每跳一格都要执行一次命令，可以按升级方案处理。</p>\n"},{"title":"Vue更新store时，同步更新组件","date":"2018-04-27T07:50:45.000Z","_content":"\n第一次使用store的时候，只是简单的当一个全局变量来使用。\n使用的场景也很简单，用来统计小朋友的答题的得分。这种场景不会涉及到一个组件上更新store数据，另一个组件需要同步更新数据。store数据会在进入下一题后在created中会获取到，并显示在页面上，而这并不是同步更新的，所以很简单。\n\n但今天我需要同步更新store；第一种方式：直接把store写到template中，这种方式的确是ok的。然而在复杂的场景下依然不行，比如说如果只是需要展示一个变量的值：score，那么可以直接在template中\\{$store.score\\}即可，但如果是是一个复杂的对象或不只是一两个$store的值，重复这样写就比较复杂了。\n\n我们需要找一个更方便的方式；第二种方式：通过计算属性computed引用$store的值，然后利用watch监听computed的属性，当$store的值发生变化时，可以通过watch中的方法，同步更新组件中引用$store的值。如下：\n\n```html\n// a.vue\n\n<template>\n  <p>{{status}}</p>\n  <button @click=\"changeStatus\">change status</button>\n</template>\n<script>\nexport default {\n  name: 'a',\n  data () {\n    return {\n      status: this.$store.status\n    }\n  },\n  methods: {\n    changeStatus: function () {\n      this.status = !this.status\n      this.$store.commit('changeStatus')  // 这里需要自己去定义commit方法\n    }\n  }\n}\n</script>\n```\n当在组件A中更新status时，组件B也会触发更新\n\n```html\n// b.vue\n\n<template>\n  <p>b.vue</p>\n  <p>{{status}}</p>\n</template>\n<script>\nexport default {\n  name: 'b',\n  data () {\n    return {\n      status: this.$store.status\n    }\n  },\n  computed: {\n    comStatus: function () {\n      return this.$store.status\n    }\n  },\n  watch: {\n    comStatus: function (sta) {\n      this.status = sta\n    }\n  }\n}\n</script>\n```\n如此，当有比较复杂的数据需要利用store同步更新时，上面的方式应该是比较简便的了。或许还有更方便的方法，还需高人指点。","source":"_posts/Vue更新store时，同步更新组件.md","raw":"---\ntitle: Vue更新store时，同步更新组件\ndate: 2018-04-27 15:50:45\ntags:\n  - vue\n---\n\n第一次使用store的时候，只是简单的当一个全局变量来使用。\n使用的场景也很简单，用来统计小朋友的答题的得分。这种场景不会涉及到一个组件上更新store数据，另一个组件需要同步更新数据。store数据会在进入下一题后在created中会获取到，并显示在页面上，而这并不是同步更新的，所以很简单。\n\n但今天我需要同步更新store；第一种方式：直接把store写到template中，这种方式的确是ok的。然而在复杂的场景下依然不行，比如说如果只是需要展示一个变量的值：score，那么可以直接在template中\\{$store.score\\}即可，但如果是是一个复杂的对象或不只是一两个$store的值，重复这样写就比较复杂了。\n\n我们需要找一个更方便的方式；第二种方式：通过计算属性computed引用$store的值，然后利用watch监听computed的属性，当$store的值发生变化时，可以通过watch中的方法，同步更新组件中引用$store的值。如下：\n\n```html\n// a.vue\n\n<template>\n  <p>{{status}}</p>\n  <button @click=\"changeStatus\">change status</button>\n</template>\n<script>\nexport default {\n  name: 'a',\n  data () {\n    return {\n      status: this.$store.status\n    }\n  },\n  methods: {\n    changeStatus: function () {\n      this.status = !this.status\n      this.$store.commit('changeStatus')  // 这里需要自己去定义commit方法\n    }\n  }\n}\n</script>\n```\n当在组件A中更新status时，组件B也会触发更新\n\n```html\n// b.vue\n\n<template>\n  <p>b.vue</p>\n  <p>{{status}}</p>\n</template>\n<script>\nexport default {\n  name: 'b',\n  data () {\n    return {\n      status: this.$store.status\n    }\n  },\n  computed: {\n    comStatus: function () {\n      return this.$store.status\n    }\n  },\n  watch: {\n    comStatus: function (sta) {\n      this.status = sta\n    }\n  }\n}\n</script>\n```\n如此，当有比较复杂的数据需要利用store同步更新时，上面的方式应该是比较简便的了。或许还有更方便的方法，还需高人指点。","slug":"Vue更新store时，同步更新组件","published":1,"updated":"2018-05-03T04:51:39.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v8000iuw2cmj37wa9d","content":"<p>第一次使用store的时候，只是简单的当一个全局变量来使用。<br>使用的场景也很简单，用来统计小朋友的答题的得分。这种场景不会涉及到一个组件上更新store数据，另一个组件需要同步更新数据。store数据会在进入下一题后在created中会获取到，并显示在页面上，而这并不是同步更新的，所以很简单。</p>\n<p>但今天我需要同步更新store；第一种方式：直接把store写到template中，这种方式的确是ok的。然而在复杂的场景下依然不行，比如说如果只是需要展示一个变量的值：score，那么可以直接在template中{$store.score}即可，但如果是是一个复杂的对象或不只是一两个$store的值，重复这样写就比较复杂了。</p>\n<p>我们需要找一个更方便的方式；第二种方式：通过计算属性computed引用$store的值，然后利用watch监听computed的属性，当$store的值发生变化时，可以通过watch中的方法，同步更新组件中引用$store的值。如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">// a.vue</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;status&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeStatus\"</span>&gt;</span>change status<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'a'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">status</span>: <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">changeStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.status = !<span class=\"keyword\">this</span>.status</div><div class=\"line\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'changeStatus'</span>)  <span class=\"comment\">// 这里需要自己去定义commit方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>当在组件A中更新status时，组件B也会触发更新</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">// b.vue</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>b.vue<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;status&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'b'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">status</span>: <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">computed</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">comStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">watch</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">comStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sta</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.status = sta</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如此，当有比较复杂的数据需要利用store同步更新时，上面的方式应该是比较简便的了。或许还有更方便的方法，还需高人指点。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一次使用store的时候，只是简单的当一个全局变量来使用。<br>使用的场景也很简单，用来统计小朋友的答题的得分。这种场景不会涉及到一个组件上更新store数据，另一个组件需要同步更新数据。store数据会在进入下一题后在created中会获取到，并显示在页面上，而这并不是同步更新的，所以很简单。</p>\n<p>但今天我需要同步更新store；第一种方式：直接把store写到template中，这种方式的确是ok的。然而在复杂的场景下依然不行，比如说如果只是需要展示一个变量的值：score，那么可以直接在template中{$store.score}即可，但如果是是一个复杂的对象或不只是一两个$store的值，重复这样写就比较复杂了。</p>\n<p>我们需要找一个更方便的方式；第二种方式：通过计算属性computed引用$store的值，然后利用watch监听computed的属性，当$store的值发生变化时，可以通过watch中的方法，同步更新组件中引用$store的值。如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">// a.vue</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;status&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeStatus\"</span>&gt;</span>change status<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'a'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">status</span>: <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">changeStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.status = !<span class=\"keyword\">this</span>.status</div><div class=\"line\">      <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">'changeStatus'</span>)  <span class=\"comment\">// 这里需要自己去定义commit方法</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>当在组件A中更新status时，组件B也会触发更新</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">// b.vue</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>b.vue<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;status&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'b'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">status</span>: <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">computed</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">comStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$store.status</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">watch</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">comStatus</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sta</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.status = sta</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>如此，当有比较复杂的数据需要利用store同步更新时，上面的方式应该是比较简便的了。或许还有更方便的方法，还需高人指点。</p>\n"},{"title":"canvas学习","date":"2017-08-31T06:07:12.000Z","_content":"\n\n#### 起步\n\nindex.html\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n\t<link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n\t<canvas id=\"canvas\" width=\"600\" height=\"300\"></canvas>\n\t<script src=\"./main.js\"></script>\n</body>\n</html>\n```\n\nmain.js\n```js\n// 创建canvas对象\n   var\tcanvas = document.querySelector('#canvas'),\n\tctx = canvas.getContext('2d');\n\n```\n\n\n#### 命令\n```\nstroke \t\t绘制路径边缘\nfill\t\t填充路径内部\n\n线\nmoveTo\t\t把画笔移动到指定地点\nlineTo\t\t绘制一条不可见的路径到指定地点\n\n圆\narc\t\t绘制圆弧或者圆\n\n文本\nfillText\t在指定位置填充指定文本\nstrokeText\t在指定位置绘制文本边框\nmeasureText\t在文本被绘制前，获取文本的宽度\n\nclearRect\t擦除画布\n\n```","source":"_posts/canvas学习.md","raw":"---\ntitle: canvas学习\ndate: 2017-08-31 14:07:12\ntags:\n---\n\n\n#### 起步\n\nindex.html\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n\t<link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n\t<canvas id=\"canvas\" width=\"600\" height=\"300\"></canvas>\n\t<script src=\"./main.js\"></script>\n</body>\n</html>\n```\n\nmain.js\n```js\n// 创建canvas对象\n   var\tcanvas = document.querySelector('#canvas'),\n\tctx = canvas.getContext('2d');\n\n```\n\n\n#### 命令\n```\nstroke \t\t绘制路径边缘\nfill\t\t填充路径内部\n\n线\nmoveTo\t\t把画笔移动到指定地点\nlineTo\t\t绘制一条不可见的路径到指定地点\n\n圆\narc\t\t绘制圆弧或者圆\n\n文本\nfillText\t在指定位置填充指定文本\nstrokeText\t在指定位置绘制文本边框\nmeasureText\t在文本被绘制前，获取文本的宽度\n\nclearRect\t擦除画布\n\n```","slug":"canvas学习","published":1,"updated":"2017-08-31T06:35:32.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069v9000kuw2cmfl4t87u","content":"<h4 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h4><p>index.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./style.css\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./main.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>main.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 创建canvas对象</span></div><div class=\"line\">   <span class=\"keyword\">var</span>\tcanvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#canvas'</span>),</div><div class=\"line\">\tctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div></pre></td></tr></table></figure></p>\n<h4 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">stroke \t\t绘制路径边缘</div><div class=\"line\">fill\t\t填充路径内部</div><div class=\"line\"></div><div class=\"line\">线</div><div class=\"line\">moveTo\t\t把画笔移动到指定地点</div><div class=\"line\">lineTo\t\t绘制一条不可见的路径到指定地点</div><div class=\"line\"></div><div class=\"line\">圆</div><div class=\"line\">arc\t\t绘制圆弧或者圆</div><div class=\"line\"></div><div class=\"line\">文本</div><div class=\"line\">fillText\t在指定位置填充指定文本</div><div class=\"line\">strokeText\t在指定位置绘制文本边框</div><div class=\"line\">measureText\t在文本被绘制前，获取文本的宽度</div><div class=\"line\"></div><div class=\"line\">clearRect\t擦除画布</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h4><p>index.html<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./style.css\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./main.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>main.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 创建canvas对象</span></div><div class=\"line\">   <span class=\"keyword\">var</span>\tcanvas = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#canvas'</span>),</div><div class=\"line\">\tctx = canvas.getContext(<span class=\"string\">'2d'</span>);</div></pre></td></tr></table></figure></p>\n<h4 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">stroke \t\t绘制路径边缘</div><div class=\"line\">fill\t\t填充路径内部</div><div class=\"line\"></div><div class=\"line\">线</div><div class=\"line\">moveTo\t\t把画笔移动到指定地点</div><div class=\"line\">lineTo\t\t绘制一条不可见的路径到指定地点</div><div class=\"line\"></div><div class=\"line\">圆</div><div class=\"line\">arc\t\t绘制圆弧或者圆</div><div class=\"line\"></div><div class=\"line\">文本</div><div class=\"line\">fillText\t在指定位置填充指定文本</div><div class=\"line\">strokeText\t在指定位置绘制文本边框</div><div class=\"line\">measureText\t在文本被绘制前，获取文本的宽度</div><div class=\"line\"></div><div class=\"line\">clearRect\t擦除画布</div></pre></td></tr></table></figure>"},{"title":"input上传图片的问题总结","date":"2017-07-18T02:48:14.000Z","_content":"\n> 这是一个由维护公司老系统引发的问题，上传图片。\n\n下面直接进入主题\n\n##### 问题一：PC浏览器卡顿问题\n有些时候我们会发现，chrome浏览器上传图片时会出现卡顿，图片选择的弹窗会延迟很久才弹出来。通过审查元素，我们可以发现，此时的input控件上accept属性有值（如：&lt;input type=\"file\" accept=\"image/*\" /&gt;,或者&lt;input type=\"file\" accept=\"image/jpg,image/png\" /&gt;等等...）。\n当我们不设置accept或不给accept设置值时（如：&lt;input type=\"file\" accept=\"\" /&gt;），就不会有卡顿问题了。\n\n**问题分析：**可能是由于设置的接收类型，chrome浏览器在选择文件弹窗时，过滤文件的处理较慢导致弹窗延迟。所以可以针对chrome浏览器特别把accept的值设置为空即可。\n```js\n// acceptType 控件接收类型， inputDom为控件dom对象\nacceptType = isChrome ? \"\" : \"image/*\";\ninputDom.setAttribute('accept',acceptType);\n```\n\n##### 问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\n有些同学在开发移动端页面时，会遇到这个问题。明明能打开手机的图片选择界面，但是图片都是灰色的，无法被选择。可能有些同学会发现，可以在界面中选择相册，相册里面的图片是可以被选择的。这个问题想想和chrome浏览器卡顿有点相似的，都是设置image/jpg,...类似的详细属性导致的。\n那么，我们把accept的值设置成\"image/*\"就可以了。\n\n\n##### 问题三：手机浏览器上调取摄像头问题\n这个问题应该是上面那个问题的延伸，在我们把accept属性设置为image/jpg,...等类型时，手机是无法调用摄像头的。而当我们把accept设置成\"image/\\*\" 时就可以了，但是有些同学可能发现有个h5的属性capture【捕捉】，当&lt;input type=\"file\" accept=\"image/\\*\" capture=\"camera\" /&gt;时，页面也是可以调用摄像头的。是的，但是在ios上面，会直接触发调用摄像头，而无法选择图库。所以这里需要注意下。如果你仅仅是想调用摄像头，那么在ios上你就可以这么干了，但是安卓上你就要另外用别的方式了。这里说下h5的getMedia方法是可以调用摄像头的。","source":"_posts/input上传图片的问题总结.md","raw":"---\ntitle: input上传图片的问题总结\ndate: 2017-07-18 10:48:14\ntags:\n  - 笔记\n---\n\n> 这是一个由维护公司老系统引发的问题，上传图片。\n\n下面直接进入主题\n\n##### 问题一：PC浏览器卡顿问题\n有些时候我们会发现，chrome浏览器上传图片时会出现卡顿，图片选择的弹窗会延迟很久才弹出来。通过审查元素，我们可以发现，此时的input控件上accept属性有值（如：&lt;input type=\"file\" accept=\"image/*\" /&gt;,或者&lt;input type=\"file\" accept=\"image/jpg,image/png\" /&gt;等等...）。\n当我们不设置accept或不给accept设置值时（如：&lt;input type=\"file\" accept=\"\" /&gt;），就不会有卡顿问题了。\n\n**问题分析：**可能是由于设置的接收类型，chrome浏览器在选择文件弹窗时，过滤文件的处理较慢导致弹窗延迟。所以可以针对chrome浏览器特别把accept的值设置为空即可。\n```js\n// acceptType 控件接收类型， inputDom为控件dom对象\nacceptType = isChrome ? \"\" : \"image/*\";\ninputDom.setAttribute('accept',acceptType);\n```\n\n##### 问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\n有些同学在开发移动端页面时，会遇到这个问题。明明能打开手机的图片选择界面，但是图片都是灰色的，无法被选择。可能有些同学会发现，可以在界面中选择相册，相册里面的图片是可以被选择的。这个问题想想和chrome浏览器卡顿有点相似的，都是设置image/jpg,...类似的详细属性导致的。\n那么，我们把accept的值设置成\"image/*\"就可以了。\n\n\n##### 问题三：手机浏览器上调取摄像头问题\n这个问题应该是上面那个问题的延伸，在我们把accept属性设置为image/jpg,...等类型时，手机是无法调用摄像头的。而当我们把accept设置成\"image/\\*\" 时就可以了，但是有些同学可能发现有个h5的属性capture【捕捉】，当&lt;input type=\"file\" accept=\"image/\\*\" capture=\"camera\" /&gt;时，页面也是可以调用摄像头的。是的，但是在ios上面，会直接触发调用摄像头，而无法选择图库。所以这里需要注意下。如果你仅仅是想调用摄像头，那么在ios上你就可以这么干了，但是安卓上你就要另外用别的方式了。这里说下h5的getMedia方法是可以调用摄像头的。","slug":"input上传图片的问题总结","published":1,"updated":"2017-07-18T09:01:05.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069va000muw2cvqrlo08t","content":"<blockquote>\n<p>这是一个由维护公司老系统引发的问题，上传图片。</p>\n</blockquote>\n<p>下面直接进入主题</p>\n<h5 id=\"问题一：PC浏览器卡顿问题\"><a href=\"#问题一：PC浏览器卡顿问题\" class=\"headerlink\" title=\"问题一：PC浏览器卡顿问题\"></a>问题一：PC浏览器卡顿问题</h5><p>有些时候我们会发现，chrome浏览器上传图片时会出现卡顿，图片选择的弹窗会延迟很久才弹出来。通过审查元素，我们可以发现，此时的input控件上accept属性有值（如：&lt;input type=”file” accept=”image/*” /&gt;,或者&lt;input type=”file” accept=”image/jpg,image/png” /&gt;等等…）。<br>当我们不设置accept或不给accept设置值时（如：&lt;input type=”file” accept=”” /&gt;），就不会有卡顿问题了。</p>\n<p><strong>问题分析：</strong>可能是由于设置的接收类型，chrome浏览器在选择文件弹窗时，过滤文件的处理较慢导致弹窗延迟。所以可以针对chrome浏览器特别把accept的值设置为空即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// acceptType 控件接收类型， inputDom为控件dom对象</span></div><div class=\"line\">acceptType = isChrome ? <span class=\"string\">\"\"</span> : <span class=\"string\">\"image/*\"</span>;</div><div class=\"line\">inputDom.setAttribute(<span class=\"string\">'accept'</span>,acceptType);</div></pre></td></tr></table></figure></p>\n<h5 id=\"问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\"><a href=\"#问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\" class=\"headerlink\" title=\"问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\"></a>问题二：手机浏览器上传图片时，不能选取图片（图片灰色）</h5><p>有些同学在开发移动端页面时，会遇到这个问题。明明能打开手机的图片选择界面，但是图片都是灰色的，无法被选择。可能有些同学会发现，可以在界面中选择相册，相册里面的图片是可以被选择的。这个问题想想和chrome浏览器卡顿有点相似的，都是设置image/jpg,…类似的详细属性导致的。<br>那么，我们把accept的值设置成”image/*”就可以了。</p>\n<h5 id=\"问题三：手机浏览器上调取摄像头问题\"><a href=\"#问题三：手机浏览器上调取摄像头问题\" class=\"headerlink\" title=\"问题三：手机浏览器上调取摄像头问题\"></a>问题三：手机浏览器上调取摄像头问题</h5><p>这个问题应该是上面那个问题的延伸，在我们把accept属性设置为image/jpg,…等类型时，手机是无法调用摄像头的。而当我们把accept设置成”image/*“ 时就可以了，但是有些同学可能发现有个h5的属性capture【捕捉】，当&lt;input type=”file” accept=”image/*“ capture=”camera” /&gt;时，页面也是可以调用摄像头的。是的，但是在ios上面，会直接触发调用摄像头，而无法选择图库。所以这里需要注意下。如果你仅仅是想调用摄像头，那么在ios上你就可以这么干了，但是安卓上你就要另外用别的方式了。这里说下h5的getMedia方法是可以调用摄像头的。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>这是一个由维护公司老系统引发的问题，上传图片。</p>\n</blockquote>\n<p>下面直接进入主题</p>\n<h5 id=\"问题一：PC浏览器卡顿问题\"><a href=\"#问题一：PC浏览器卡顿问题\" class=\"headerlink\" title=\"问题一：PC浏览器卡顿问题\"></a>问题一：PC浏览器卡顿问题</h5><p>有些时候我们会发现，chrome浏览器上传图片时会出现卡顿，图片选择的弹窗会延迟很久才弹出来。通过审查元素，我们可以发现，此时的input控件上accept属性有值（如：&lt;input type=”file” accept=”image/*” /&gt;,或者&lt;input type=”file” accept=”image/jpg,image/png” /&gt;等等…）。<br>当我们不设置accept或不给accept设置值时（如：&lt;input type=”file” accept=”” /&gt;），就不会有卡顿问题了。</p>\n<p><strong>问题分析：</strong>可能是由于设置的接收类型，chrome浏览器在选择文件弹窗时，过滤文件的处理较慢导致弹窗延迟。所以可以针对chrome浏览器特别把accept的值设置为空即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// acceptType 控件接收类型， inputDom为控件dom对象</span></div><div class=\"line\">acceptType = isChrome ? <span class=\"string\">\"\"</span> : <span class=\"string\">\"image/*\"</span>;</div><div class=\"line\">inputDom.setAttribute(<span class=\"string\">'accept'</span>,acceptType);</div></pre></td></tr></table></figure></p>\n<h5 id=\"问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\"><a href=\"#问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\" class=\"headerlink\" title=\"问题二：手机浏览器上传图片时，不能选取图片（图片灰色）\"></a>问题二：手机浏览器上传图片时，不能选取图片（图片灰色）</h5><p>有些同学在开发移动端页面时，会遇到这个问题。明明能打开手机的图片选择界面，但是图片都是灰色的，无法被选择。可能有些同学会发现，可以在界面中选择相册，相册里面的图片是可以被选择的。这个问题想想和chrome浏览器卡顿有点相似的，都是设置image/jpg,…类似的详细属性导致的。<br>那么，我们把accept的值设置成”image/*”就可以了。</p>\n<h5 id=\"问题三：手机浏览器上调取摄像头问题\"><a href=\"#问题三：手机浏览器上调取摄像头问题\" class=\"headerlink\" title=\"问题三：手机浏览器上调取摄像头问题\"></a>问题三：手机浏览器上调取摄像头问题</h5><p>这个问题应该是上面那个问题的延伸，在我们把accept属性设置为image/jpg,…等类型时，手机是无法调用摄像头的。而当我们把accept设置成”image/*“ 时就可以了，但是有些同学可能发现有个h5的属性capture【捕捉】，当&lt;input type=”file” accept=”image/*“ capture=”camera” /&gt;时，页面也是可以调用摄像头的。是的，但是在ios上面，会直接触发调用摄像头，而无法选择图库。所以这里需要注意下。如果你仅仅是想调用摄像头，那么在ios上你就可以这么干了，但是安卓上你就要另外用别的方式了。这里说下h5的getMedia方法是可以调用摄像头的。</p>\n"},{"title":"vue使用笔记-背景图片的路径问题","date":"2017-08-25T03:23:10.000Z","_content":"\n##### 问题：\n最近使用vue时，发现打包完的项目中，背景图片不能加载。\n打包前background的代码\n```css\nbackground: url(\"../assets/images/audio.png\") center no-repeat;\n```\n打包后background的代码\n```css\nbackground: url(/static/img/audio.8d110e4.png) center no-repeat;\n```\n打包后的文件，由于没有放到网站的根目录下，所以打包后背景图片无法获取。\n\n##### 解决办法：\n在网上查了很多，很多答案都没有相关性，也没解决问题。其实很简单，无非就是把相对根目录的路径改成相对css文件的路径即可。\n在build/utils.js里的有个ExtractTextPlugin对象，给它添加 publicPath: '../../' 就行了。\n\n这里问题的关键就是","source":"_posts/vue使用笔记-背景图片的路径问题.md","raw":"---\ntitle: vue使用笔记-背景图片的路径问题\ndate: 2017-08-25 11:23:10\ntags:\n\t- 笔记\n\t- webpack\n\t- vue\n---\n\n##### 问题：\n最近使用vue时，发现打包完的项目中，背景图片不能加载。\n打包前background的代码\n```css\nbackground: url(\"../assets/images/audio.png\") center no-repeat;\n```\n打包后background的代码\n```css\nbackground: url(/static/img/audio.8d110e4.png) center no-repeat;\n```\n打包后的文件，由于没有放到网站的根目录下，所以打包后背景图片无法获取。\n\n##### 解决办法：\n在网上查了很多，很多答案都没有相关性，也没解决问题。其实很简单，无非就是把相对根目录的路径改成相对css文件的路径即可。\n在build/utils.js里的有个ExtractTextPlugin对象，给它添加 publicPath: '../../' 就行了。\n\n这里问题的关键就是","slug":"vue使用笔记-背景图片的路径问题","published":1,"updated":"2017-08-25T05:11:26.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vb000ouw2cbe1hrkf9","content":"<h5 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h5><p>最近使用vue时，发现打包完的项目中，背景图片不能加载。<br>打包前background的代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background: url(\"../assets/images/audio.png\") center no-repeat;</div></pre></td></tr></table></figure></p>\n<p>打包后background的代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background: url(/static/img/audio.8d110e4.png) center no-repeat;</div></pre></td></tr></table></figure></p>\n<p>打包后的文件，由于没有放到网站的根目录下，所以打包后背景图片无法获取。</p>\n<h5 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h5><p>在网上查了很多，很多答案都没有相关性，也没解决问题。其实很简单，无非就是把相对根目录的路径改成相对css文件的路径即可。<br>在build/utils.js里的有个ExtractTextPlugin对象，给它添加 publicPath: ‘../../‘ 就行了。</p>\n<p>这里问题的关键就是</p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h5><p>最近使用vue时，发现打包完的项目中，背景图片不能加载。<br>打包前background的代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background: url(\"../assets/images/audio.png\") center no-repeat;</div></pre></td></tr></table></figure></p>\n<p>打包后background的代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background: url(/static/img/audio.8d110e4.png) center no-repeat;</div></pre></td></tr></table></figure></p>\n<p>打包后的文件，由于没有放到网站的根目录下，所以打包后背景图片无法获取。</p>\n<h5 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h5><p>在网上查了很多，很多答案都没有相关性，也没解决问题。其实很简单，无非就是把相对根目录的路径改成相对css文件的路径即可。<br>在build/utils.js里的有个ExtractTextPlugin对象，给它添加 publicPath: ‘../../‘ 就行了。</p>\n<p>这里问题的关键就是</p>\n"},{"title":"建站笔记","date":"2017-06-22T09:02:43.000Z","_content":"\n2018/04/21：网站升级HTTPS；添加二级域名static.togor.cn，与七牛存储空间绑定，提供静态资源CDN融合加速读取。\n2018/04/11：网站域名重新更改为togor.cn，添加favcion.ico，添加“友言”评论功能。\n2017/12/09：更换域名为keer.live。\n2017/11/23：增加网站视频模块。该模块下面收集了一些我个人觉得比较好的视频。\n2017/08/26：增加网站的/project/目录，在该目录下准备添加一些自己工作或日常中写的一些比较有意思的demo或组件\n2017/07/31：网站更换域名为：togor.cn，原域名由于未备案，且不能在国内备案，故不能在阿里云服务器上使用，暂时先使用togor.cn\n2017/06/25：完成“关于”、“标签”、“404”页面的配置及内容编辑；并绑定了keer.live域名\n2017/06/22：重新部署了该博客，从零开始~","source":"_posts/record.md","raw":"---\ntitle: 建站笔记\ndate: 2017-06-22 17:02:43\ntags:\n\t- 公告\n---\n\n2018/04/21：网站升级HTTPS；添加二级域名static.togor.cn，与七牛存储空间绑定，提供静态资源CDN融合加速读取。\n2018/04/11：网站域名重新更改为togor.cn，添加favcion.ico，添加“友言”评论功能。\n2017/12/09：更换域名为keer.live。\n2017/11/23：增加网站视频模块。该模块下面收集了一些我个人觉得比较好的视频。\n2017/08/26：增加网站的/project/目录，在该目录下准备添加一些自己工作或日常中写的一些比较有意思的demo或组件\n2017/07/31：网站更换域名为：togor.cn，原域名由于未备案，且不能在国内备案，故不能在阿里云服务器上使用，暂时先使用togor.cn\n2017/06/25：完成“关于”、“标签”、“404”页面的配置及内容编辑；并绑定了keer.live域名\n2017/06/22：重新部署了该博客，从零开始~","slug":"record","published":1,"updated":"2018-04-21T05:38:22.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vd000ruw2ci1ihq7z8","content":"<p>2018/04/21：网站升级HTTPS；添加二级域名static.togor.cn，与七牛存储空间绑定，提供静态资源CDN融合加速读取。<br>2018/04/11：网站域名重新更改为togor.cn，添加favcion.ico，添加“友言”评论功能。<br>2017/12/09：更换域名为keer.live。<br>2017/11/23：增加网站视频模块。该模块下面收集了一些我个人觉得比较好的视频。<br>2017/08/26：增加网站的/project/目录，在该目录下准备添加一些自己工作或日常中写的一些比较有意思的demo或组件<br>2017/07/31：网站更换域名为：togor.cn，原域名由于未备案，且不能在国内备案，故不能在阿里云服务器上使用，暂时先使用togor.cn<br>2017/06/25：完成“关于”、“标签”、“404”页面的配置及内容编辑；并绑定了keer.live域名<br>2017/06/22：重新部署了该博客，从零开始~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2018/04/21：网站升级HTTPS；添加二级域名static.togor.cn，与七牛存储空间绑定，提供静态资源CDN融合加速读取。<br>2018/04/11：网站域名重新更改为togor.cn，添加favcion.ico，添加“友言”评论功能。<br>2017/12/09：更换域名为keer.live。<br>2017/11/23：增加网站视频模块。该模块下面收集了一些我个人觉得比较好的视频。<br>2017/08/26：增加网站的/project/目录，在该目录下准备添加一些自己工作或日常中写的一些比较有意思的demo或组件<br>2017/07/31：网站更换域名为：togor.cn，原域名由于未备案，且不能在国内备案，故不能在阿里云服务器上使用，暂时先使用togor.cn<br>2017/06/25：完成“关于”、“标签”、“404”页面的配置及内容编辑；并绑定了keer.live域名<br>2017/06/22：重新部署了该博客，从零开始~</p>\n"},{"title":"[python实例] - 利用imap处理邮件","date":"2018-05-10T05:09:05.000Z","_content":"\n占个坑~\n","source":"_posts/python实例-利用imap处理邮件.md","raw":"---\ntitle: '[python实例] - 利用imap处理邮件'\ndate: 2018-05-10 13:09:05\ntags:\n  - python\n---\n\n占个坑~\n","slug":"python实例-利用imap处理邮件","published":1,"updated":"2018-05-11T13:35:32.917Z","_id":"cjh2069vf000tuw2cgce0clhm","comments":1,"layout":"post","photos":[],"link":"","content":"<p>占个坑~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>占个坑~</p>\n"},{"title":"react[笔记]","date":"2017-07-03T07:08:34.000Z","_content":"\n> react很流行，学习一下。\n\n##### 技术栈\n\nnpm + react + express + ES6 + webpack + ...\n\n##### 项目搭建\n```js\n1，新建目录\nmkdir react\n\n2，进入目录\ncd react\n\n3，初始化项目\nnpm init\n\n4，创建入口文件（vi 是linux下面的命令，window下可手动创建）\nvi app.js\n\n/* app.js */\nvar express = require('express');\nvar path = require('path');\nvar app = express();\n\napp.get('/',function(req,res){\n\tres.send('hello react');\n});\napp.listen(8899,function(){\n\tconsole.log('this project running at port: ' + 8899);\n});\n\n5，安装所需模块 - express\nnpm install dexpress --save-dev\n\n6，运行（测试）\nnpm start\n\n这里需要先修改package.json文件\n\"scripts\": {\n    \"start\": \"node app.js\",\n},\n```\n<!-- ![](http://os6p5lsoh.bkt.clouddn.com/art-20170703001.png?imageView2/2/w/400) -->\n接下来，我们继续完善~\n```\n定一下项目结构：\nsrc/ \t\t- 源代码\n - components/\t- 模块\n  - index/\t- index模块\ndisc/ \t\t- 发布代码\n - images/\t- 图片目录\n - js/\t\t- js目录\n - css/\t\t- css目录\n - font/\t- font目录\n - template/\t- 页面目录\nnode_modules/ \t- node模块\nconfig/ \t- 配置文件\napi/ \t\t- 接口文件\n.gitignore \t- git库忽略配置文件\napp.js \t\t- 入口文件\nREADME.md \t- 项目描述\nwebpack.config.js - webpack配置文件\n```\n\n安装所需模块 - webpack\n```\nnpm install --save-dev webpack\n```\n\n&lt; - -  先更新到这里，后面继续更~  - - &gt;","source":"_posts/react-笔记.md","raw":"---\ntitle: 'react[笔记]'\ndate: 2017-07-03 15:08:34\ntags:\n---\n\n> react很流行，学习一下。\n\n##### 技术栈\n\nnpm + react + express + ES6 + webpack + ...\n\n##### 项目搭建\n```js\n1，新建目录\nmkdir react\n\n2，进入目录\ncd react\n\n3，初始化项目\nnpm init\n\n4，创建入口文件（vi 是linux下面的命令，window下可手动创建）\nvi app.js\n\n/* app.js */\nvar express = require('express');\nvar path = require('path');\nvar app = express();\n\napp.get('/',function(req,res){\n\tres.send('hello react');\n});\napp.listen(8899,function(){\n\tconsole.log('this project running at port: ' + 8899);\n});\n\n5，安装所需模块 - express\nnpm install dexpress --save-dev\n\n6，运行（测试）\nnpm start\n\n这里需要先修改package.json文件\n\"scripts\": {\n    \"start\": \"node app.js\",\n},\n```\n<!-- ![](http://os6p5lsoh.bkt.clouddn.com/art-20170703001.png?imageView2/2/w/400) -->\n接下来，我们继续完善~\n```\n定一下项目结构：\nsrc/ \t\t- 源代码\n - components/\t- 模块\n  - index/\t- index模块\ndisc/ \t\t- 发布代码\n - images/\t- 图片目录\n - js/\t\t- js目录\n - css/\t\t- css目录\n - font/\t- font目录\n - template/\t- 页面目录\nnode_modules/ \t- node模块\nconfig/ \t- 配置文件\napi/ \t\t- 接口文件\n.gitignore \t- git库忽略配置文件\napp.js \t\t- 入口文件\nREADME.md \t- 项目描述\nwebpack.config.js - webpack配置文件\n```\n\n安装所需模块 - webpack\n```\nnpm install --save-dev webpack\n```\n\n&lt; - -  先更新到这里，后面继续更~  - - &gt;","slug":"react-笔记","published":1,"updated":"2017-07-14T05:10:04.061Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vg000uuw2cktcvd3mx","content":"<blockquote>\n<p>react很流行，学习一下。</p>\n</blockquote>\n<h5 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h5><p>npm + react + express + ES6 + webpack + …</p>\n<h5 id=\"项目搭建\"><a href=\"#项目搭建\" class=\"headerlink\" title=\"项目搭建\"></a>项目搭建</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1</span>，新建目录</div><div class=\"line\">mkdir react</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">2</span>，进入目录</div><div class=\"line\">cd react</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">3</span>，初始化项目</div><div class=\"line\">npm init</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span>，创建入口文件（vi 是linux下面的命令，<span class=\"built_in\">window</span>下可手动创建）</div><div class=\"line\">vi app.js</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* app.js */</span></div><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</div><div class=\"line\">\tres.send(<span class=\"string\">'hello react'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">app.listen(<span class=\"number\">8899</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'this project running at port: '</span> + <span class=\"number\">8899</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5</span>，安装所需模块 - express</div><div class=\"line\">npm install dexpress --save-dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">6</span>，运行（测试）</div><div class=\"line\">npm start</div><div class=\"line\"></div><div class=\"line\">这里需要先修改package.json文件</div><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"node app.js\"</span>,</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<!-- ![](http://os6p5lsoh.bkt.clouddn.com/art-20170703001.png?imageView2/2/w/400) -->\n<p>接下来，我们继续完善~<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">定一下项目结构：</div><div class=\"line\">src/ \t\t- 源代码</div><div class=\"line\"> - components/\t- 模块</div><div class=\"line\">  - index/\t- index模块</div><div class=\"line\">disc/ \t\t- 发布代码</div><div class=\"line\"> - images/\t- 图片目录</div><div class=\"line\"> - js/\t\t- js目录</div><div class=\"line\"> - css/\t\t- css目录</div><div class=\"line\"> - font/\t- font目录</div><div class=\"line\"> - template/\t- 页面目录</div><div class=\"line\">node_modules/ \t- node模块</div><div class=\"line\">config/ \t- 配置文件</div><div class=\"line\">api/ \t\t- 接口文件</div><div class=\"line\">.gitignore \t- git库忽略配置文件</div><div class=\"line\">app.js \t\t- 入口文件</div><div class=\"line\">README.md \t- 项目描述</div><div class=\"line\">webpack.config.js - webpack配置文件</div></pre></td></tr></table></figure></p>\n<p>安装所需模块 - webpack<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev webpack</div></pre></td></tr></table></figure></p>\n<p>&lt; - -  先更新到这里，后面继续更~  - - &gt;</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>react很流行，学习一下。</p>\n</blockquote>\n<h5 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h5><p>npm + react + express + ES6 + webpack + …</p>\n<h5 id=\"项目搭建\"><a href=\"#项目搭建\" class=\"headerlink\" title=\"项目搭建\"></a>项目搭建</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1</span>，新建目录</div><div class=\"line\">mkdir react</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">2</span>，进入目录</div><div class=\"line\">cd react</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">3</span>，初始化项目</div><div class=\"line\">npm init</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">4</span>，创建入口文件（vi 是linux下面的命令，<span class=\"built_in\">window</span>下可手动创建）</div><div class=\"line\">vi app.js</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* app.js */</span></div><div class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> app = express();</div><div class=\"line\"></div><div class=\"line\">app.get(<span class=\"string\">'/'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</div><div class=\"line\">\tres.send(<span class=\"string\">'hello react'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\">app.listen(<span class=\"number\">8899</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'this project running at port: '</span> + <span class=\"number\">8899</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5</span>，安装所需模块 - express</div><div class=\"line\">npm install dexpress --save-dev</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">6</span>，运行（测试）</div><div class=\"line\">npm start</div><div class=\"line\"></div><div class=\"line\">这里需要先修改package.json文件</div><div class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</div><div class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"node app.js\"</span>,</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<!-- ![](http://os6p5lsoh.bkt.clouddn.com/art-20170703001.png?imageView2/2/w/400) -->\n<p>接下来，我们继续完善~<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">定一下项目结构：</div><div class=\"line\">src/ \t\t- 源代码</div><div class=\"line\"> - components/\t- 模块</div><div class=\"line\">  - index/\t- index模块</div><div class=\"line\">disc/ \t\t- 发布代码</div><div class=\"line\"> - images/\t- 图片目录</div><div class=\"line\"> - js/\t\t- js目录</div><div class=\"line\"> - css/\t\t- css目录</div><div class=\"line\"> - font/\t- font目录</div><div class=\"line\"> - template/\t- 页面目录</div><div class=\"line\">node_modules/ \t- node模块</div><div class=\"line\">config/ \t- 配置文件</div><div class=\"line\">api/ \t\t- 接口文件</div><div class=\"line\">.gitignore \t- git库忽略配置文件</div><div class=\"line\">app.js \t\t- 入口文件</div><div class=\"line\">README.md \t- 项目描述</div><div class=\"line\">webpack.config.js - webpack配置文件</div></pre></td></tr></table></figure></p>\n<p>安装所需模块 - webpack<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev webpack</div></pre></td></tr></table></figure></p>\n<p>&lt; - -  先更新到这里，后面继续更~  - - &gt;</p>\n"},{"title":"vue使用笔记-vue-cli项目目录及配置文件浅析","date":"2017-08-25T03:53:38.000Z","_content":"\n之前写了一篇笔记，只是把用vue-cli搭建了一个移动端的项目。但本人对vue-cli的项目目录及webpack配置不了解，在此学习并记录下。\n\n#### 创建项目\n```js\nvue init webpack <projectName>\n```\n#### 项目目录\n```avrasm\n|-- build/\t\t# webpack配置文件\n|     |-- dev.server.js\t# 运行项目时的入口文件(npm run dev)\n|     | ···\n|-- config/\t\t# 项目配置文件\n|     |-- dev.env.js\n|     |-- index.js \t# 项目运行和打包对应的配置文件\n|     |-- prod.env.js\n|     |-- test.env.js\n|-- src/\t\t# 开发源文件\n|     |-- assets/ \t# 模块资源（会被webpack处理）\n|           | ···\n|     |-- commponents/ \t# 模块\n|           | ···\n|     |-- router/ \t# 路由\n|           | ···\n|     |-- App.vue \t# 项目开始时的入口vue组件\n|     |-- main.js \t# 程序入口文件\n|-- static/\t\t# 静态资源文件(直接拷贝到dist/static/里面)\n|     | ···\n|-- test/\t\t# 测试\n|     | ···\n|-- .babelrc\t\t# babel配置文件\n|-- .editorconfig\t# 编辑配置文件\n|-- .eslintignore\t# eslint忽略配置文件\n|-- .eslintrc.js \t# eslint配置文件\n|-- .gitignore \t\t# 项目提交忽略文件\n|-- .postcssrc.js\t# postcss配置文件[为css提供一些额外的功能，处理css]\n|-- index.html \t\t# 入口模板文件\n|-- package.json \t# 开发项目所需的包管理配置文件（运行的脚本与相关依赖）\n|-- README.md \t\t# 重要内容介绍\n```\n\n##### build/\n此目录为开发环境和生产环境的webpack配置文件，我们可以修改此目录下的文件，来添加或修改插件配置、调整路径等\n\n##### config/\n此目录最为主要的是index.js文件，在index.js文件中配置了生产环境和开发环境的入口文件、相关目录和开发环境下的端口、是否自动打开浏览器以及生产环境下是否压缩、是否生成map文件等\n\n##### src/\n此目录为开发环境下的源代码。\n```avrasm\nsrc/assets/ \t\t# 为资源目录\nsrc/commonpents/ \t# 为模块目录\nsrc/router/index.js \t# 为路由文件\nsrc/App.vue \t\t# 为开发环境下的入口模板文件\nsrc/main.js \t\t# 为开发环境下的入口文件\n```\n\n##### static/\n此目录为静态资源目录，此目录下的文件不会被webpack处理。在webpack打包后，此目录下的文件会被直接复制到dist/static/中\n\n##### test/\n```avrasm\ntest/unit/ \t# 该目录包含了单元测试相关的文件\ntest/e2e/ \t# 该目录包含了端到端测试相关的文件\n```\n\n##### index.html\n这个是单界面应用中的模板index.html。在开发环境中，webpack会生成相关资源，这些资源的url会自动插入到模板来渲染最终的HTML。\n\n#### 主要的配置文件\n\n##### dev-server.js\n开发环境下的入口文件，在此文件中引入了其他的配置文件和相关插件。\n引入的配置文件：\n```avrasm\nbuild/check-versions.js\t\t# 检查node/npm的版本\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.prod.conf \t# 打包的webpack配置文件\nbuild/webpack.dev.conf \t\t# 开发的webpack配置文件\n```\n\n引入的相关插件：\n```avrasm\npath \t\t\t\t# ...\nwebapck \t\t\t# ...\nexpress \t\t\t# ...\nopn \t\t\t\t# 在浏览器中打开需要打开的链接uri - opn(uri)\nhttp-proxy-middleware \t\t# 代理中间件，方便连接，快速，浏览器同步等\nconnect-history-api-fallback \t# 通过指定的索引页面代理请求，对于单页面应用程序特别有用\nwebpack-dev-middleware \t\t# 这个插件用于webpack打包的，详细用法参见webpack-dev-server\nwebpack-hot-middleware \t\t# 这个插件用于热刷新的，详细用法参见webpack-dev-server\n```\n\n##### build.js\n打包时运行的入口文件\n\n引入的配置文件：\n```avrasm\nbuild/check-versions.js\t\t# 检查node/npm的版本\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.prod.conf \t# 打包的webpack配置文件\n```\n\n引入的相关插件：\n```avrasm\n...\nora \t# 打包过程中优雅的图标提示\nrimraf \t#  相当于Unix命令：rm -rf , 用来删除指定的目录或文件\n```\n\n##### webpack.dev.conf.js\n开发环境的部分webpack配置信息\n\n引入的配置文件：\n```avrasm\nbuild/utils.js\t\t\t# 样式loader的配置\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.base.conf.js \t# 主要的webpack配置信息\n```\n\n引入的相关插件：\n```avrasm\nwebpack-merge \t\t\t# 用来合并loader\nhtml-webpack-plugin \t\t# 为html文件引入带有hash值的外部资源，生成html入口文件\nfriendly-errors-webpack-plugin \t# 友好的错误提示(识别某些类别的webpack错误并处理、合并、优先排序，以提供更好的开发者体验)\n```\n\n##### webpack.prop.conf.js\n打包时的部分webpack配置信息\n\n引入的配置文件：\n```\n同上\n```\n\n引入的相关插件：\n```avrasm\nwebpack-merge \t\t\t\t# 用来合并loader\nhtml-webpack-plugin \t\t\t# 为html文件引入带有hash值的外部资源，生成html入口文件\ncopy-webpack-plugin \t\t\t# copy文件到某一目录(此插件用来把static/下的静态资源直接复制到dist/static/目录下)\nextract-text-webpack-plugin \t\t# 将不同文件的内容打包到一个文件中(抽离出css样式，并打包到一个css文件中)\noptimize-css-assets-webpack-plugin \t# 优化css资源(默认使用cssnano处理器,cssnano是在postcss基础之上构建的)\ncompression-webpack-plugin \t\t# 压缩文件\nwebpack-bundle-analyzer \t\t# 资源分析器(获取资源压缩前后的实际大小等，此项目中config/index.js文件下找到\n\t\t\t\t\t- bundleAnalyzerReport将其值改为true，打包时即可在8888端口看到可视化的数据信息\n\t\t\t\t\t- 或者是给process.env.npm_config_report赋值为true)\n```\n\n##### webpack.base.conf.js\n开发环境及生产环境公用的部分webpack配置信息\n\n引入的配置文件：\n```avrasm\nbuild/utils.js\t\t\t# 样式loader的配置\nconfig/index.js \t\t# 主要的配置文件\nbuild/vue-loader.conf.js \t# 该配置文件只对css的map以及模板中相对链接是否转换成require方式做了配置\n\n```\n\n引入的相关插件：\n```\n...\n```\n**此文件配置了项目的入口文件、输入、解析及不同类型的模块处理**\n\n\n以上内容由错误之处，还望指正。\n\n\n** 关键词：**  [postcss](http://www.jianshu.com/p/7f8a5d83f4b7) , [babel](http://babeljs.cn/) , [http-proxy-middleware](https://www.npmjs.com/package/http-proxy-middleware) , [webpack-dev-server](http://webpack.github.io/docs/webpack-dev-server.html) , [webpack-merge](https://www.npmjs.com/package/webpack-merge) , [html-webpack-plugin](https://www.npmjs.com/package/html-webpack-plugin) , [compression-webpack-plugin](https://github.com/webpack-contrib/compression-webpack-plugin)","source":"_posts/vue使用笔记-vue-cli项目目录及配置文件浅析.md","raw":"---\ntitle: vue使用笔记-vue-cli项目目录及配置文件浅析\ndate: 2017-08-25 11:53:38\ntags:\n - vue\n - webpack\n---\n\n之前写了一篇笔记，只是把用vue-cli搭建了一个移动端的项目。但本人对vue-cli的项目目录及webpack配置不了解，在此学习并记录下。\n\n#### 创建项目\n```js\nvue init webpack <projectName>\n```\n#### 项目目录\n```avrasm\n|-- build/\t\t# webpack配置文件\n|     |-- dev.server.js\t# 运行项目时的入口文件(npm run dev)\n|     | ···\n|-- config/\t\t# 项目配置文件\n|     |-- dev.env.js\n|     |-- index.js \t# 项目运行和打包对应的配置文件\n|     |-- prod.env.js\n|     |-- test.env.js\n|-- src/\t\t# 开发源文件\n|     |-- assets/ \t# 模块资源（会被webpack处理）\n|           | ···\n|     |-- commponents/ \t# 模块\n|           | ···\n|     |-- router/ \t# 路由\n|           | ···\n|     |-- App.vue \t# 项目开始时的入口vue组件\n|     |-- main.js \t# 程序入口文件\n|-- static/\t\t# 静态资源文件(直接拷贝到dist/static/里面)\n|     | ···\n|-- test/\t\t# 测试\n|     | ···\n|-- .babelrc\t\t# babel配置文件\n|-- .editorconfig\t# 编辑配置文件\n|-- .eslintignore\t# eslint忽略配置文件\n|-- .eslintrc.js \t# eslint配置文件\n|-- .gitignore \t\t# 项目提交忽略文件\n|-- .postcssrc.js\t# postcss配置文件[为css提供一些额外的功能，处理css]\n|-- index.html \t\t# 入口模板文件\n|-- package.json \t# 开发项目所需的包管理配置文件（运行的脚本与相关依赖）\n|-- README.md \t\t# 重要内容介绍\n```\n\n##### build/\n此目录为开发环境和生产环境的webpack配置文件，我们可以修改此目录下的文件，来添加或修改插件配置、调整路径等\n\n##### config/\n此目录最为主要的是index.js文件，在index.js文件中配置了生产环境和开发环境的入口文件、相关目录和开发环境下的端口、是否自动打开浏览器以及生产环境下是否压缩、是否生成map文件等\n\n##### src/\n此目录为开发环境下的源代码。\n```avrasm\nsrc/assets/ \t\t# 为资源目录\nsrc/commonpents/ \t# 为模块目录\nsrc/router/index.js \t# 为路由文件\nsrc/App.vue \t\t# 为开发环境下的入口模板文件\nsrc/main.js \t\t# 为开发环境下的入口文件\n```\n\n##### static/\n此目录为静态资源目录，此目录下的文件不会被webpack处理。在webpack打包后，此目录下的文件会被直接复制到dist/static/中\n\n##### test/\n```avrasm\ntest/unit/ \t# 该目录包含了单元测试相关的文件\ntest/e2e/ \t# 该目录包含了端到端测试相关的文件\n```\n\n##### index.html\n这个是单界面应用中的模板index.html。在开发环境中，webpack会生成相关资源，这些资源的url会自动插入到模板来渲染最终的HTML。\n\n#### 主要的配置文件\n\n##### dev-server.js\n开发环境下的入口文件，在此文件中引入了其他的配置文件和相关插件。\n引入的配置文件：\n```avrasm\nbuild/check-versions.js\t\t# 检查node/npm的版本\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.prod.conf \t# 打包的webpack配置文件\nbuild/webpack.dev.conf \t\t# 开发的webpack配置文件\n```\n\n引入的相关插件：\n```avrasm\npath \t\t\t\t# ...\nwebapck \t\t\t# ...\nexpress \t\t\t# ...\nopn \t\t\t\t# 在浏览器中打开需要打开的链接uri - opn(uri)\nhttp-proxy-middleware \t\t# 代理中间件，方便连接，快速，浏览器同步等\nconnect-history-api-fallback \t# 通过指定的索引页面代理请求，对于单页面应用程序特别有用\nwebpack-dev-middleware \t\t# 这个插件用于webpack打包的，详细用法参见webpack-dev-server\nwebpack-hot-middleware \t\t# 这个插件用于热刷新的，详细用法参见webpack-dev-server\n```\n\n##### build.js\n打包时运行的入口文件\n\n引入的配置文件：\n```avrasm\nbuild/check-versions.js\t\t# 检查node/npm的版本\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.prod.conf \t# 打包的webpack配置文件\n```\n\n引入的相关插件：\n```avrasm\n...\nora \t# 打包过程中优雅的图标提示\nrimraf \t#  相当于Unix命令：rm -rf , 用来删除指定的目录或文件\n```\n\n##### webpack.dev.conf.js\n开发环境的部分webpack配置信息\n\n引入的配置文件：\n```avrasm\nbuild/utils.js\t\t\t# 样式loader的配置\nconfig/index.js \t\t# 主要的配置文件\nbuild/webpack.base.conf.js \t# 主要的webpack配置信息\n```\n\n引入的相关插件：\n```avrasm\nwebpack-merge \t\t\t# 用来合并loader\nhtml-webpack-plugin \t\t# 为html文件引入带有hash值的外部资源，生成html入口文件\nfriendly-errors-webpack-plugin \t# 友好的错误提示(识别某些类别的webpack错误并处理、合并、优先排序，以提供更好的开发者体验)\n```\n\n##### webpack.prop.conf.js\n打包时的部分webpack配置信息\n\n引入的配置文件：\n```\n同上\n```\n\n引入的相关插件：\n```avrasm\nwebpack-merge \t\t\t\t# 用来合并loader\nhtml-webpack-plugin \t\t\t# 为html文件引入带有hash值的外部资源，生成html入口文件\ncopy-webpack-plugin \t\t\t# copy文件到某一目录(此插件用来把static/下的静态资源直接复制到dist/static/目录下)\nextract-text-webpack-plugin \t\t# 将不同文件的内容打包到一个文件中(抽离出css样式，并打包到一个css文件中)\noptimize-css-assets-webpack-plugin \t# 优化css资源(默认使用cssnano处理器,cssnano是在postcss基础之上构建的)\ncompression-webpack-plugin \t\t# 压缩文件\nwebpack-bundle-analyzer \t\t# 资源分析器(获取资源压缩前后的实际大小等，此项目中config/index.js文件下找到\n\t\t\t\t\t- bundleAnalyzerReport将其值改为true，打包时即可在8888端口看到可视化的数据信息\n\t\t\t\t\t- 或者是给process.env.npm_config_report赋值为true)\n```\n\n##### webpack.base.conf.js\n开发环境及生产环境公用的部分webpack配置信息\n\n引入的配置文件：\n```avrasm\nbuild/utils.js\t\t\t# 样式loader的配置\nconfig/index.js \t\t# 主要的配置文件\nbuild/vue-loader.conf.js \t# 该配置文件只对css的map以及模板中相对链接是否转换成require方式做了配置\n\n```\n\n引入的相关插件：\n```\n...\n```\n**此文件配置了项目的入口文件、输入、解析及不同类型的模块处理**\n\n\n以上内容由错误之处，还望指正。\n\n\n** 关键词：**  [postcss](http://www.jianshu.com/p/7f8a5d83f4b7) , [babel](http://babeljs.cn/) , [http-proxy-middleware](https://www.npmjs.com/package/http-proxy-middleware) , [webpack-dev-server](http://webpack.github.io/docs/webpack-dev-server.html) , [webpack-merge](https://www.npmjs.com/package/webpack-merge) , [html-webpack-plugin](https://www.npmjs.com/package/html-webpack-plugin) , [compression-webpack-plugin](https://github.com/webpack-contrib/compression-webpack-plugin)","slug":"vue使用笔记-vue-cli项目目录及配置文件浅析","published":1,"updated":"2017-08-26T07:17:31.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vi000xuw2c63ywlix8","content":"<p>之前写了一篇笔记，只是把用vue-cli搭建了一个移动端的项目。但本人对vue-cli的项目目录及webpack配置不了解，在此学习并记录下。</p>\n<h4 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vue init webpack &lt;projectName&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">|-- build/\t\t<span class=\"meta\"># webpack配置文件</span></div><div class=\"line\">|     |-- dev.server.js\t<span class=\"meta\"># 运行项目时的入口文件(npm run dev)</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- config/\t\t<span class=\"meta\"># 项目配置文件</span></div><div class=\"line\">|     |-- dev.env.js</div><div class=\"line\">|     |-- index.js \t<span class=\"meta\"># 项目运行和打包对应的配置文件</span></div><div class=\"line\">|     |-- prod.env.js</div><div class=\"line\">|     |-- test.env.js</div><div class=\"line\">|-- src/\t\t<span class=\"meta\"># 开发源文件</span></div><div class=\"line\">|     |-- assets/ \t<span class=\"meta\"># 模块资源（会被webpack处理）</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- commponents/ \t<span class=\"meta\"># 模块</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- router/ \t<span class=\"meta\"># 路由</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- App.vue \t<span class=\"meta\"># 项目开始时的入口vue组件</span></div><div class=\"line\">|     |-- main.js \t<span class=\"meta\"># 程序入口文件</span></div><div class=\"line\">|-- static/\t\t<span class=\"meta\"># 静态资源文件(直接拷贝到dist/static/里面)</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- test/\t\t<span class=\"meta\"># 测试</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- .babelrc\t\t<span class=\"meta\"># babel配置文件</span></div><div class=\"line\">|-- .editorconfig\t<span class=\"meta\"># 编辑配置文件</span></div><div class=\"line\">|-- .eslintignore\t<span class=\"meta\"># eslint忽略配置文件</span></div><div class=\"line\">|-- .eslintrc.js \t<span class=\"meta\"># eslint配置文件</span></div><div class=\"line\">|-- .gitignore \t\t<span class=\"meta\"># 项目提交忽略文件</span></div><div class=\"line\">|-- .postcssrc.js\t<span class=\"meta\"># postcss配置文件[为css提供一些额外的功能，处理css]</span></div><div class=\"line\">|-- index.html \t\t<span class=\"meta\"># 入口模板文件</span></div><div class=\"line\">|-- package.json \t<span class=\"meta\"># 开发项目所需的包管理配置文件（运行的脚本与相关依赖）</span></div><div class=\"line\">|-- README.md \t\t<span class=\"meta\"># 重要内容介绍</span></div></pre></td></tr></table></figure>\n<h5 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build/\"></a>build/</h5><p>此目录为开发环境和生产环境的webpack配置文件，我们可以修改此目录下的文件，来添加或修改插件配置、调整路径等</p>\n<h5 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config/\"></a>config/</h5><p>此目录最为主要的是index.js文件，在index.js文件中配置了生产环境和开发环境的入口文件、相关目录和开发环境下的端口、是否自动打开浏览器以及生产环境下是否压缩、是否生成map文件等</p>\n<h5 id=\"src\"><a href=\"#src\" class=\"headerlink\" title=\"src/\"></a>src/</h5><p>此目录为开发环境下的源代码。<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/assets/ \t\t<span class=\"meta\"># 为资源目录</span></div><div class=\"line\">src/commonpents/ \t<span class=\"meta\"># 为模块目录</span></div><div class=\"line\">src/router/index.js \t<span class=\"meta\"># 为路由文件</span></div><div class=\"line\">src/App.vue \t\t<span class=\"meta\"># 为开发环境下的入口模板文件</span></div><div class=\"line\">src/main.js \t\t<span class=\"meta\"># 为开发环境下的入口文件</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static/\"></a>static/</h5><p>此目录为静态资源目录，此目录下的文件不会被webpack处理。在webpack打包后，此目录下的文件会被直接复制到dist/static/中</p>\n<h5 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test/\"></a>test/</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">test/unit/ \t<span class=\"meta\"># 该目录包含了单元测试相关的文件</span></div><div class=\"line\">test/e2e/ \t<span class=\"meta\"># 该目录包含了端到端测试相关的文件</span></div></pre></td></tr></table></figure>\n<h5 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h5><p>这个是单界面应用中的模板index.html。在开发环境中，webpack会生成相关资源，这些资源的url会自动插入到模板来渲染最终的HTML。</p>\n<h4 id=\"主要的配置文件\"><a href=\"#主要的配置文件\" class=\"headerlink\" title=\"主要的配置文件\"></a>主要的配置文件</h4><h5 id=\"dev-server-js\"><a href=\"#dev-server-js\" class=\"headerlink\" title=\"dev-server.js\"></a>dev-server.js</h5><p>开发环境下的入口文件，在此文件中引入了其他的配置文件和相关插件。<br>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/check-versions.js\t\t<span class=\"meta\"># 检查node/npm的版本</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.prod.conf \t<span class=\"meta\"># 打包的webpack配置文件</span></div><div class=\"line\">build/webpack.dev.conf \t\t<span class=\"meta\"># 开发的webpack配置文件</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">path \t\t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">webapck \t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">express \t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">opn \t\t\t\t<span class=\"meta\"># 在浏览器中打开需要打开的链接uri - opn(uri)</span></div><div class=\"line\">http-proxy-middleware \t\t<span class=\"meta\"># 代理中间件，方便连接，快速，浏览器同步等</span></div><div class=\"line\">connect-history-api-fallback \t<span class=\"meta\"># 通过指定的索引页面代理请求，对于单页面应用程序特别有用</span></div><div class=\"line\">webpack-dev-middleware \t\t<span class=\"meta\"># 这个插件用于webpack打包的，详细用法参见webpack-dev-server</span></div><div class=\"line\">webpack-hot-middleware \t\t<span class=\"meta\"># 这个插件用于热刷新的，详细用法参见webpack-dev-server</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"build-js\"><a href=\"#build-js\" class=\"headerlink\" title=\"build.js\"></a>build.js</h5><p>打包时运行的入口文件</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/check-versions.js\t\t<span class=\"meta\"># 检查node/npm的版本</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.prod.conf \t<span class=\"meta\"># 打包的webpack配置文件</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">ora \t<span class=\"meta\"># 打包过程中优雅的图标提示</span></div><div class=\"line\">rimraf \t<span class=\"meta\">#  相当于Unix命令：rm -rf , 用来删除指定的目录或文件</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-dev-conf-js\"><a href=\"#webpack-dev-conf-js\" class=\"headerlink\" title=\"webpack.dev.conf.js\"></a>webpack.dev.conf.js</h5><p>开发环境的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/utils.js\t\t\t<span class=\"meta\"># 样式loader的配置</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.base.conf.js \t<span class=\"meta\"># 主要的webpack配置信息</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">webpack-merge \t\t\t<span class=\"meta\"># 用来合并loader</span></div><div class=\"line\">html-webpack-plugin \t\t<span class=\"meta\"># 为html文件引入带有hash值的外部资源，生成html入口文件</span></div><div class=\"line\">friendly-errors-webpack-plugin \t<span class=\"meta\"># 友好的错误提示(识别某些类别的webpack错误并处理、合并、优先排序，以提供更好的开发者体验)</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-prop-conf-js\"><a href=\"#webpack-prop-conf-js\" class=\"headerlink\" title=\"webpack.prop.conf.js\"></a>webpack.prop.conf.js</h5><p>打包时的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">同上</div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">webpack-merge \t\t\t\t<span class=\"meta\"># 用来合并loader</span></div><div class=\"line\">html-webpack-plugin \t\t\t<span class=\"meta\"># 为html文件引入带有hash值的外部资源，生成html入口文件</span></div><div class=\"line\">copy-webpack-plugin \t\t\t<span class=\"meta\"># copy文件到某一目录(此插件用来把static/下的静态资源直接复制到dist/static/目录下)</span></div><div class=\"line\">extract-text-webpack-plugin \t\t<span class=\"meta\"># 将不同文件的内容打包到一个文件中(抽离出css样式，并打包到一个css文件中)</span></div><div class=\"line\">optimize-css-assets-webpack-plugin \t<span class=\"meta\"># 优化css资源(默认使用cssnano处理器,cssnano是在postcss基础之上构建的)</span></div><div class=\"line\">compression-webpack-plugin \t\t<span class=\"meta\"># 压缩文件</span></div><div class=\"line\">webpack-bundle-analyzer \t\t<span class=\"meta\"># 资源分析器(获取资源压缩前后的实际大小等，此项目中config/index.js文件下找到</span></div><div class=\"line\">\t\t\t\t\t- bundleAnalyzerReport将其值改为true，打包时即可在<span class=\"number\">8888</span>端口看到可视化的数据信息</div><div class=\"line\">\t\t\t\t\t- 或者是给process.env.npm_config_report赋值为true)</div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-base-conf-js\"><a href=\"#webpack-base-conf-js\" class=\"headerlink\" title=\"webpack.base.conf.js\"></a>webpack.base.conf.js</h5><p>开发环境及生产环境公用的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/utils.js\t\t\t<span class=\"meta\"># 样式loader的配置</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/vue-loader.conf.js \t<span class=\"meta\"># 该配置文件只对css的map以及模板中相对链接是否转换成require方式做了配置</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p><strong>此文件配置了项目的入口文件、输入、解析及不同类型的模块处理</strong></p>\n<p>以上内容由错误之处，还望指正。</p>\n<p><strong> 关键词：</strong>  <a href=\"http://www.jianshu.com/p/7f8a5d83f4b7\" target=\"_blank\" rel=\"external\">postcss</a> , <a href=\"http://babeljs.cn/\" target=\"_blank\" rel=\"external\">babel</a> , <a href=\"https://www.npmjs.com/package/http-proxy-middleware\" target=\"_blank\" rel=\"external\">http-proxy-middleware</a> , <a href=\"http://webpack.github.io/docs/webpack-dev-server.html\" target=\"_blank\" rel=\"external\">webpack-dev-server</a> , <a href=\"https://www.npmjs.com/package/webpack-merge\" target=\"_blank\" rel=\"external\">webpack-merge</a> , <a href=\"https://www.npmjs.com/package/html-webpack-plugin\" target=\"_blank\" rel=\"external\">html-webpack-plugin</a> , <a href=\"https://github.com/webpack-contrib/compression-webpack-plugin\" target=\"_blank\" rel=\"external\">compression-webpack-plugin</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前写了一篇笔记，只是把用vue-cli搭建了一个移动端的项目。但本人对vue-cli的项目目录及webpack配置不了解，在此学习并记录下。</p>\n<h4 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vue init webpack &lt;projectName&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"项目目录\"><a href=\"#项目目录\" class=\"headerlink\" title=\"项目目录\"></a>项目目录</h4><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">|-- build/\t\t<span class=\"meta\"># webpack配置文件</span></div><div class=\"line\">|     |-- dev.server.js\t<span class=\"meta\"># 运行项目时的入口文件(npm run dev)</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- config/\t\t<span class=\"meta\"># 项目配置文件</span></div><div class=\"line\">|     |-- dev.env.js</div><div class=\"line\">|     |-- index.js \t<span class=\"meta\"># 项目运行和打包对应的配置文件</span></div><div class=\"line\">|     |-- prod.env.js</div><div class=\"line\">|     |-- test.env.js</div><div class=\"line\">|-- src/\t\t<span class=\"meta\"># 开发源文件</span></div><div class=\"line\">|     |-- assets/ \t<span class=\"meta\"># 模块资源（会被webpack处理）</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- commponents/ \t<span class=\"meta\"># 模块</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- router/ \t<span class=\"meta\"># 路由</span></div><div class=\"line\">|           | ···</div><div class=\"line\">|     |-- App.vue \t<span class=\"meta\"># 项目开始时的入口vue组件</span></div><div class=\"line\">|     |-- main.js \t<span class=\"meta\"># 程序入口文件</span></div><div class=\"line\">|-- static/\t\t<span class=\"meta\"># 静态资源文件(直接拷贝到dist/static/里面)</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- test/\t\t<span class=\"meta\"># 测试</span></div><div class=\"line\">|     | ···</div><div class=\"line\">|-- .babelrc\t\t<span class=\"meta\"># babel配置文件</span></div><div class=\"line\">|-- .editorconfig\t<span class=\"meta\"># 编辑配置文件</span></div><div class=\"line\">|-- .eslintignore\t<span class=\"meta\"># eslint忽略配置文件</span></div><div class=\"line\">|-- .eslintrc.js \t<span class=\"meta\"># eslint配置文件</span></div><div class=\"line\">|-- .gitignore \t\t<span class=\"meta\"># 项目提交忽略文件</span></div><div class=\"line\">|-- .postcssrc.js\t<span class=\"meta\"># postcss配置文件[为css提供一些额外的功能，处理css]</span></div><div class=\"line\">|-- index.html \t\t<span class=\"meta\"># 入口模板文件</span></div><div class=\"line\">|-- package.json \t<span class=\"meta\"># 开发项目所需的包管理配置文件（运行的脚本与相关依赖）</span></div><div class=\"line\">|-- README.md \t\t<span class=\"meta\"># 重要内容介绍</span></div></pre></td></tr></table></figure>\n<h5 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build/\"></a>build/</h5><p>此目录为开发环境和生产环境的webpack配置文件，我们可以修改此目录下的文件，来添加或修改插件配置、调整路径等</p>\n<h5 id=\"config\"><a href=\"#config\" class=\"headerlink\" title=\"config/\"></a>config/</h5><p>此目录最为主要的是index.js文件，在index.js文件中配置了生产环境和开发环境的入口文件、相关目录和开发环境下的端口、是否自动打开浏览器以及生产环境下是否压缩、是否生成map文件等</p>\n<h5 id=\"src\"><a href=\"#src\" class=\"headerlink\" title=\"src/\"></a>src/</h5><p>此目录为开发环境下的源代码。<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">src/assets/ \t\t<span class=\"meta\"># 为资源目录</span></div><div class=\"line\">src/commonpents/ \t<span class=\"meta\"># 为模块目录</span></div><div class=\"line\">src/router/index.js \t<span class=\"meta\"># 为路由文件</span></div><div class=\"line\">src/App.vue \t\t<span class=\"meta\"># 为开发环境下的入口模板文件</span></div><div class=\"line\">src/main.js \t\t<span class=\"meta\"># 为开发环境下的入口文件</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static/\"></a>static/</h5><p>此目录为静态资源目录，此目录下的文件不会被webpack处理。在webpack打包后，此目录下的文件会被直接复制到dist/static/中</p>\n<h5 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test/\"></a>test/</h5><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">test/unit/ \t<span class=\"meta\"># 该目录包含了单元测试相关的文件</span></div><div class=\"line\">test/e2e/ \t<span class=\"meta\"># 该目录包含了端到端测试相关的文件</span></div></pre></td></tr></table></figure>\n<h5 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h5><p>这个是单界面应用中的模板index.html。在开发环境中，webpack会生成相关资源，这些资源的url会自动插入到模板来渲染最终的HTML。</p>\n<h4 id=\"主要的配置文件\"><a href=\"#主要的配置文件\" class=\"headerlink\" title=\"主要的配置文件\"></a>主要的配置文件</h4><h5 id=\"dev-server-js\"><a href=\"#dev-server-js\" class=\"headerlink\" title=\"dev-server.js\"></a>dev-server.js</h5><p>开发环境下的入口文件，在此文件中引入了其他的配置文件和相关插件。<br>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/check-versions.js\t\t<span class=\"meta\"># 检查node/npm的版本</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.prod.conf \t<span class=\"meta\"># 打包的webpack配置文件</span></div><div class=\"line\">build/webpack.dev.conf \t\t<span class=\"meta\"># 开发的webpack配置文件</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">path \t\t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">webapck \t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">express \t\t\t<span class=\"meta\"># ...</span></div><div class=\"line\">opn \t\t\t\t<span class=\"meta\"># 在浏览器中打开需要打开的链接uri - opn(uri)</span></div><div class=\"line\">http-proxy-middleware \t\t<span class=\"meta\"># 代理中间件，方便连接，快速，浏览器同步等</span></div><div class=\"line\">connect-history-api-fallback \t<span class=\"meta\"># 通过指定的索引页面代理请求，对于单页面应用程序特别有用</span></div><div class=\"line\">webpack-dev-middleware \t\t<span class=\"meta\"># 这个插件用于webpack打包的，详细用法参见webpack-dev-server</span></div><div class=\"line\">webpack-hot-middleware \t\t<span class=\"meta\"># 这个插件用于热刷新的，详细用法参见webpack-dev-server</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"build-js\"><a href=\"#build-js\" class=\"headerlink\" title=\"build.js\"></a>build.js</h5><p>打包时运行的入口文件</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/check-versions.js\t\t<span class=\"meta\"># 检查node/npm的版本</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.prod.conf \t<span class=\"meta\"># 打包的webpack配置文件</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">ora \t<span class=\"meta\"># 打包过程中优雅的图标提示</span></div><div class=\"line\">rimraf \t<span class=\"meta\">#  相当于Unix命令：rm -rf , 用来删除指定的目录或文件</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-dev-conf-js\"><a href=\"#webpack-dev-conf-js\" class=\"headerlink\" title=\"webpack.dev.conf.js\"></a>webpack.dev.conf.js</h5><p>开发环境的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/utils.js\t\t\t<span class=\"meta\"># 样式loader的配置</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/webpack.base.conf.js \t<span class=\"meta\"># 主要的webpack配置信息</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">webpack-merge \t\t\t<span class=\"meta\"># 用来合并loader</span></div><div class=\"line\">html-webpack-plugin \t\t<span class=\"meta\"># 为html文件引入带有hash值的外部资源，生成html入口文件</span></div><div class=\"line\">friendly-errors-webpack-plugin \t<span class=\"meta\"># 友好的错误提示(识别某些类别的webpack错误并处理、合并、优先排序，以提供更好的开发者体验)</span></div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-prop-conf-js\"><a href=\"#webpack-prop-conf-js\" class=\"headerlink\" title=\"webpack.prop.conf.js\"></a>webpack.prop.conf.js</h5><p>打包时的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">同上</div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">webpack-merge \t\t\t\t<span class=\"meta\"># 用来合并loader</span></div><div class=\"line\">html-webpack-plugin \t\t\t<span class=\"meta\"># 为html文件引入带有hash值的外部资源，生成html入口文件</span></div><div class=\"line\">copy-webpack-plugin \t\t\t<span class=\"meta\"># copy文件到某一目录(此插件用来把static/下的静态资源直接复制到dist/static/目录下)</span></div><div class=\"line\">extract-text-webpack-plugin \t\t<span class=\"meta\"># 将不同文件的内容打包到一个文件中(抽离出css样式，并打包到一个css文件中)</span></div><div class=\"line\">optimize-css-assets-webpack-plugin \t<span class=\"meta\"># 优化css资源(默认使用cssnano处理器,cssnano是在postcss基础之上构建的)</span></div><div class=\"line\">compression-webpack-plugin \t\t<span class=\"meta\"># 压缩文件</span></div><div class=\"line\">webpack-bundle-analyzer \t\t<span class=\"meta\"># 资源分析器(获取资源压缩前后的实际大小等，此项目中config/index.js文件下找到</span></div><div class=\"line\">\t\t\t\t\t- bundleAnalyzerReport将其值改为true，打包时即可在<span class=\"number\">8888</span>端口看到可视化的数据信息</div><div class=\"line\">\t\t\t\t\t- 或者是给process.env.npm_config_report赋值为true)</div></pre></td></tr></table></figure></p>\n<h5 id=\"webpack-base-conf-js\"><a href=\"#webpack-base-conf-js\" class=\"headerlink\" title=\"webpack.base.conf.js\"></a>webpack.base.conf.js</h5><p>开发环境及生产环境公用的部分webpack配置信息</p>\n<p>引入的配置文件：<br><figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">build/utils.js\t\t\t<span class=\"meta\"># 样式loader的配置</span></div><div class=\"line\">config/index.js \t\t<span class=\"meta\"># 主要的配置文件</span></div><div class=\"line\">build/vue-loader.conf.js \t<span class=\"meta\"># 该配置文件只对css的map以及模板中相对链接是否转换成require方式做了配置</span></div></pre></td></tr></table></figure></p>\n<p>引入的相关插件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div></pre></td></tr></table></figure></p>\n<p><strong>此文件配置了项目的入口文件、输入、解析及不同类型的模块处理</strong></p>\n<p>以上内容由错误之处，还望指正。</p>\n<p><strong> 关键词：</strong>  <a href=\"http://www.jianshu.com/p/7f8a5d83f4b7\" target=\"_blank\" rel=\"external\">postcss</a> , <a href=\"http://babeljs.cn/\" target=\"_blank\" rel=\"external\">babel</a> , <a href=\"https://www.npmjs.com/package/http-proxy-middleware\" target=\"_blank\" rel=\"external\">http-proxy-middleware</a> , <a href=\"http://webpack.github.io/docs/webpack-dev-server.html\" target=\"_blank\" rel=\"external\">webpack-dev-server</a> , <a href=\"https://www.npmjs.com/package/webpack-merge\" target=\"_blank\" rel=\"external\">webpack-merge</a> , <a href=\"https://www.npmjs.com/package/html-webpack-plugin\" target=\"_blank\" rel=\"external\">html-webpack-plugin</a> , <a href=\"https://github.com/webpack-contrib/compression-webpack-plugin\" target=\"_blank\" rel=\"external\">compression-webpack-plugin</a></p>\n"},{"title":"vue使用笔记","date":"2017-07-31T06:41:00.000Z","_content":"\n> 既然公司有同事开始使用Vue，为了表示不落后，我也要开始vue的探索之旅啦。\n\n##### 技术栈\nnode + vue + less\n\n##### 开发环境\nwindow + sublime\n\n##### 项目搭建\n\n* 新建项目文档\n```\nmkdir 项目名称(这里使用pro-one代替)\ncd pro-one\n```\n* 安装vue-cli脚手架 (没有node环境要在电脑上安装node，参考链接：[http://nodejs.cn/](http://nodejs.cn/))\n```\nnpm install --save-dev vue-cli\n```\n* 创建项目\n```\nvue init webpack ./ \n// 这里会提示你目标目录已存在，是否确认继续。（目标目录即为当前目录） 输入yes即可。\n接下来会有一些确认信息：\n\n ? Project name (./) ******\n ? Project name ******\n ? Project description (A Vue.js project)\n ? Project description A Vue.js project\n ? Author ******\n ? Author ******\n ? Vue build standalone\n ? Install vue-router? (Y/n)\n ? Install vue-router? Yes\n ? Use ESLint to lint your code? (Y/n)\n ? Use ESLint to lint your code? Yes\n ? Pick an ESLint preset (Use arrow keys)\n ? Pick an ESLint preset Standard\n ? Setup unit tests with Karma + Mocha? (Y/n)\n ? Setup unit tests with Karma + Mocha? Yes\n ? Setup e2e tests with Nightwatch? (Y/n)\n ? Setup e2e tests with Nightwatch? Yes\n\n```\n* 初始化项目信息\n```\nnpm install \n```\n* 安装less/less-loader\n```\nnpm install less less-loader --save-dev\n```\n* 安装jquery库\n```\nnpm install jquery --save-dev\n```\n\n* 由于此项目为移动端，所以需要修改根目录下的index.html文件\n```html\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n+     <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\">\n      <title>smile-junior</title>\n    </head>\n    <body>\n      <div id=\"app\"></div>\n      <!-- built files will be auto injected -->\n    </body>\n  </html>\n\n+ 为新增的行\n```\n* 在入口文件main.js内挂载全局的jquery，挂载后可以通过this.$使用，但不能用在()=>{}箭头函数中，因为箭头函数中的this指向不是Vue\n```js\nmain.js\n\n  // The Vue build version to load with the `import` command\n  // (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n  import Vue from 'vue'\n  import App from './App'\n  import router from './router'\n\n  Vue.config.productionTip = false\n+ Vue.prototype.$ = require('jquery')\n\n  /* eslint-disable no-new */\n  new Vue({\n    el: '#app',\n    router,\n    template: '<App/>',\n    components: { App }\n  })\n\n+ 为新增的行\n```\n\n* 在开发环境中调试\n```\nnpm run dev\n```\n\n* 打包项目\n```\nnpm run build\n```\n成功，在此不放贴图了。暂时写到这里，后面会继续更...\n","source":"_posts/vue使用笔记.md","raw":"---\ntitle: vue使用笔记\ndate: 2017-07-31 14:41:00\ntags:\n  - 笔记\n\t- vue\n---\n\n> 既然公司有同事开始使用Vue，为了表示不落后，我也要开始vue的探索之旅啦。\n\n##### 技术栈\nnode + vue + less\n\n##### 开发环境\nwindow + sublime\n\n##### 项目搭建\n\n* 新建项目文档\n```\nmkdir 项目名称(这里使用pro-one代替)\ncd pro-one\n```\n* 安装vue-cli脚手架 (没有node环境要在电脑上安装node，参考链接：[http://nodejs.cn/](http://nodejs.cn/))\n```\nnpm install --save-dev vue-cli\n```\n* 创建项目\n```\nvue init webpack ./ \n// 这里会提示你目标目录已存在，是否确认继续。（目标目录即为当前目录） 输入yes即可。\n接下来会有一些确认信息：\n\n ? Project name (./) ******\n ? Project name ******\n ? Project description (A Vue.js project)\n ? Project description A Vue.js project\n ? Author ******\n ? Author ******\n ? Vue build standalone\n ? Install vue-router? (Y/n)\n ? Install vue-router? Yes\n ? Use ESLint to lint your code? (Y/n)\n ? Use ESLint to lint your code? Yes\n ? Pick an ESLint preset (Use arrow keys)\n ? Pick an ESLint preset Standard\n ? Setup unit tests with Karma + Mocha? (Y/n)\n ? Setup unit tests with Karma + Mocha? Yes\n ? Setup e2e tests with Nightwatch? (Y/n)\n ? Setup e2e tests with Nightwatch? Yes\n\n```\n* 初始化项目信息\n```\nnpm install \n```\n* 安装less/less-loader\n```\nnpm install less less-loader --save-dev\n```\n* 安装jquery库\n```\nnpm install jquery --save-dev\n```\n\n* 由于此项目为移动端，所以需要修改根目录下的index.html文件\n```html\n  <!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n+     <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\">\n      <title>smile-junior</title>\n    </head>\n    <body>\n      <div id=\"app\"></div>\n      <!-- built files will be auto injected -->\n    </body>\n  </html>\n\n+ 为新增的行\n```\n* 在入口文件main.js内挂载全局的jquery，挂载后可以通过this.$使用，但不能用在()=>{}箭头函数中，因为箭头函数中的this指向不是Vue\n```js\nmain.js\n\n  // The Vue build version to load with the `import` command\n  // (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n  import Vue from 'vue'\n  import App from './App'\n  import router from './router'\n\n  Vue.config.productionTip = false\n+ Vue.prototype.$ = require('jquery')\n\n  /* eslint-disable no-new */\n  new Vue({\n    el: '#app',\n    router,\n    template: '<App/>',\n    components: { App }\n  })\n\n+ 为新增的行\n```\n\n* 在开发环境中调试\n```\nnpm run dev\n```\n\n* 打包项目\n```\nnpm run build\n```\n成功，在此不放贴图了。暂时写到这里，后面会继续更...\n","slug":"vue使用笔记","published":1,"updated":"2017-08-25T05:07:34.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vj000yuw2cq19zorr7","content":"<blockquote>\n<p>既然公司有同事开始使用Vue，为了表示不落后，我也要开始vue的探索之旅啦。</p>\n</blockquote>\n<h5 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h5><p>node + vue + less</p>\n<h5 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h5><p>window + sublime</p>\n<h5 id=\"项目搭建\"><a href=\"#项目搭建\" class=\"headerlink\" title=\"项目搭建\"></a>项目搭建</h5><ul>\n<li><p>新建项目文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir 项目名称(这里使用pro-one代替)</div><div class=\"line\">cd pro-one</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装vue-cli脚手架 (没有node环境要在电脑上安装node，参考链接：<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">http://nodejs.cn/</a>)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev vue-cli</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">vue init webpack ./ </div><div class=\"line\">// 这里会提示你目标目录已存在，是否确认继续。（目标目录即为当前目录） 输入yes即可。</div><div class=\"line\">接下来会有一些确认信息：</div><div class=\"line\"></div><div class=\"line\"> ? Project name (./) ******</div><div class=\"line\"> ? Project name ******</div><div class=\"line\"> ? Project description (A Vue.js project)</div><div class=\"line\"> ? Project description A Vue.js project</div><div class=\"line\"> ? Author ******</div><div class=\"line\"> ? Author ******</div><div class=\"line\"> ? Vue build standalone</div><div class=\"line\"> ? Install vue-router? (Y/n)</div><div class=\"line\"> ? Install vue-router? Yes</div><div class=\"line\"> ? Use ESLint to lint your code? (Y/n)</div><div class=\"line\"> ? Use ESLint to lint your code? Yes</div><div class=\"line\"> ? Pick an ESLint preset (Use arrow keys)</div><div class=\"line\"> ? Pick an ESLint preset Standard</div><div class=\"line\"> ? Setup unit tests with Karma + Mocha? (Y/n)</div><div class=\"line\"> ? Setup unit tests with Karma + Mocha? Yes</div><div class=\"line\"> ? Setup e2e tests with Nightwatch? (Y/n)</div><div class=\"line\"> ? Setup e2e tests with Nightwatch? Yes</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化项目信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装less/less-loader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install less less-loader --save-dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装jquery库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install jquery --save-dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>由于此项目为移动端，所以需要修改根目录下的index.html文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">+     <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>smile-junior<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"comment\">&lt;!-- built files will be auto injected --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">+ 为新增的行</div></pre></td></tr></table></figure>\n</li>\n<li><p>在入口文件main.js内挂载全局的jquery，挂载后可以通过this.$使用，但不能用在()=&gt;{}箭头函数中，因为箭头函数中的this指向不是Vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">main.js</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// The Vue build version to load with the `import` command</span></div><div class=\"line\">  <span class=\"comment\">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></div><div class=\"line\">  <span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\">  <span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></div><div class=\"line\">  <span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"></div><div class=\"line\">  Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\">+ Vue.prototype.$ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/* eslint-disable no-new */</span></div><div class=\"line\">  <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    router,</div><div class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">'&lt;App/&gt;'</span>,</div><div class=\"line\">    <span class=\"attr\">components</span>: &#123; App &#125;</div><div class=\"line\">  &#125;)</div><div class=\"line\"></div><div class=\"line\">+ 为新增的行</div></pre></td></tr></table></figure>\n</li>\n<li><p>在开发环境中调试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>打包项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run build</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>成功，在此不放贴图了。暂时写到这里，后面会继续更…</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>既然公司有同事开始使用Vue，为了表示不落后，我也要开始vue的探索之旅啦。</p>\n</blockquote>\n<h5 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h5><p>node + vue + less</p>\n<h5 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h5><p>window + sublime</p>\n<h5 id=\"项目搭建\"><a href=\"#项目搭建\" class=\"headerlink\" title=\"项目搭建\"></a>项目搭建</h5><ul>\n<li><p>新建项目文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir 项目名称(这里使用pro-one代替)</div><div class=\"line\">cd pro-one</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装vue-cli脚手架 (没有node环境要在电脑上安装node，参考链接：<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"external\">http://nodejs.cn/</a>)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save-dev vue-cli</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">vue init webpack ./ </div><div class=\"line\">// 这里会提示你目标目录已存在，是否确认继续。（目标目录即为当前目录） 输入yes即可。</div><div class=\"line\">接下来会有一些确认信息：</div><div class=\"line\"></div><div class=\"line\"> ? Project name (./) ******</div><div class=\"line\"> ? Project name ******</div><div class=\"line\"> ? Project description (A Vue.js project)</div><div class=\"line\"> ? Project description A Vue.js project</div><div class=\"line\"> ? Author ******</div><div class=\"line\"> ? Author ******</div><div class=\"line\"> ? Vue build standalone</div><div class=\"line\"> ? Install vue-router? (Y/n)</div><div class=\"line\"> ? Install vue-router? Yes</div><div class=\"line\"> ? Use ESLint to lint your code? (Y/n)</div><div class=\"line\"> ? Use ESLint to lint your code? Yes</div><div class=\"line\"> ? Pick an ESLint preset (Use arrow keys)</div><div class=\"line\"> ? Pick an ESLint preset Standard</div><div class=\"line\"> ? Setup unit tests with Karma + Mocha? (Y/n)</div><div class=\"line\"> ? Setup unit tests with Karma + Mocha? Yes</div><div class=\"line\"> ? Setup e2e tests with Nightwatch? (Y/n)</div><div class=\"line\"> ? Setup e2e tests with Nightwatch? Yes</div></pre></td></tr></table></figure>\n</li>\n<li><p>初始化项目信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装less/less-loader</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install less less-loader --save-dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>安装jquery库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install jquery --save-dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>由于此项目为移动端，所以需要修改根目录下的index.html文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">  <span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">+     <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\"</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>smile-junior<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">      <span class=\"comment\">&lt;!-- built files will be auto injected --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">+ 为新增的行</div></pre></td></tr></table></figure>\n</li>\n<li><p>在入口文件main.js内挂载全局的jquery，挂载后可以通过this.$使用，但不能用在()=&gt;{}箭头函数中，因为箭头函数中的this指向不是Vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">main.js</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// The Vue build version to load with the `import` command</span></div><div class=\"line\">  <span class=\"comment\">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></div><div class=\"line\">  <span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\">  <span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></div><div class=\"line\">  <span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"></div><div class=\"line\">  Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\">+ Vue.prototype.$ = <span class=\"built_in\">require</span>(<span class=\"string\">'jquery'</span>)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">/* eslint-disable no-new */</span></div><div class=\"line\">  <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">'#app'</span>,</div><div class=\"line\">    router,</div><div class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">'&lt;App/&gt;'</span>,</div><div class=\"line\">    <span class=\"attr\">components</span>: &#123; App &#125;</div><div class=\"line\">  &#125;)</div><div class=\"line\"></div><div class=\"line\">+ 为新增的行</div></pre></td></tr></table></figure>\n</li>\n<li><p>在开发环境中调试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n</li>\n<li><p>打包项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run build</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>成功，在此不放贴图了。暂时写到这里，后面会继续更…</p>\n"},{"title":"[python实例] - 获取国内城市区域划分数据，写cityPicker插件","date":"2018-03-09T02:58:11.000Z","_content":"\n> 因工作需要，写一个城市选择插件，故在国家统计局的网站上面找了16年的城乡划分数据，以保证数据的及时性和可扩展性。\n\n通过访问链接www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html 可以看到这个页面\n\n![统计局截图](http://static.togor.cn/blog-1.png?imageView2/0/w/450)\n\n点开对应链接，则可以看到相应级别的区域划分信息\n\n![统计局截图](http://static.togor.cn/blog-2.png?imageView2/0/w/450)\n\n根据页面的dom节点信息，得到我们相应的数据。\n\n代码如下：\n\n```python\nimport re\nimport requests\nimport json\n\ndata = {}\npattern =re.compile(u\"[\\u4e00-\\u9fa5]+\")\n\n# 写数据\ndef writeJson(jso):\n  jsObj = json.dumps(jso)\n  fileObject = open('city.json', 'w') \n  fileObject.write(jsObj)  \n  fileObject.close()  \n\n# 获取city数据\nclass GetCityData:\n  def __init__(self, url):\n    self.url = url\n    self.openUrl()\n\n  # 打开根页面\n  def openUrl(self):\n    txt = self.getTxt(self.url)\n    res = re.findall(r'provincetr\\'><td>(.*)</td></tr>', txt)\n    res2 = re.findall(r'\\d{2}', res[0])\n    res3 = re.findall(pattern, res[0])\n    for (x1, x2) in zip(res2, res3):\n      data[x1] = {'prov': x2,'child':{}}\n      print(data[x1])\n      self.twoLevel(x1)\n    # print(data)\n    writeJson(data)\n\n  def twoLevel(self, u):\n    u = 'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'+ u +'.html'\n    txt = self.getTxt(u)\n    res = re.findall(r'citytr\\'><td>(.*?)</td></tr>', txt)\n    for x in res:\n      href = re.findall(r'\\d*\\/\\d*', x)\n      ss = href[0].split('/')\n      data[ss[0]]['child'][ss[1]] = {'muni': re.findall(pattern, x)[0], 'child': {}}\n      print(data[ss[0]]['child'][ss[1]])\n      self.threeLevel(ss)\n  def threeLevel(self, us):\n    txt = self.getTxt('http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/' + us[0] + '/' + us[1] + '.html')\n    res = re.findall(r'countytr\\'><td>(.*?)</td></tr>', txt)\n    for x in res:\n      href = re.findall(r'\\d*\\/\\d*', x)\n      ss = href[0].split('/')\n      data[us[0]]['child'][us[1]]['child'][ss[1]] = {'county': re.findall(pattern, x)[0]}\n      print(data[us[0]]['child'][us[1]]['child'][ss[1]])\n\n  def getTxt(self, u):\n    headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36'}\n    m_res = requests.get(u, headers=headers)\n    m_res.encoding = 'gb2312'\n    return m_res.text\n\nGetCityData('http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html')\n```","source":"_posts/python实例-获取国内城市区域划分数据，写cityPicker插件.md","raw":"---\ntitle: '[python实例] - 获取国内城市区域划分数据，写cityPicker插件'\ndate: 2018-03-09 10:58:11\ntags:\n  - python\n---\n\n> 因工作需要，写一个城市选择插件，故在国家统计局的网站上面找了16年的城乡划分数据，以保证数据的及时性和可扩展性。\n\n通过访问链接www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html 可以看到这个页面\n\n![统计局截图](http://static.togor.cn/blog-1.png?imageView2/0/w/450)\n\n点开对应链接，则可以看到相应级别的区域划分信息\n\n![统计局截图](http://static.togor.cn/blog-2.png?imageView2/0/w/450)\n\n根据页面的dom节点信息，得到我们相应的数据。\n\n代码如下：\n\n```python\nimport re\nimport requests\nimport json\n\ndata = {}\npattern =re.compile(u\"[\\u4e00-\\u9fa5]+\")\n\n# 写数据\ndef writeJson(jso):\n  jsObj = json.dumps(jso)\n  fileObject = open('city.json', 'w') \n  fileObject.write(jsObj)  \n  fileObject.close()  \n\n# 获取city数据\nclass GetCityData:\n  def __init__(self, url):\n    self.url = url\n    self.openUrl()\n\n  # 打开根页面\n  def openUrl(self):\n    txt = self.getTxt(self.url)\n    res = re.findall(r'provincetr\\'><td>(.*)</td></tr>', txt)\n    res2 = re.findall(r'\\d{2}', res[0])\n    res3 = re.findall(pattern, res[0])\n    for (x1, x2) in zip(res2, res3):\n      data[x1] = {'prov': x2,'child':{}}\n      print(data[x1])\n      self.twoLevel(x1)\n    # print(data)\n    writeJson(data)\n\n  def twoLevel(self, u):\n    u = 'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'+ u +'.html'\n    txt = self.getTxt(u)\n    res = re.findall(r'citytr\\'><td>(.*?)</td></tr>', txt)\n    for x in res:\n      href = re.findall(r'\\d*\\/\\d*', x)\n      ss = href[0].split('/')\n      data[ss[0]]['child'][ss[1]] = {'muni': re.findall(pattern, x)[0], 'child': {}}\n      print(data[ss[0]]['child'][ss[1]])\n      self.threeLevel(ss)\n  def threeLevel(self, us):\n    txt = self.getTxt('http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/' + us[0] + '/' + us[1] + '.html')\n    res = re.findall(r'countytr\\'><td>(.*?)</td></tr>', txt)\n    for x in res:\n      href = re.findall(r'\\d*\\/\\d*', x)\n      ss = href[0].split('/')\n      data[us[0]]['child'][us[1]]['child'][ss[1]] = {'county': re.findall(pattern, x)[0]}\n      print(data[us[0]]['child'][us[1]]['child'][ss[1]])\n\n  def getTxt(self, u):\n    headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36'}\n    m_res = requests.get(u, headers=headers)\n    m_res.encoding = 'gb2312'\n    return m_res.text\n\nGetCityData('http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html')\n```","slug":"python实例-获取国内城市区域划分数据，写cityPicker插件","published":1,"updated":"2018-04-21T05:22:20.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vm0011uw2ceubwxw5f","content":"<blockquote>\n<p>因工作需要，写一个城市选择插件，故在国家统计局的网站上面找了16年的城乡划分数据，以保证数据的及时性和可扩展性。</p>\n</blockquote>\n<p>通过访问链接www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html 可以看到这个页面</p>\n<p><img src=\"http://static.togor.cn/blog-1.png?imageView2/0/w/450\" alt=\"统计局截图\"></p>\n<p>点开对应链接，则可以看到相应级别的区域划分信息</p>\n<p><img src=\"http://static.togor.cn/blog-2.png?imageView2/0/w/450\" alt=\"统计局截图\"></p>\n<p>根据页面的dom节点信息，得到我们相应的数据。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"></div><div class=\"line\">data = &#123;&#125;</div><div class=\"line\">pattern =re.compile(<span class=\"string\">u\"[\\u4e00-\\u9fa5]+\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 写数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">writeJson</span><span class=\"params\">(jso)</span>:</span></div><div class=\"line\">  jsObj = json.dumps(jso)</div><div class=\"line\">  fileObject = open(<span class=\"string\">'city.json'</span>, <span class=\"string\">'w'</span>) </div><div class=\"line\">  fileObject.write(jsObj)  </div><div class=\"line\">  fileObject.close()  </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 获取city数据</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetCityData</span>:</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, url)</span>:</span></div><div class=\"line\">    self.url = url</div><div class=\"line\">    self.openUrl()</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># 打开根页面</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">openUrl</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">    txt = self.getTxt(self.url)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'provincetr\\'&gt;&lt;td&gt;(.*)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    res2 = re.findall(<span class=\"string\">r'\\d&#123;2&#125;'</span>, res[<span class=\"number\">0</span>])</div><div class=\"line\">    res3 = re.findall(pattern, res[<span class=\"number\">0</span>])</div><div class=\"line\">    <span class=\"keyword\">for</span> (x1, x2) <span class=\"keyword\">in</span> zip(res2, res3):</div><div class=\"line\">      data[x1] = &#123;<span class=\"string\">'prov'</span>: x2,<span class=\"string\">'child'</span>:&#123;&#125;&#125;</div><div class=\"line\">      print(data[x1])</div><div class=\"line\">      self.twoLevel(x1)</div><div class=\"line\">    <span class=\"comment\"># print(data)</span></div><div class=\"line\">    writeJson(data)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoLevel</span><span class=\"params\">(self, u)</span>:</span></div><div class=\"line\">    u = <span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'</span>+ u +<span class=\"string\">'.html'</span></div><div class=\"line\">    txt = self.getTxt(u)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'citytr\\'&gt;&lt;td&gt;(.*?)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> res:</div><div class=\"line\">      href = re.findall(<span class=\"string\">r'\\d*\\/\\d*'</span>, x)</div><div class=\"line\">      ss = href[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)</div><div class=\"line\">      data[ss[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]] = &#123;<span class=\"string\">'muni'</span>: re.findall(pattern, x)[<span class=\"number\">0</span>], <span class=\"string\">'child'</span>: &#123;&#125;&#125;</div><div class=\"line\">      print(data[ss[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]])</div><div class=\"line\">      self.threeLevel(ss)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">threeLevel</span><span class=\"params\">(self, us)</span>:</span></div><div class=\"line\">    txt = self.getTxt(<span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'</span> + us[<span class=\"number\">0</span>] + <span class=\"string\">'/'</span> + us[<span class=\"number\">1</span>] + <span class=\"string\">'.html'</span>)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'countytr\\'&gt;&lt;td&gt;(.*?)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> res:</div><div class=\"line\">      href = re.findall(<span class=\"string\">r'\\d*\\/\\d*'</span>, x)</div><div class=\"line\">      ss = href[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)</div><div class=\"line\">      data[us[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][us[<span class=\"number\">1</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]] = &#123;<span class=\"string\">'county'</span>: re.findall(pattern, x)[<span class=\"number\">0</span>]&#125;</div><div class=\"line\">      print(data[us[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][us[<span class=\"number\">1</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]])</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getTxt</span><span class=\"params\">(self, u)</span>:</span></div><div class=\"line\">    headers = &#123;<span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36'</span>&#125;</div><div class=\"line\">    m_res = requests.get(u, headers=headers)</div><div class=\"line\">    m_res.encoding = <span class=\"string\">'gb2312'</span></div><div class=\"line\">    <span class=\"keyword\">return</span> m_res.text</div><div class=\"line\"></div><div class=\"line\">GetCityData(<span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html'</span>)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>因工作需要，写一个城市选择插件，故在国家统计局的网站上面找了16年的城乡划分数据，以保证数据的及时性和可扩展性。</p>\n</blockquote>\n<p>通过访问链接www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html 可以看到这个页面</p>\n<p><img src=\"http://static.togor.cn/blog-1.png?imageView2/0/w/450\" alt=\"统计局截图\"></p>\n<p>点开对应链接，则可以看到相应级别的区域划分信息</p>\n<p><img src=\"http://static.togor.cn/blog-2.png?imageView2/0/w/450\" alt=\"统计局截图\"></p>\n<p>根据页面的dom节点信息，得到我们相应的数据。</p>\n<p>代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"></div><div class=\"line\">data = &#123;&#125;</div><div class=\"line\">pattern =re.compile(<span class=\"string\">u\"[\\u4e00-\\u9fa5]+\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 写数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">writeJson</span><span class=\"params\">(jso)</span>:</span></div><div class=\"line\">  jsObj = json.dumps(jso)</div><div class=\"line\">  fileObject = open(<span class=\"string\">'city.json'</span>, <span class=\"string\">'w'</span>) </div><div class=\"line\">  fileObject.write(jsObj)  </div><div class=\"line\">  fileObject.close()  </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 获取city数据</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GetCityData</span>:</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, url)</span>:</span></div><div class=\"line\">    self.url = url</div><div class=\"line\">    self.openUrl()</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># 打开根页面</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">openUrl</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">    txt = self.getTxt(self.url)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'provincetr\\'&gt;&lt;td&gt;(.*)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    res2 = re.findall(<span class=\"string\">r'\\d&#123;2&#125;'</span>, res[<span class=\"number\">0</span>])</div><div class=\"line\">    res3 = re.findall(pattern, res[<span class=\"number\">0</span>])</div><div class=\"line\">    <span class=\"keyword\">for</span> (x1, x2) <span class=\"keyword\">in</span> zip(res2, res3):</div><div class=\"line\">      data[x1] = &#123;<span class=\"string\">'prov'</span>: x2,<span class=\"string\">'child'</span>:&#123;&#125;&#125;</div><div class=\"line\">      print(data[x1])</div><div class=\"line\">      self.twoLevel(x1)</div><div class=\"line\">    <span class=\"comment\"># print(data)</span></div><div class=\"line\">    writeJson(data)</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoLevel</span><span class=\"params\">(self, u)</span>:</span></div><div class=\"line\">    u = <span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'</span>+ u +<span class=\"string\">'.html'</span></div><div class=\"line\">    txt = self.getTxt(u)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'citytr\\'&gt;&lt;td&gt;(.*?)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> res:</div><div class=\"line\">      href = re.findall(<span class=\"string\">r'\\d*\\/\\d*'</span>, x)</div><div class=\"line\">      ss = href[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)</div><div class=\"line\">      data[ss[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]] = &#123;<span class=\"string\">'muni'</span>: re.findall(pattern, x)[<span class=\"number\">0</span>], <span class=\"string\">'child'</span>: &#123;&#125;&#125;</div><div class=\"line\">      print(data[ss[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]])</div><div class=\"line\">      self.threeLevel(ss)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">threeLevel</span><span class=\"params\">(self, us)</span>:</span></div><div class=\"line\">    txt = self.getTxt(<span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/'</span> + us[<span class=\"number\">0</span>] + <span class=\"string\">'/'</span> + us[<span class=\"number\">1</span>] + <span class=\"string\">'.html'</span>)</div><div class=\"line\">    res = re.findall(<span class=\"string\">r'countytr\\'&gt;&lt;td&gt;(.*?)&lt;/td&gt;&lt;/tr&gt;'</span>, txt)</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> res:</div><div class=\"line\">      href = re.findall(<span class=\"string\">r'\\d*\\/\\d*'</span>, x)</div><div class=\"line\">      ss = href[<span class=\"number\">0</span>].split(<span class=\"string\">'/'</span>)</div><div class=\"line\">      data[us[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][us[<span class=\"number\">1</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]] = &#123;<span class=\"string\">'county'</span>: re.findall(pattern, x)[<span class=\"number\">0</span>]&#125;</div><div class=\"line\">      print(data[us[<span class=\"number\">0</span>]][<span class=\"string\">'child'</span>][us[<span class=\"number\">1</span>]][<span class=\"string\">'child'</span>][ss[<span class=\"number\">1</span>]])</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getTxt</span><span class=\"params\">(self, u)</span>:</span></div><div class=\"line\">    headers = &#123;<span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36'</span>&#125;</div><div class=\"line\">    m_res = requests.get(u, headers=headers)</div><div class=\"line\">    m_res.encoding = <span class=\"string\">'gb2312'</span></div><div class=\"line\">    <span class=\"keyword\">return</span> m_res.text</div><div class=\"line\"></div><div class=\"line\">GetCityData(<span class=\"string\">'http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2016/index.html'</span>)</div></pre></td></tr></table></figure>"},{"title":"webRTC录音功能","date":"2018-03-30T06:04:35.000Z","_content":"\n> 近期公司老项目中有个录音功能由于chrome浏览器的更新，停止录音时特别慢，由此引出了相关问题\n\n问题原因：\n项目所使用的录音插件为：microm.min.js，我搜了一下，在github上有相关的项目：https://zzarcon.github.io/microm/\n这个插件在浏览器更新后，对于录音停止后处理数据并返回信息的速度明显慢了很多，特别影响体验。至于为何在更新了浏览器会出现这样的问题，我目前并未发现什么原因。\n但有一点是这个插件值得优化的地方，就是把录音的Blob转成MP3数据行为是在停止录音操作发生后执行的。如果改成边录边转，那就不会存在这种问题了..\n\n处理问题的过程：\n首先，我找到了格式话了压缩的代码，通过日志找到耗时的代码，就在下面的for里，就是把blob转成mp3的过程，但我想不通的是为什么新版的chrome（64，65）会很慢…\n\n```js\n{\n  key: \"encodeSamplesToMp3\",\n  value: function(e, t) {\n    t = o(l, t);\n    //这里的for循环特别耗时\n    for (var r, n, a, i, s, f, _ = e[0], u = e[1], c = t.maxSamples, h = _.length, d = new this.lame.Mp3Encoder(t.channels, t.sampleRate, t.kbps), p = [], m = 0; h >= c;)\n    m += c,\n    n = _.splice(m, m + c),\n    a = u ? u.splice(m, m + c) : null,\n    r = d.encodeBuffer(n, a),\n    r.length > 0 && p.push(new Int8Array(r)),\n    h -= c;\n    i = d.flush(),\n    i.length > 0 && p.push(new Int8Array(i)),\n    s = new Blob(p, {\n      type: \"audio/mp3\"\n    }),\n    f = URL.createObjectURL(s),\n    this.mp3Resolver({\n      buffer: p,\n      blob: s,\n      url: f\n    })\n  }\n```\n我去查了chrome浏览器的更新文档，但并没有找到相关的信息（可能是我的英文阅读能力太差了8_8）。\n\n在我一筹莫展的时候，我们的运维小哥nick跟我说，我们项目的V2.0上面的录音是ok的！（顿时觉得他的身躯有光芒在照耀着我…）\n我打开2.0测试了一下，果然很快。\n果断找到项目文件，里面引入了三个相关文件：\nlame.min.js\nrecordmp3.js\nworker-realtime.js\n\n而v2.0的做法是在录音时弹出一个新的窗口，录音在新的窗口中处理，完成后把数据传给老窗口。（不清楚为什么会这样，可能是跟下面引发出的问题相关吧。）\n\n其中，lame.min.js是底层处理录音的文件，其他两个文件是对于lame的封装：\n代码如下：\nrecordmp3.js\n```js\n(function (exports) {\n    var MP3Recorder = function (config) {\n        var recorder = this;\n        config = config || {};\n        config.sampleRate = config.sampleRate || 44100;\n        config.bitRate = config.bitRate || 128;\n        navigator.getUserMedia = navigator.getUserMedia ||\n                                 navigator.webkitGetUserMedia ||\n                                 navigator.mozGetUserMedia ||\n                                 navigator.msGetUserMedia;\n        if (navigator.getUserMedia) {\n            navigator.getUserMedia({\n                audio: true\n            },\n            function (stream) {\n                var context = new AudioContext(),\n                    microphone = context.createMediaStreamSource(stream),\n                    processor = context.createScriptProcessor(16384, 1, 1),//bufferSize大小，输入channel数，输出channel数\n                    mp3ReceiveSuccess, currentErrorCallback;\n                config.sampleRate = context.sampleRate;\n                processor.onaudioprocess = function (event) {\n                    //边录音边转换\n                    var array = event.inputBuffer.getChannelData(0);\n                    realTimeWorker.postMessage({ cmd: 'encode', buf: array });\n                };\n                var realTimeWorker = new Worker('/audio/worker-realtime.js');\n                realTimeWorker.onmessage = function (e) {\n                    switch (e.data.cmd) {\n                        case 'init':\n                            log('初始化成功');\n                            if (config.funOk) {\n                                config.funOk();\n                            }\n                            break;\n                        case 'end':\n                            log('MP3大小：', e.data.buf.length);\n                            if (mp3ReceiveSuccess) {\n                                mp3ReceiveSuccess(new Blob(e.data.buf, { type: 'audio/mp3' }));\n                            }\n                            break;\n                        case 'error':\n                            log('错误信息：' + e.data.error);\n                            if (currentErrorCallback) {\n                                currentErrorCallback(e.data.error);\n                            }\n                            break;\n                        default:\n                            log('未知信息：', e.data);\n                    }\n                };\n                recorder.getMp3Blob = function (onSuccess, onError) {\n                    currentErrorCallback = onError;\n                    mp3ReceiveSuccess = onSuccess;\n                    realTimeWorker.postMessage({ cmd: 'finish' });\n                };\n                recorder.start = function () {\n                    if (processor && microphone) {\n                        microphone.connect(processor);\n                        processor.connect(context.destination);\n                        log('开始录音');\n                    }\n                }\n                recorder.stop = function () {\n                    if (processor && microphone) {\n                        microphone.disconnect(processor);\n                        processor.disconnect(context.destination);\n                        log('录音结束');\n                    }\n                }\n                realTimeWorker.postMessage({\n                    cmd: 'init',\n                    config: {\n                        sampleRate: config.sampleRate,\n                        bitRate: config.bitRate\n                    }\n                });\n            },\n            function (error) {\n                var msg;\n                switch (error.code || error.name) {\n                    case 'PERMISSION_DENIED':\n                    case 'PermissionDeniedError':\n                        msg = '用户拒绝访问麦客风';\n                        break;\n                    case 'NOT_SUPPORTED_ERROR':\n                    case 'NotSupportedError':\n                        msg = '浏览器不支持麦客风';\n                        break;\n                    case 'MANDATORY_UNSATISFIED_ERROR':\n                    case 'MandatoryUnsatisfiedError':\n                        msg = '找不到麦客风设备';\n                        break;\n                    default:\n                        msg = '无法打开麦克风，异常信息:' + (error.code || error.name);\n                        break;\n                }\n                if (config.funCancel) {\n                    config.funCancel(msg);\n                }\n            });\n        } else {\n            if (config.funCancel) {\n                config.funCancel('当前浏览器不支持录音功能');\n            }\n        }\n        function log(str) {\n            if (config.debug) {\n                console.log(str);\n            }\n        }\n    }\n    exports.MP3Recorder = MP3Recorder;\n})(window);\n```\nworker-realtime.js\n```js\n(function () {\n    'use strict';\n    importScripts('lame.min.js');\n    var mp3Encoder, maxSamples = 1152, samplesMono, lame, config, dataBuffer;\n    var clearBuffer = function () {\n        dataBuffer = [];\n    };\n    var appendToBuffer = function (mp3Buf) {\n        dataBuffer.push(new Int8Array(mp3Buf));\n    };\n    var init = function (prefConfig) {\n        config = prefConfig || {};\n        lame = new lamejs();\n        mp3Encoder = new lame.Mp3Encoder(1, config.sampleRate || 44100, config.bitRate || 128);\n        clearBuffer();\n        self.postMessage({\n            cmd: 'init'\n        });\n    };\n    var floatTo16BitPCM = function floatTo16BitPCM(input, output) {\n        for (var i = 0; i < input.length; i++) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF);\n        }\n    };\n    var convertBuffer = function (arrayBuffer) {\n        var data = new Float32Array(arrayBuffer);\n        var out = new Int16Array(arrayBuffer.length);\n        floatTo16BitPCM(data, out)\n        return out;\n    };\n    var encode = function (arrayBuffer) {\n        samplesMono = convertBuffer(arrayBuffer);\n        var remaining = samplesMono.length;\n        for (var i = 0; remaining >= 0; i += maxSamples) {\n            var left = samplesMono.subarray(i, i + maxSamples);\n            var mp3buf = mp3Encoder.encodeBuffer(left);\n            appendToBuffer(mp3buf);\n            remaining -= maxSamples;\n        }\n    };\n    var finish = function () {\n        appendToBuffer(mp3Encoder.flush());\n        self.postMessage({\n            cmd: 'end',\n            buf: dataBuffer\n        });\n        clearBuffer();\n    };\n    self.onmessage = function (e) {\n        switch (e.data.cmd) {\n            case 'init':\n                init(e.data.config);\n                break;\n            case 'encode':\n                encode(e.data.buf);\n                break;\n            case 'finish':\n                finish();\n                break;\n        }\n    };\n})();\n```\n赶紧，我写了一个demo，还好可以在localhost下做测试（安全限制：只能在安全的域下使用相关功能）。测试结果：录音停止很快，不在有上述问题。速度上线！\n\n但，第二天问题又来了，一个老师反馈说，chrome标签页上面一直有一个小红点（显示：此标签页正在使用您的摄像头和麦克风，果然歪果仁对于自己的隐私还是很敏感的）\n\n拉出代码来，发现打开页面时直接新建了MP3Recorder对象，更改代码把new MP3Recorder放到了用户触发录音开始的事件里，轻松搞定！\n\n可在我正准备提交代码时，问题又来了，我发现停止录音后，“小红点”还是在的。Ca，这是什么鬼..\n\n赶紧百度，一堆结果里，只有一条相关的。里面说到了localMediaStream.getTracks()[0].stop();\n这是什么东西，换google，搜mediastream，肯定跟这玩意儿有关。\n原来是通过getUserMedia获取LocalMediaStream对象，然后把其中的track给停掉。\n然而，LocaMediaStream已经被instead，可以使用mediaStream，我就在自己写的stop方法中加了这些：\n```js\nnavigator.getUserMedia =  navigator.getUserMedia ||\n                          navigator.webkitGetUserMedia ||\n                          navigator.mozGetUserMedia ||\n                          navigator.msGetUserMedia;\nif (navigator.getUserMedia) {\n    navigator.getUserMedia({\n        audio: true\n    },\n    function (stream) {\n      tracks = stream.getAudioTracks()\n      tracks.map(track => {\n        stream.removeTrack(track) // 这里是发现stream有个原型方法removeTrack，然而并没有什么用\n        track.stop()\n      })\n    },\n    function (err) {\n      console.log(err)\n    })\n}\n```\n然而还是不行，最后，我又看了一遍recordmp3.js，发现里面也有getUserMedia方法，只能试一试了，我把track.stop()放到了recorder.stop函数里：\n```js\nrecorder.stop = function () {\n    if (processor && microphone) {\n        microphone.disconnect(processor);\n        processor.disconnect(context.destination);\n        stream.getTracks()[0].stop()    // 这里\n        log('录音结束');\n    }\n}\n```\n“小红点”没了，666~\n\n就这样，“小红点”终于消失了，但地址栏还是有个录像机的图标一直显示在那里，暂时不去管他了。有空好好研究一下…","source":"_posts/webRTC录音功能.md","raw":"---\ntitle: webRTC录音功能\ndate: 2018-03-30 14:04:35\ntags:\n    - html\n---\n\n> 近期公司老项目中有个录音功能由于chrome浏览器的更新，停止录音时特别慢，由此引出了相关问题\n\n问题原因：\n项目所使用的录音插件为：microm.min.js，我搜了一下，在github上有相关的项目：https://zzarcon.github.io/microm/\n这个插件在浏览器更新后，对于录音停止后处理数据并返回信息的速度明显慢了很多，特别影响体验。至于为何在更新了浏览器会出现这样的问题，我目前并未发现什么原因。\n但有一点是这个插件值得优化的地方，就是把录音的Blob转成MP3数据行为是在停止录音操作发生后执行的。如果改成边录边转，那就不会存在这种问题了..\n\n处理问题的过程：\n首先，我找到了格式话了压缩的代码，通过日志找到耗时的代码，就在下面的for里，就是把blob转成mp3的过程，但我想不通的是为什么新版的chrome（64，65）会很慢…\n\n```js\n{\n  key: \"encodeSamplesToMp3\",\n  value: function(e, t) {\n    t = o(l, t);\n    //这里的for循环特别耗时\n    for (var r, n, a, i, s, f, _ = e[0], u = e[1], c = t.maxSamples, h = _.length, d = new this.lame.Mp3Encoder(t.channels, t.sampleRate, t.kbps), p = [], m = 0; h >= c;)\n    m += c,\n    n = _.splice(m, m + c),\n    a = u ? u.splice(m, m + c) : null,\n    r = d.encodeBuffer(n, a),\n    r.length > 0 && p.push(new Int8Array(r)),\n    h -= c;\n    i = d.flush(),\n    i.length > 0 && p.push(new Int8Array(i)),\n    s = new Blob(p, {\n      type: \"audio/mp3\"\n    }),\n    f = URL.createObjectURL(s),\n    this.mp3Resolver({\n      buffer: p,\n      blob: s,\n      url: f\n    })\n  }\n```\n我去查了chrome浏览器的更新文档，但并没有找到相关的信息（可能是我的英文阅读能力太差了8_8）。\n\n在我一筹莫展的时候，我们的运维小哥nick跟我说，我们项目的V2.0上面的录音是ok的！（顿时觉得他的身躯有光芒在照耀着我…）\n我打开2.0测试了一下，果然很快。\n果断找到项目文件，里面引入了三个相关文件：\nlame.min.js\nrecordmp3.js\nworker-realtime.js\n\n而v2.0的做法是在录音时弹出一个新的窗口，录音在新的窗口中处理，完成后把数据传给老窗口。（不清楚为什么会这样，可能是跟下面引发出的问题相关吧。）\n\n其中，lame.min.js是底层处理录音的文件，其他两个文件是对于lame的封装：\n代码如下：\nrecordmp3.js\n```js\n(function (exports) {\n    var MP3Recorder = function (config) {\n        var recorder = this;\n        config = config || {};\n        config.sampleRate = config.sampleRate || 44100;\n        config.bitRate = config.bitRate || 128;\n        navigator.getUserMedia = navigator.getUserMedia ||\n                                 navigator.webkitGetUserMedia ||\n                                 navigator.mozGetUserMedia ||\n                                 navigator.msGetUserMedia;\n        if (navigator.getUserMedia) {\n            navigator.getUserMedia({\n                audio: true\n            },\n            function (stream) {\n                var context = new AudioContext(),\n                    microphone = context.createMediaStreamSource(stream),\n                    processor = context.createScriptProcessor(16384, 1, 1),//bufferSize大小，输入channel数，输出channel数\n                    mp3ReceiveSuccess, currentErrorCallback;\n                config.sampleRate = context.sampleRate;\n                processor.onaudioprocess = function (event) {\n                    //边录音边转换\n                    var array = event.inputBuffer.getChannelData(0);\n                    realTimeWorker.postMessage({ cmd: 'encode', buf: array });\n                };\n                var realTimeWorker = new Worker('/audio/worker-realtime.js');\n                realTimeWorker.onmessage = function (e) {\n                    switch (e.data.cmd) {\n                        case 'init':\n                            log('初始化成功');\n                            if (config.funOk) {\n                                config.funOk();\n                            }\n                            break;\n                        case 'end':\n                            log('MP3大小：', e.data.buf.length);\n                            if (mp3ReceiveSuccess) {\n                                mp3ReceiveSuccess(new Blob(e.data.buf, { type: 'audio/mp3' }));\n                            }\n                            break;\n                        case 'error':\n                            log('错误信息：' + e.data.error);\n                            if (currentErrorCallback) {\n                                currentErrorCallback(e.data.error);\n                            }\n                            break;\n                        default:\n                            log('未知信息：', e.data);\n                    }\n                };\n                recorder.getMp3Blob = function (onSuccess, onError) {\n                    currentErrorCallback = onError;\n                    mp3ReceiveSuccess = onSuccess;\n                    realTimeWorker.postMessage({ cmd: 'finish' });\n                };\n                recorder.start = function () {\n                    if (processor && microphone) {\n                        microphone.connect(processor);\n                        processor.connect(context.destination);\n                        log('开始录音');\n                    }\n                }\n                recorder.stop = function () {\n                    if (processor && microphone) {\n                        microphone.disconnect(processor);\n                        processor.disconnect(context.destination);\n                        log('录音结束');\n                    }\n                }\n                realTimeWorker.postMessage({\n                    cmd: 'init',\n                    config: {\n                        sampleRate: config.sampleRate,\n                        bitRate: config.bitRate\n                    }\n                });\n            },\n            function (error) {\n                var msg;\n                switch (error.code || error.name) {\n                    case 'PERMISSION_DENIED':\n                    case 'PermissionDeniedError':\n                        msg = '用户拒绝访问麦客风';\n                        break;\n                    case 'NOT_SUPPORTED_ERROR':\n                    case 'NotSupportedError':\n                        msg = '浏览器不支持麦客风';\n                        break;\n                    case 'MANDATORY_UNSATISFIED_ERROR':\n                    case 'MandatoryUnsatisfiedError':\n                        msg = '找不到麦客风设备';\n                        break;\n                    default:\n                        msg = '无法打开麦克风，异常信息:' + (error.code || error.name);\n                        break;\n                }\n                if (config.funCancel) {\n                    config.funCancel(msg);\n                }\n            });\n        } else {\n            if (config.funCancel) {\n                config.funCancel('当前浏览器不支持录音功能');\n            }\n        }\n        function log(str) {\n            if (config.debug) {\n                console.log(str);\n            }\n        }\n    }\n    exports.MP3Recorder = MP3Recorder;\n})(window);\n```\nworker-realtime.js\n```js\n(function () {\n    'use strict';\n    importScripts('lame.min.js');\n    var mp3Encoder, maxSamples = 1152, samplesMono, lame, config, dataBuffer;\n    var clearBuffer = function () {\n        dataBuffer = [];\n    };\n    var appendToBuffer = function (mp3Buf) {\n        dataBuffer.push(new Int8Array(mp3Buf));\n    };\n    var init = function (prefConfig) {\n        config = prefConfig || {};\n        lame = new lamejs();\n        mp3Encoder = new lame.Mp3Encoder(1, config.sampleRate || 44100, config.bitRate || 128);\n        clearBuffer();\n        self.postMessage({\n            cmd: 'init'\n        });\n    };\n    var floatTo16BitPCM = function floatTo16BitPCM(input, output) {\n        for (var i = 0; i < input.length; i++) {\n            var s = Math.max(-1, Math.min(1, input[i]));\n            output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF);\n        }\n    };\n    var convertBuffer = function (arrayBuffer) {\n        var data = new Float32Array(arrayBuffer);\n        var out = new Int16Array(arrayBuffer.length);\n        floatTo16BitPCM(data, out)\n        return out;\n    };\n    var encode = function (arrayBuffer) {\n        samplesMono = convertBuffer(arrayBuffer);\n        var remaining = samplesMono.length;\n        for (var i = 0; remaining >= 0; i += maxSamples) {\n            var left = samplesMono.subarray(i, i + maxSamples);\n            var mp3buf = mp3Encoder.encodeBuffer(left);\n            appendToBuffer(mp3buf);\n            remaining -= maxSamples;\n        }\n    };\n    var finish = function () {\n        appendToBuffer(mp3Encoder.flush());\n        self.postMessage({\n            cmd: 'end',\n            buf: dataBuffer\n        });\n        clearBuffer();\n    };\n    self.onmessage = function (e) {\n        switch (e.data.cmd) {\n            case 'init':\n                init(e.data.config);\n                break;\n            case 'encode':\n                encode(e.data.buf);\n                break;\n            case 'finish':\n                finish();\n                break;\n        }\n    };\n})();\n```\n赶紧，我写了一个demo，还好可以在localhost下做测试（安全限制：只能在安全的域下使用相关功能）。测试结果：录音停止很快，不在有上述问题。速度上线！\n\n但，第二天问题又来了，一个老师反馈说，chrome标签页上面一直有一个小红点（显示：此标签页正在使用您的摄像头和麦克风，果然歪果仁对于自己的隐私还是很敏感的）\n\n拉出代码来，发现打开页面时直接新建了MP3Recorder对象，更改代码把new MP3Recorder放到了用户触发录音开始的事件里，轻松搞定！\n\n可在我正准备提交代码时，问题又来了，我发现停止录音后，“小红点”还是在的。Ca，这是什么鬼..\n\n赶紧百度，一堆结果里，只有一条相关的。里面说到了localMediaStream.getTracks()[0].stop();\n这是什么东西，换google，搜mediastream，肯定跟这玩意儿有关。\n原来是通过getUserMedia获取LocalMediaStream对象，然后把其中的track给停掉。\n然而，LocaMediaStream已经被instead，可以使用mediaStream，我就在自己写的stop方法中加了这些：\n```js\nnavigator.getUserMedia =  navigator.getUserMedia ||\n                          navigator.webkitGetUserMedia ||\n                          navigator.mozGetUserMedia ||\n                          navigator.msGetUserMedia;\nif (navigator.getUserMedia) {\n    navigator.getUserMedia({\n        audio: true\n    },\n    function (stream) {\n      tracks = stream.getAudioTracks()\n      tracks.map(track => {\n        stream.removeTrack(track) // 这里是发现stream有个原型方法removeTrack，然而并没有什么用\n        track.stop()\n      })\n    },\n    function (err) {\n      console.log(err)\n    })\n}\n```\n然而还是不行，最后，我又看了一遍recordmp3.js，发现里面也有getUserMedia方法，只能试一试了，我把track.stop()放到了recorder.stop函数里：\n```js\nrecorder.stop = function () {\n    if (processor && microphone) {\n        microphone.disconnect(processor);\n        processor.disconnect(context.destination);\n        stream.getTracks()[0].stop()    // 这里\n        log('录音结束');\n    }\n}\n```\n“小红点”没了，666~\n\n就这样，“小红点”终于消失了，但地址栏还是有个录像机的图标一直显示在那里，暂时不去管他了。有空好好研究一下…","slug":"webRTC录音功能","published":1,"updated":"2018-03-30T08:31:18.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vn0013uw2copg4baq9","content":"<blockquote>\n<p>近期公司老项目中有个录音功能由于chrome浏览器的更新，停止录音时特别慢，由此引出了相关问题</p>\n</blockquote>\n<p>问题原因：<br>项目所使用的录音插件为：microm.min.js，我搜了一下，在github上有相关的项目：<a href=\"https://zzarcon.github.io/microm/\" target=\"_blank\" rel=\"external\">https://zzarcon.github.io/microm/</a><br>这个插件在浏览器更新后，对于录音停止后处理数据并返回信息的速度明显慢了很多，特别影响体验。至于为何在更新了浏览器会出现这样的问题，我目前并未发现什么原因。<br>但有一点是这个插件值得优化的地方，就是把录音的Blob转成MP3数据行为是在停止录音操作发生后执行的。如果改成边录边转，那就不会存在这种问题了..</p>\n<p>处理问题的过程：<br>首先，我找到了格式话了压缩的代码，通过日志找到耗时的代码，就在下面的for里，就是把blob转成mp3的过程，但我想不通的是为什么新版的chrome（64，65）会很慢…</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">\"encodeSamplesToMp3\"</span>,</div><div class=\"line\">  <span class=\"attr\">value</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, t</span>) </span>&#123;</div><div class=\"line\">    t = o(l, t);</div><div class=\"line\">    <span class=\"comment\">//这里的for循环特别耗时</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> r, n, a, i, s, f, _ = e[<span class=\"number\">0</span>], u = e[<span class=\"number\">1</span>], c = t.maxSamples, h = _.length, d = <span class=\"keyword\">new</span> <span class=\"keyword\">this</span>.lame.Mp3Encoder(t.channels, t.sampleRate, t.kbps), p = [], m = <span class=\"number\">0</span>; h &gt;= c;)</div><div class=\"line\">    m += c,</div><div class=\"line\">    n = _.splice(m, m + c),</div><div class=\"line\">    a = u ? u.splice(m, m + c) : <span class=\"literal\">null</span>,</div><div class=\"line\">    r = d.encodeBuffer(n, a),</div><div class=\"line\">    r.length &gt; <span class=\"number\">0</span> &amp;&amp; p.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(r)),</div><div class=\"line\">    h -= c;</div><div class=\"line\">    i = d.flush(),</div><div class=\"line\">    i.length &gt; <span class=\"number\">0</span> &amp;&amp; p.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(i)),</div><div class=\"line\">    s = <span class=\"keyword\">new</span> Blob(p, &#123;</div><div class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">\"audio/mp3\"</span></div><div class=\"line\">    &#125;),</div><div class=\"line\">    f = URL.createObjectURL(s),</div><div class=\"line\">    <span class=\"keyword\">this</span>.mp3Resolver(&#123;</div><div class=\"line\">      <span class=\"attr\">buffer</span>: p,</div><div class=\"line\">      <span class=\"attr\">blob</span>: s,</div><div class=\"line\">      <span class=\"attr\">url</span>: f</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<p>我去查了chrome浏览器的更新文档，但并没有找到相关的信息（可能是我的英文阅读能力太差了8_8）。</p>\n<p>在我一筹莫展的时候，我们的运维小哥nick跟我说，我们项目的V2.0上面的录音是ok的！（顿时觉得他的身躯有光芒在照耀着我…）<br>我打开2.0测试了一下，果然很快。<br>果断找到项目文件，里面引入了三个相关文件：<br>lame.min.js<br>recordmp3.js<br>worker-realtime.js</p>\n<p>而v2.0的做法是在录音时弹出一个新的窗口，录音在新的窗口中处理，完成后把数据传给老窗口。（不清楚为什么会这样，可能是跟下面引发出的问题相关吧。）</p>\n<p>其中，lame.min.js是底层处理录音的文件，其他两个文件是对于lame的封装：<br>代码如下：<br>recordmp3.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exports</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> MP3Recorder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> recorder = <span class=\"keyword\">this</span>;</div><div class=\"line\">        config = config || &#123;&#125;;</div><div class=\"line\">        config.sampleRate = config.sampleRate || <span class=\"number\">44100</span>;</div><div class=\"line\">        config.bitRate = config.bitRate || <span class=\"number\">128</span>;</div><div class=\"line\">        navigator.getUserMedia = navigator.getUserMedia ||</div><div class=\"line\">                                 navigator.webkitGetUserMedia ||</div><div class=\"line\">                                 navigator.mozGetUserMedia ||</div><div class=\"line\">                                 navigator.msGetUserMedia;</div><div class=\"line\">        <span class=\"keyword\">if</span> (navigator.getUserMedia) &#123;</div><div class=\"line\">            navigator.getUserMedia(&#123;</div><div class=\"line\">                <span class=\"attr\">audio</span>: <span class=\"literal\">true</span></div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">stream</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> context = <span class=\"keyword\">new</span> AudioContext(),</div><div class=\"line\">                    microphone = context.createMediaStreamSource(stream),</div><div class=\"line\">                    processor = context.createScriptProcessor(<span class=\"number\">16384</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>),<span class=\"comment\">//bufferSize大小，输入channel数，输出channel数</span></div><div class=\"line\">                    mp3ReceiveSuccess, currentErrorCallback;</div><div class=\"line\">                config.sampleRate = context.sampleRate;</div><div class=\"line\">                processor.onaudioprocess = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//边录音边转换</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> array = event.inputBuffer.getChannelData(<span class=\"number\">0</span>);</div><div class=\"line\">                    realTimeWorker.postMessage(&#123; <span class=\"attr\">cmd</span>: <span class=\"string\">'encode'</span>, <span class=\"attr\">buf</span>: array &#125;);</div><div class=\"line\">                &#125;;</div><div class=\"line\">                <span class=\"keyword\">var</span> realTimeWorker = <span class=\"keyword\">new</span> Worker(<span class=\"string\">'/audio/worker-realtime.js'</span>);</div><div class=\"line\">                realTimeWorker.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">switch</span> (e.data.cmd) &#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'init'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'初始化成功'</span>);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (config.funOk) &#123;</div><div class=\"line\">                                config.funOk();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'end'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'MP3大小：'</span>, e.data.buf.length);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (mp3ReceiveSuccess) &#123;</div><div class=\"line\">                                mp3ReceiveSuccess(<span class=\"keyword\">new</span> Blob(e.data.buf, &#123; <span class=\"attr\">type</span>: <span class=\"string\">'audio/mp3'</span> &#125;));</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'error'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'错误信息：'</span> + e.data.error);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (currentErrorCallback) &#123;</div><div class=\"line\">                                currentErrorCallback(e.data.error);</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">default</span>:</div><div class=\"line\">                            log(<span class=\"string\">'未知信息：'</span>, e.data);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;;</div><div class=\"line\">                recorder.getMp3Blob = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">onSuccess, onError</span>) </span>&#123;</div><div class=\"line\">                    currentErrorCallback = onError;</div><div class=\"line\">                    mp3ReceiveSuccess = onSuccess;</div><div class=\"line\">                    realTimeWorker.postMessage(&#123; <span class=\"attr\">cmd</span>: <span class=\"string\">'finish'</span> &#125;);</div><div class=\"line\">                &#125;;</div><div class=\"line\">                recorder.start = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">                        microphone.connect(processor);</div><div class=\"line\">                        processor.connect(context.destination);</div><div class=\"line\">                        log(<span class=\"string\">'开始录音'</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                recorder.stop = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">                        microphone.disconnect(processor);</div><div class=\"line\">                        processor.disconnect(context.destination);</div><div class=\"line\">                        log(<span class=\"string\">'录音结束'</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                realTimeWorker.postMessage(&#123;</div><div class=\"line\">                    <span class=\"attr\">cmd</span>: <span class=\"string\">'init'</span>,</div><div class=\"line\">                    <span class=\"attr\">config</span>: &#123;</div><div class=\"line\">                        <span class=\"attr\">sampleRate</span>: config.sampleRate,</div><div class=\"line\">                        <span class=\"attr\">bitRate</span>: config.bitRate</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> msg;</div><div class=\"line\">                <span class=\"keyword\">switch</span> (error.code || error.name) &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'PERMISSION_DENIED'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'PermissionDeniedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'用户拒绝访问麦客风'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'NOT_SUPPORTED_ERROR'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'NotSupportedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'浏览器不支持麦客风'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'MANDATORY_UNSATISFIED_ERROR'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'MandatoryUnsatisfiedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'找不到麦客风设备'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">default</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'无法打开麦克风，异常信息:'</span> + (error.code || error.name);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> (config.funCancel) &#123;</div><div class=\"line\">                    config.funCancel(msg);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (config.funCancel) &#123;</div><div class=\"line\">                config.funCancel(<span class=\"string\">'当前浏览器不支持录音功能'</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">log</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (config.debug) &#123;</div><div class=\"line\">                <span class=\"built_in\">console</span>.log(str);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    exports.MP3Recorder = MP3Recorder;</div><div class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</div></pre></td></tr></table></figure></p>\n<p>worker-realtime.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"><span class=\"meta\">    'use strict'</span>;</div><div class=\"line\">    importScripts(<span class=\"string\">'lame.min.js'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> mp3Encoder, maxSamples = <span class=\"number\">1152</span>, samplesMono, lame, config, dataBuffer;</div><div class=\"line\">    <span class=\"keyword\">var</span> clearBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        dataBuffer = [];</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> appendToBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">mp3Buf</span>) </span>&#123;</div><div class=\"line\">        dataBuffer.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(mp3Buf));</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> init = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prefConfig</span>) </span>&#123;</div><div class=\"line\">        config = prefConfig || &#123;&#125;;</div><div class=\"line\">        lame = <span class=\"keyword\">new</span> lamejs();</div><div class=\"line\">        mp3Encoder = <span class=\"keyword\">new</span> lame.Mp3Encoder(<span class=\"number\">1</span>, config.sampleRate || <span class=\"number\">44100</span>, config.bitRate || <span class=\"number\">128</span>);</div><div class=\"line\">        clearBuffer();</div><div class=\"line\">        self.postMessage(&#123;</div><div class=\"line\">            <span class=\"attr\">cmd</span>: <span class=\"string\">'init'</span></div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> floatTo16BitPCM = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">floatTo16BitPCM</span>(<span class=\"params\">input, output</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; input.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> s = <span class=\"built_in\">Math</span>.max(<span class=\"number\">-1</span>, <span class=\"built_in\">Math</span>.min(<span class=\"number\">1</span>, input[i]));</div><div class=\"line\">            output[i] = (s &lt; <span class=\"number\">0</span> ? s * <span class=\"number\">0x8000</span> : s * <span class=\"number\">0x7FFF</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> convertBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arrayBuffer</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Float32Array</span>(arrayBuffer);</div><div class=\"line\">        <span class=\"keyword\">var</span> out = <span class=\"keyword\">new</span> <span class=\"built_in\">Int16Array</span>(arrayBuffer.length);</div><div class=\"line\">        floatTo16BitPCM(data, out)</div><div class=\"line\">        <span class=\"keyword\">return</span> out;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> encode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arrayBuffer</span>) </span>&#123;</div><div class=\"line\">        samplesMono = convertBuffer(arrayBuffer);</div><div class=\"line\">        <span class=\"keyword\">var</span> remaining = samplesMono.length;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; remaining &gt;= <span class=\"number\">0</span>; i += maxSamples) &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> left = samplesMono.subarray(i, i + maxSamples);</div><div class=\"line\">            <span class=\"keyword\">var</span> mp3buf = mp3Encoder.encodeBuffer(left);</div><div class=\"line\">            appendToBuffer(mp3buf);</div><div class=\"line\">            remaining -= maxSamples;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> finish = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        appendToBuffer(mp3Encoder.flush());</div><div class=\"line\">        self.postMessage(&#123;</div><div class=\"line\">            <span class=\"attr\">cmd</span>: <span class=\"string\">'end'</span>,</div><div class=\"line\">            <span class=\"attr\">buf</span>: dataBuffer</div><div class=\"line\">        &#125;);</div><div class=\"line\">        clearBuffer();</div><div class=\"line\">    &#125;;</div><div class=\"line\">    self.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (e.data.cmd) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'init'</span>:</div><div class=\"line\">                init(e.data.config);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'encode'</span>:</div><div class=\"line\">                encode(e.data.buf);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'finish'</span>:</div><div class=\"line\">                finish();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>赶紧，我写了一个demo，还好可以在localhost下做测试（安全限制：只能在安全的域下使用相关功能）。测试结果：录音停止很快，不在有上述问题。速度上线！</p>\n<p>但，第二天问题又来了，一个老师反馈说，chrome标签页上面一直有一个小红点（显示：此标签页正在使用您的摄像头和麦克风，果然歪果仁对于自己的隐私还是很敏感的）</p>\n<p>拉出代码来，发现打开页面时直接新建了MP3Recorder对象，更改代码把new MP3Recorder放到了用户触发录音开始的事件里，轻松搞定！</p>\n<p>可在我正准备提交代码时，问题又来了，我发现停止录音后，“小红点”还是在的。Ca，这是什么鬼..</p>\n<p>赶紧百度，一堆结果里，只有一条相关的。里面说到了localMediaStream.getTracks()[0].stop();<br>这是什么东西，换google，搜mediastream，肯定跟这玩意儿有关。<br>原来是通过getUserMedia获取LocalMediaStream对象，然后把其中的track给停掉。<br>然而，LocaMediaStream已经被instead，可以使用mediaStream，我就在自己写的stop方法中加了这些：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">navigator.getUserMedia =  navigator.getUserMedia ||</div><div class=\"line\">                          navigator.webkitGetUserMedia ||</div><div class=\"line\">                          navigator.mozGetUserMedia ||</div><div class=\"line\">                          navigator.msGetUserMedia;</div><div class=\"line\"><span class=\"keyword\">if</span> (navigator.getUserMedia) &#123;</div><div class=\"line\">    navigator.getUserMedia(&#123;</div><div class=\"line\">        <span class=\"attr\">audio</span>: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">stream</span>) </span>&#123;</div><div class=\"line\">      tracks = stream.getAudioTracks()</div><div class=\"line\">      tracks.map(<span class=\"function\"><span class=\"params\">track</span> =&gt;</span> &#123;</div><div class=\"line\">        stream.removeTrack(track) <span class=\"comment\">// 这里是发现stream有个原型方法removeTrack，然而并没有什么用</span></div><div class=\"line\">        track.stop()</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>然而还是不行，最后，我又看了一遍recordmp3.js，发现里面也有getUserMedia方法，只能试一试了，我把track.stop()放到了recorder.stop函数里：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">recorder.stop = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">        microphone.disconnect(processor);</div><div class=\"line\">        processor.disconnect(context.destination);</div><div class=\"line\">        stream.getTracks()[<span class=\"number\">0</span>].stop()    <span class=\"comment\">// 这里</span></div><div class=\"line\">        log(<span class=\"string\">'录音结束'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>“小红点”没了，666~</p>\n<p>就这样，“小红点”终于消失了，但地址栏还是有个录像机的图标一直显示在那里，暂时不去管他了。有空好好研究一下…</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>近期公司老项目中有个录音功能由于chrome浏览器的更新，停止录音时特别慢，由此引出了相关问题</p>\n</blockquote>\n<p>问题原因：<br>项目所使用的录音插件为：microm.min.js，我搜了一下，在github上有相关的项目：<a href=\"https://zzarcon.github.io/microm/\" target=\"_blank\" rel=\"external\">https://zzarcon.github.io/microm/</a><br>这个插件在浏览器更新后，对于录音停止后处理数据并返回信息的速度明显慢了很多，特别影响体验。至于为何在更新了浏览器会出现这样的问题，我目前并未发现什么原因。<br>但有一点是这个插件值得优化的地方，就是把录音的Blob转成MP3数据行为是在停止录音操作发生后执行的。如果改成边录边转，那就不会存在这种问题了..</p>\n<p>处理问题的过程：<br>首先，我找到了格式话了压缩的代码，通过日志找到耗时的代码，就在下面的for里，就是把blob转成mp3的过程，但我想不通的是为什么新版的chrome（64，65）会很慢…</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">key</span>: <span class=\"string\">\"encodeSamplesToMp3\"</span>,</div><div class=\"line\">  <span class=\"attr\">value</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, t</span>) </span>&#123;</div><div class=\"line\">    t = o(l, t);</div><div class=\"line\">    <span class=\"comment\">//这里的for循环特别耗时</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> r, n, a, i, s, f, _ = e[<span class=\"number\">0</span>], u = e[<span class=\"number\">1</span>], c = t.maxSamples, h = _.length, d = <span class=\"keyword\">new</span> <span class=\"keyword\">this</span>.lame.Mp3Encoder(t.channels, t.sampleRate, t.kbps), p = [], m = <span class=\"number\">0</span>; h &gt;= c;)</div><div class=\"line\">    m += c,</div><div class=\"line\">    n = _.splice(m, m + c),</div><div class=\"line\">    a = u ? u.splice(m, m + c) : <span class=\"literal\">null</span>,</div><div class=\"line\">    r = d.encodeBuffer(n, a),</div><div class=\"line\">    r.length &gt; <span class=\"number\">0</span> &amp;&amp; p.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(r)),</div><div class=\"line\">    h -= c;</div><div class=\"line\">    i = d.flush(),</div><div class=\"line\">    i.length &gt; <span class=\"number\">0</span> &amp;&amp; p.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(i)),</div><div class=\"line\">    s = <span class=\"keyword\">new</span> Blob(p, &#123;</div><div class=\"line\">      <span class=\"attr\">type</span>: <span class=\"string\">\"audio/mp3\"</span></div><div class=\"line\">    &#125;),</div><div class=\"line\">    f = URL.createObjectURL(s),</div><div class=\"line\">    <span class=\"keyword\">this</span>.mp3Resolver(&#123;</div><div class=\"line\">      <span class=\"attr\">buffer</span>: p,</div><div class=\"line\">      <span class=\"attr\">blob</span>: s,</div><div class=\"line\">      <span class=\"attr\">url</span>: f</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<p>我去查了chrome浏览器的更新文档，但并没有找到相关的信息（可能是我的英文阅读能力太差了8_8）。</p>\n<p>在我一筹莫展的时候，我们的运维小哥nick跟我说，我们项目的V2.0上面的录音是ok的！（顿时觉得他的身躯有光芒在照耀着我…）<br>我打开2.0测试了一下，果然很快。<br>果断找到项目文件，里面引入了三个相关文件：<br>lame.min.js<br>recordmp3.js<br>worker-realtime.js</p>\n<p>而v2.0的做法是在录音时弹出一个新的窗口，录音在新的窗口中处理，完成后把数据传给老窗口。（不清楚为什么会这样，可能是跟下面引发出的问题相关吧。）</p>\n<p>其中，lame.min.js是底层处理录音的文件，其他两个文件是对于lame的封装：<br>代码如下：<br>recordmp3.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">exports</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> MP3Recorder = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> recorder = <span class=\"keyword\">this</span>;</div><div class=\"line\">        config = config || &#123;&#125;;</div><div class=\"line\">        config.sampleRate = config.sampleRate || <span class=\"number\">44100</span>;</div><div class=\"line\">        config.bitRate = config.bitRate || <span class=\"number\">128</span>;</div><div class=\"line\">        navigator.getUserMedia = navigator.getUserMedia ||</div><div class=\"line\">                                 navigator.webkitGetUserMedia ||</div><div class=\"line\">                                 navigator.mozGetUserMedia ||</div><div class=\"line\">                                 navigator.msGetUserMedia;</div><div class=\"line\">        <span class=\"keyword\">if</span> (navigator.getUserMedia) &#123;</div><div class=\"line\">            navigator.getUserMedia(&#123;</div><div class=\"line\">                <span class=\"attr\">audio</span>: <span class=\"literal\">true</span></div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">stream</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> context = <span class=\"keyword\">new</span> AudioContext(),</div><div class=\"line\">                    microphone = context.createMediaStreamSource(stream),</div><div class=\"line\">                    processor = context.createScriptProcessor(<span class=\"number\">16384</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>),<span class=\"comment\">//bufferSize大小，输入channel数，输出channel数</span></div><div class=\"line\">                    mp3ReceiveSuccess, currentErrorCallback;</div><div class=\"line\">                config.sampleRate = context.sampleRate;</div><div class=\"line\">                processor.onaudioprocess = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//边录音边转换</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> array = event.inputBuffer.getChannelData(<span class=\"number\">0</span>);</div><div class=\"line\">                    realTimeWorker.postMessage(&#123; <span class=\"attr\">cmd</span>: <span class=\"string\">'encode'</span>, <span class=\"attr\">buf</span>: array &#125;);</div><div class=\"line\">                &#125;;</div><div class=\"line\">                <span class=\"keyword\">var</span> realTimeWorker = <span class=\"keyword\">new</span> Worker(<span class=\"string\">'/audio/worker-realtime.js'</span>);</div><div class=\"line\">                realTimeWorker.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">switch</span> (e.data.cmd) &#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'init'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'初始化成功'</span>);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (config.funOk) &#123;</div><div class=\"line\">                                config.funOk();</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'end'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'MP3大小：'</span>, e.data.buf.length);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (mp3ReceiveSuccess) &#123;</div><div class=\"line\">                                mp3ReceiveSuccess(<span class=\"keyword\">new</span> Blob(e.data.buf, &#123; <span class=\"attr\">type</span>: <span class=\"string\">'audio/mp3'</span> &#125;));</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'error'</span>:</div><div class=\"line\">                            log(<span class=\"string\">'错误信息：'</span> + e.data.error);</div><div class=\"line\">                            <span class=\"keyword\">if</span> (currentErrorCallback) &#123;</div><div class=\"line\">                                currentErrorCallback(e.data.error);</div><div class=\"line\">                            &#125;</div><div class=\"line\">                            <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">default</span>:</div><div class=\"line\">                            log(<span class=\"string\">'未知信息：'</span>, e.data);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;;</div><div class=\"line\">                recorder.getMp3Blob = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">onSuccess, onError</span>) </span>&#123;</div><div class=\"line\">                    currentErrorCallback = onError;</div><div class=\"line\">                    mp3ReceiveSuccess = onSuccess;</div><div class=\"line\">                    realTimeWorker.postMessage(&#123; <span class=\"attr\">cmd</span>: <span class=\"string\">'finish'</span> &#125;);</div><div class=\"line\">                &#125;;</div><div class=\"line\">                recorder.start = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">                        microphone.connect(processor);</div><div class=\"line\">                        processor.connect(context.destination);</div><div class=\"line\">                        log(<span class=\"string\">'开始录音'</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                recorder.stop = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">                        microphone.disconnect(processor);</div><div class=\"line\">                        processor.disconnect(context.destination);</div><div class=\"line\">                        log(<span class=\"string\">'录音结束'</span>);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                realTimeWorker.postMessage(&#123;</div><div class=\"line\">                    <span class=\"attr\">cmd</span>: <span class=\"string\">'init'</span>,</div><div class=\"line\">                    <span class=\"attr\">config</span>: &#123;</div><div class=\"line\">                        <span class=\"attr\">sampleRate</span>: config.sampleRate,</div><div class=\"line\">                        <span class=\"attr\">bitRate</span>: config.bitRate</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> msg;</div><div class=\"line\">                <span class=\"keyword\">switch</span> (error.code || error.name) &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'PERMISSION_DENIED'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'PermissionDeniedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'用户拒绝访问麦客风'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'NOT_SUPPORTED_ERROR'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'NotSupportedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'浏览器不支持麦客风'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'MANDATORY_UNSATISFIED_ERROR'</span>:</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'MandatoryUnsatisfiedError'</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'找不到麦客风设备'</span>;</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">default</span>:</div><div class=\"line\">                        msg = <span class=\"string\">'无法打开麦克风，异常信息:'</span> + (error.code || error.name);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> (config.funCancel) &#123;</div><div class=\"line\">                    config.funCancel(msg);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (config.funCancel) &#123;</div><div class=\"line\">                config.funCancel(<span class=\"string\">'当前浏览器不支持录音功能'</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">log</span>(<span class=\"params\">str</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (config.debug) &#123;</div><div class=\"line\">                <span class=\"built_in\">console</span>.log(str);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    exports.MP3Recorder = MP3Recorder;</div><div class=\"line\">&#125;)(<span class=\"built_in\">window</span>);</div></pre></td></tr></table></figure></p>\n<p>worker-realtime.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div></pre></td><td class=\"code\"><pre><div class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\"><span class=\"meta\">    'use strict'</span>;</div><div class=\"line\">    importScripts(<span class=\"string\">'lame.min.js'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> mp3Encoder, maxSamples = <span class=\"number\">1152</span>, samplesMono, lame, config, dataBuffer;</div><div class=\"line\">    <span class=\"keyword\">var</span> clearBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        dataBuffer = [];</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> appendToBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">mp3Buf</span>) </span>&#123;</div><div class=\"line\">        dataBuffer.push(<span class=\"keyword\">new</span> <span class=\"built_in\">Int8Array</span>(mp3Buf));</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> init = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prefConfig</span>) </span>&#123;</div><div class=\"line\">        config = prefConfig || &#123;&#125;;</div><div class=\"line\">        lame = <span class=\"keyword\">new</span> lamejs();</div><div class=\"line\">        mp3Encoder = <span class=\"keyword\">new</span> lame.Mp3Encoder(<span class=\"number\">1</span>, config.sampleRate || <span class=\"number\">44100</span>, config.bitRate || <span class=\"number\">128</span>);</div><div class=\"line\">        clearBuffer();</div><div class=\"line\">        self.postMessage(&#123;</div><div class=\"line\">            <span class=\"attr\">cmd</span>: <span class=\"string\">'init'</span></div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> floatTo16BitPCM = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">floatTo16BitPCM</span>(<span class=\"params\">input, output</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; input.length; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> s = <span class=\"built_in\">Math</span>.max(<span class=\"number\">-1</span>, <span class=\"built_in\">Math</span>.min(<span class=\"number\">1</span>, input[i]));</div><div class=\"line\">            output[i] = (s &lt; <span class=\"number\">0</span> ? s * <span class=\"number\">0x8000</span> : s * <span class=\"number\">0x7FFF</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> convertBuffer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arrayBuffer</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Float32Array</span>(arrayBuffer);</div><div class=\"line\">        <span class=\"keyword\">var</span> out = <span class=\"keyword\">new</span> <span class=\"built_in\">Int16Array</span>(arrayBuffer.length);</div><div class=\"line\">        floatTo16BitPCM(data, out)</div><div class=\"line\">        <span class=\"keyword\">return</span> out;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> encode = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arrayBuffer</span>) </span>&#123;</div><div class=\"line\">        samplesMono = convertBuffer(arrayBuffer);</div><div class=\"line\">        <span class=\"keyword\">var</span> remaining = samplesMono.length;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; remaining &gt;= <span class=\"number\">0</span>; i += maxSamples) &#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> left = samplesMono.subarray(i, i + maxSamples);</div><div class=\"line\">            <span class=\"keyword\">var</span> mp3buf = mp3Encoder.encodeBuffer(left);</div><div class=\"line\">            appendToBuffer(mp3buf);</div><div class=\"line\">            remaining -= maxSamples;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"keyword\">var</span> finish = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        appendToBuffer(mp3Encoder.flush());</div><div class=\"line\">        self.postMessage(&#123;</div><div class=\"line\">            <span class=\"attr\">cmd</span>: <span class=\"string\">'end'</span>,</div><div class=\"line\">            <span class=\"attr\">buf</span>: dataBuffer</div><div class=\"line\">        &#125;);</div><div class=\"line\">        clearBuffer();</div><div class=\"line\">    &#125;;</div><div class=\"line\">    self.onmessage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (e.data.cmd) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'init'</span>:</div><div class=\"line\">                init(e.data.config);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'encode'</span>:</div><div class=\"line\">                encode(e.data.buf);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'finish'</span>:</div><div class=\"line\">                finish();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>赶紧，我写了一个demo，还好可以在localhost下做测试（安全限制：只能在安全的域下使用相关功能）。测试结果：录音停止很快，不在有上述问题。速度上线！</p>\n<p>但，第二天问题又来了，一个老师反馈说，chrome标签页上面一直有一个小红点（显示：此标签页正在使用您的摄像头和麦克风，果然歪果仁对于自己的隐私还是很敏感的）</p>\n<p>拉出代码来，发现打开页面时直接新建了MP3Recorder对象，更改代码把new MP3Recorder放到了用户触发录音开始的事件里，轻松搞定！</p>\n<p>可在我正准备提交代码时，问题又来了，我发现停止录音后，“小红点”还是在的。Ca，这是什么鬼..</p>\n<p>赶紧百度，一堆结果里，只有一条相关的。里面说到了localMediaStream.getTracks()[0].stop();<br>这是什么东西，换google，搜mediastream，肯定跟这玩意儿有关。<br>原来是通过getUserMedia获取LocalMediaStream对象，然后把其中的track给停掉。<br>然而，LocaMediaStream已经被instead，可以使用mediaStream，我就在自己写的stop方法中加了这些：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">navigator.getUserMedia =  navigator.getUserMedia ||</div><div class=\"line\">                          navigator.webkitGetUserMedia ||</div><div class=\"line\">                          navigator.mozGetUserMedia ||</div><div class=\"line\">                          navigator.msGetUserMedia;</div><div class=\"line\"><span class=\"keyword\">if</span> (navigator.getUserMedia) &#123;</div><div class=\"line\">    navigator.getUserMedia(&#123;</div><div class=\"line\">        <span class=\"attr\">audio</span>: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">stream</span>) </span>&#123;</div><div class=\"line\">      tracks = stream.getAudioTracks()</div><div class=\"line\">      tracks.map(<span class=\"function\"><span class=\"params\">track</span> =&gt;</span> &#123;</div><div class=\"line\">        stream.removeTrack(track) <span class=\"comment\">// 这里是发现stream有个原型方法removeTrack，然而并没有什么用</span></div><div class=\"line\">        track.stop()</div><div class=\"line\">      &#125;)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>然而还是不行，最后，我又看了一遍recordmp3.js，发现里面也有getUserMedia方法，只能试一试了，我把track.stop()放到了recorder.stop函数里：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">recorder.stop = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (processor &amp;&amp; microphone) &#123;</div><div class=\"line\">        microphone.disconnect(processor);</div><div class=\"line\">        processor.disconnect(context.destination);</div><div class=\"line\">        stream.getTracks()[<span class=\"number\">0</span>].stop()    <span class=\"comment\">// 这里</span></div><div class=\"line\">        log(<span class=\"string\">'录音结束'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>“小红点”没了，666~</p>\n<p>就这样，“小红点”终于消失了，但地址栏还是有个录像机的图标一直显示在那里，暂时不去管他了。有空好好研究一下…</p>\n"},{"title":"webpack搭建项目实践","date":"2017-08-27T01:51:10.000Z","_content":"\n#### 步骤\n```\n1，创建项目文件夹\nmkdir <projectFileName>\n\n2，进入项目目录\ncd <projectFileName>\n\n3，初始化项目\nnpm init\n\n4，安装npm包\nnpm install --save-dev webapck express\n\n5，修改package.json\n\n```\n\n","source":"_posts/webpack搭建项目实践.md","raw":"---\ntitle: webpack搭建项目实践\ndate: 2017-08-27 09:51:10\ntags:\n---\n\n#### 步骤\n```\n1，创建项目文件夹\nmkdir <projectFileName>\n\n2，进入项目目录\ncd <projectFileName>\n\n3，初始化项目\nnpm init\n\n4，安装npm包\nnpm install --save-dev webapck express\n\n5，修改package.json\n\n```\n\n","slug":"webpack搭建项目实践","published":1,"updated":"2017-08-27T01:55:55.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vo0016uw2cuz25bcvb","content":"<h4 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">1，创建项目文件夹</div><div class=\"line\">mkdir &lt;projectFileName&gt;</div><div class=\"line\"></div><div class=\"line\">2，进入项目目录</div><div class=\"line\">cd &lt;projectFileName&gt;</div><div class=\"line\"></div><div class=\"line\">3，初始化项目</div><div class=\"line\">npm init</div><div class=\"line\"></div><div class=\"line\">4，安装npm包</div><div class=\"line\">npm install --save-dev webapck express</div><div class=\"line\"></div><div class=\"line\">5，修改package.json</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">1，创建项目文件夹</div><div class=\"line\">mkdir &lt;projectFileName&gt;</div><div class=\"line\"></div><div class=\"line\">2，进入项目目录</div><div class=\"line\">cd &lt;projectFileName&gt;</div><div class=\"line\"></div><div class=\"line\">3，初始化项目</div><div class=\"line\">npm init</div><div class=\"line\"></div><div class=\"line\">4，安装npm包</div><div class=\"line\">npm install --save-dev webapck express</div><div class=\"line\"></div><div class=\"line\">5，修改package.json</div></pre></td></tr></table></figure>\n"},{"title":"webpack使用笔记","date":"2017-06-28T05:33:31.000Z","_content":"\nwebpack十分强大。\n\n##### 安装\n```\nnpm install webpack --save-dev （安装到项目依赖中）\nnpm install webpack -g （全局安装）\n```\n\n##### 配置\n使用webpack，需要在项目的根目录下创建一个webpack.config.js文件， 在里面配置一些基本信息：\n```js\n入口：\nentry: './src/index.js'\n\n输入：\noutput: {\n\tpath: './dist',\n\tfilename: bundle.js\n}\n\n模块：\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: '',\n\t\t\tuse: []\n\t\t}\n\t]\n}\n\n扩展：\nplugins: [\n\tnew ImageminPlugin({\n\t\t/* 配置信息 */\n\t})\n]\n\n\n```\n\n\n模块化，移植性好（解耦）","source":"_posts/webpack使用笔记.md","raw":"---\ntitle: webpack使用笔记\ndate: 2017-06-28 13:33:31\ntags:\n\t- 笔记\n---\n\nwebpack十分强大。\n\n##### 安装\n```\nnpm install webpack --save-dev （安装到项目依赖中）\nnpm install webpack -g （全局安装）\n```\n\n##### 配置\n使用webpack，需要在项目的根目录下创建一个webpack.config.js文件， 在里面配置一些基本信息：\n```js\n入口：\nentry: './src/index.js'\n\n输入：\noutput: {\n\tpath: './dist',\n\tfilename: bundle.js\n}\n\n模块：\nmodule: {\n\trules: [\n\t\t{\n\t\t\ttest: '',\n\t\t\tuse: []\n\t\t}\n\t]\n}\n\n扩展：\nplugins: [\n\tnew ImageminPlugin({\n\t\t/* 配置信息 */\n\t})\n]\n\n\n```\n\n\n模块化，移植性好（解耦）","slug":"webpack使用笔记","published":1,"updated":"2018-03-13T16:39:55.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vp0018uw2co7c7cjhn","content":"<p>webpack十分强大。</p>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install webpack --save-dev （安装到项目依赖中）</div><div class=\"line\">npm install webpack -g （全局安装）</div></pre></td></tr></table></figure>\n<h5 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h5><p>使用webpack，需要在项目的根目录下创建一个webpack.config.js文件， 在里面配置一些基本信息：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">入口：</div><div class=\"line\">entry: <span class=\"string\">'./src/index.js'</span></div><div class=\"line\"></div><div class=\"line\">输入：</div><div class=\"line\">output: &#123;</div><div class=\"line\">\t<span class=\"attr\">path</span>: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">\t<span class=\"attr\">filename</span>: bundle.js</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">模块：</div><div class=\"line\"><span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">\t<span class=\"attr\">rules</span>: [</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">test</span>: <span class=\"string\">''</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">use</span>: []</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t]</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">扩展：</div><div class=\"line\">plugins: [</div><div class=\"line\">\t<span class=\"keyword\">new</span> ImageminPlugin(&#123;</div><div class=\"line\">\t\t<span class=\"comment\">/* 配置信息 */</span></div><div class=\"line\">\t&#125;)</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>模块化，移植性好（解耦）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>webpack十分强大。</p>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install webpack --save-dev （安装到项目依赖中）</div><div class=\"line\">npm install webpack -g （全局安装）</div></pre></td></tr></table></figure>\n<h5 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h5><p>使用webpack，需要在项目的根目录下创建一个webpack.config.js文件， 在里面配置一些基本信息：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">入口：</div><div class=\"line\">entry: <span class=\"string\">'./src/index.js'</span></div><div class=\"line\"></div><div class=\"line\">输入：</div><div class=\"line\">output: &#123;</div><div class=\"line\">\t<span class=\"attr\">path</span>: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">\t<span class=\"attr\">filename</span>: bundle.js</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">模块：</div><div class=\"line\"><span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">\t<span class=\"attr\">rules</span>: [</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">test</span>: <span class=\"string\">''</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">use</span>: []</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t]</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">扩展：</div><div class=\"line\">plugins: [</div><div class=\"line\">\t<span class=\"keyword\">new</span> ImageminPlugin(&#123;</div><div class=\"line\">\t\t<span class=\"comment\">/* 配置信息 */</span></div><div class=\"line\">\t&#125;)</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>模块化，移植性好（解耦）</p>\n"},{"title":"倒看西游，看真实人生","date":"2018-04-26T14:29:35.000Z","_content":"\n> 小时候，最爱看《西游记》。看悟空降妖除魔，历经磨难取真经。觉得皇天不负有心人...\n\n而今天，看到一段把西游记倒唱的视频，甚是惊讶！原来《西游记》的打开方式是倒放。网络上关于此说法也有不同版本，我便结合两个个人觉得比较合适的版本，摘写在此：\n\n佛教欲向东扩张，派唐僧师徒四人前往大唐传教。途中经历艰难险阻，遇到各种妖怪，且打来打去发现这些妖怪都是有后台的，无论做了什么坏事都不受惩罚。\n\n佛道相争，人心险恶。八戒和沙僧觉得太黑暗了，无奈，一个躲进了高老庄，一个钻进了流沙河，只有悟空坚持正义一路斩妖除魔护送师父东去传教。\n\n结果天庭对悟空实在忍无可忍，就和如来达成协议——“我们可以保证唐三藏平安到长安，不过你得把孙悟空这个反叛者给处理了”，如来同意了。阴谋之下，白龙重伤坠入山涧，悟空被压在了五行山下。此时唐三藏为了可以完成任务抛弃了孙悟空，只身来到长安，传经布道，最终被封为御弟。从此以后唐僧享尽人间富贵。\n\n五百年后，悟空终于从五指山下逃了出来，打上了天庭，大闹诸天神佛，无人可挡。玉帝无奈只得许诺让猪八戒化为人身，封为天蓬元帅，沙和尚封为卷帘大将，曾经的兄弟如今却刀兵相见。\n\n悟空心灰意冷，去寻菩提祖师解惑，然后他封印了修为，把如意金箍棒扔进了东海化作定海神针，回到花果山，陪着猴子猴孙过完了平凡的一生，身心华石堆，再无世间累。\n\n**牵丝戏改编歌词：**\n\n《记游西》\n\n*\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-*\n*佛争道&nbsp;&nbsp;&nbsp;&nbsp;欲称宇内*\n*命师徒&nbsp;&nbsp;&nbsp;&nbsp;世间扬威*\n*携经文&nbsp;&nbsp;&nbsp;&nbsp;东去*\n*灵山脚下遇恶龟*\n*铜台府&nbsp;&nbsp;&nbsp;&nbsp;寇员外魂归*\n*\\-*\n*月中精&nbsp;&nbsp;&nbsp;&nbsp;抛绣招赘*\n*金平府&nbsp;&nbsp;&nbsp;&nbsp;假佛乱真*\n*玉华州&nbsp;&nbsp;&nbsp;&nbsp;钉耙会*\n*南山大王入轮回*\n*金光寺&nbsp;&nbsp;&nbsp;&nbsp;九头盗国瑰*\n*\\-*\n*天君无端降罪*\n*泣干郡中珠泪*\n*金毛白鼻鼠&nbsp;&nbsp;&nbsp;&nbsp;洞中欲配*\n*红鲤&nbsp;&nbsp;&nbsp;&nbsp;金吼作祟*\n*狮驼&nbsp;&nbsp;&nbsp;&nbsp;群妖城中醉*\n*问孽畜*\n*你仗势&nbsp;&nbsp;&nbsp;&nbsp;与谁*\n*\\-*\n*西梁女国*\n*娇娥似水*\n*三尺烛台*\n*圣心红尘坠*\n*只恐&nbsp;&nbsp;&nbsp;&nbsp;佛陀假慈悲*\n*殃及红颜玉消损*\n*绝尘不敢回*\n*蓦然心已碎*\n*\\-*\n*\\-*\n*真与假&nbsp;&nbsp;&nbsp;&nbsp;颠倒乾坤*\n*盘丝洞&nbsp;&nbsp;&nbsp;&nbsp;百目毒杯*\n*车迟国&nbsp;&nbsp;&nbsp;&nbsp;斗法*\n*三打戏吾尸魔鬼*\n*莲花洞&nbsp;&nbsp;&nbsp;&nbsp;金银生是非*\n*\\-*\n*五庄道童多诡*\n*四圣迷乱心扉*\n*心火怎甘心扬汤止沸*\n*看尽冷暖是非*\n*落沙&nbsp;&nbsp;&nbsp;&nbsp;吃尽后来人*\n*云栈里&nbsp;&nbsp;&nbsp;&nbsp;翘首独自悲*\n*\\-*\n*为护水族*\n*泾河落罪*\n*鹰愁涧中*\n*白马&nbsp;&nbsp;&nbsp;&nbsp;心成灰*\n*又斥劣猴心不轨*\n*五行山中五百岁*\n*一人掩泪去*\n*终老入丘堆*\n*\\-*\n*狂战凌霄*\n*平心中愤*\n*道佛阴险*\n*找来云沙谁*\n*不忍阵前做敌对*\n*自愿弃法深林归*\n*\\-*\n*身心化石堆*\n*再无世间累*\n*\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-*\n\nB站视频链接：https://www.bilibili.com/video/av11933852/","source":"_posts/倒看西游，看真实人生.md","raw":"---\ntitle: 倒看西游，看真实人生\ndate: 2018-04-26 22:29:35\ntags:\n  - 故事汇\n---\n\n> 小时候，最爱看《西游记》。看悟空降妖除魔，历经磨难取真经。觉得皇天不负有心人...\n\n而今天，看到一段把西游记倒唱的视频，甚是惊讶！原来《西游记》的打开方式是倒放。网络上关于此说法也有不同版本，我便结合两个个人觉得比较合适的版本，摘写在此：\n\n佛教欲向东扩张，派唐僧师徒四人前往大唐传教。途中经历艰难险阻，遇到各种妖怪，且打来打去发现这些妖怪都是有后台的，无论做了什么坏事都不受惩罚。\n\n佛道相争，人心险恶。八戒和沙僧觉得太黑暗了，无奈，一个躲进了高老庄，一个钻进了流沙河，只有悟空坚持正义一路斩妖除魔护送师父东去传教。\n\n结果天庭对悟空实在忍无可忍，就和如来达成协议——“我们可以保证唐三藏平安到长安，不过你得把孙悟空这个反叛者给处理了”，如来同意了。阴谋之下，白龙重伤坠入山涧，悟空被压在了五行山下。此时唐三藏为了可以完成任务抛弃了孙悟空，只身来到长安，传经布道，最终被封为御弟。从此以后唐僧享尽人间富贵。\n\n五百年后，悟空终于从五指山下逃了出来，打上了天庭，大闹诸天神佛，无人可挡。玉帝无奈只得许诺让猪八戒化为人身，封为天蓬元帅，沙和尚封为卷帘大将，曾经的兄弟如今却刀兵相见。\n\n悟空心灰意冷，去寻菩提祖师解惑，然后他封印了修为，把如意金箍棒扔进了东海化作定海神针，回到花果山，陪着猴子猴孙过完了平凡的一生，身心华石堆，再无世间累。\n\n**牵丝戏改编歌词：**\n\n《记游西》\n\n*\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-*\n*佛争道&nbsp;&nbsp;&nbsp;&nbsp;欲称宇内*\n*命师徒&nbsp;&nbsp;&nbsp;&nbsp;世间扬威*\n*携经文&nbsp;&nbsp;&nbsp;&nbsp;东去*\n*灵山脚下遇恶龟*\n*铜台府&nbsp;&nbsp;&nbsp;&nbsp;寇员外魂归*\n*\\-*\n*月中精&nbsp;&nbsp;&nbsp;&nbsp;抛绣招赘*\n*金平府&nbsp;&nbsp;&nbsp;&nbsp;假佛乱真*\n*玉华州&nbsp;&nbsp;&nbsp;&nbsp;钉耙会*\n*南山大王入轮回*\n*金光寺&nbsp;&nbsp;&nbsp;&nbsp;九头盗国瑰*\n*\\-*\n*天君无端降罪*\n*泣干郡中珠泪*\n*金毛白鼻鼠&nbsp;&nbsp;&nbsp;&nbsp;洞中欲配*\n*红鲤&nbsp;&nbsp;&nbsp;&nbsp;金吼作祟*\n*狮驼&nbsp;&nbsp;&nbsp;&nbsp;群妖城中醉*\n*问孽畜*\n*你仗势&nbsp;&nbsp;&nbsp;&nbsp;与谁*\n*\\-*\n*西梁女国*\n*娇娥似水*\n*三尺烛台*\n*圣心红尘坠*\n*只恐&nbsp;&nbsp;&nbsp;&nbsp;佛陀假慈悲*\n*殃及红颜玉消损*\n*绝尘不敢回*\n*蓦然心已碎*\n*\\-*\n*\\-*\n*真与假&nbsp;&nbsp;&nbsp;&nbsp;颠倒乾坤*\n*盘丝洞&nbsp;&nbsp;&nbsp;&nbsp;百目毒杯*\n*车迟国&nbsp;&nbsp;&nbsp;&nbsp;斗法*\n*三打戏吾尸魔鬼*\n*莲花洞&nbsp;&nbsp;&nbsp;&nbsp;金银生是非*\n*\\-*\n*五庄道童多诡*\n*四圣迷乱心扉*\n*心火怎甘心扬汤止沸*\n*看尽冷暖是非*\n*落沙&nbsp;&nbsp;&nbsp;&nbsp;吃尽后来人*\n*云栈里&nbsp;&nbsp;&nbsp;&nbsp;翘首独自悲*\n*\\-*\n*为护水族*\n*泾河落罪*\n*鹰愁涧中*\n*白马&nbsp;&nbsp;&nbsp;&nbsp;心成灰*\n*又斥劣猴心不轨*\n*五行山中五百岁*\n*一人掩泪去*\n*终老入丘堆*\n*\\-*\n*狂战凌霄*\n*平心中愤*\n*道佛阴险*\n*找来云沙谁*\n*不忍阵前做敌对*\n*自愿弃法深林归*\n*\\-*\n*身心化石堆*\n*再无世间累*\n*\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-*\n\nB站视频链接：https://www.bilibili.com/video/av11933852/","slug":"倒看西游，看真实人生","published":1,"updated":"2018-04-26T15:29:54.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vr001buw2cm2senvro","content":"<blockquote>\n<p>小时候，最爱看《西游记》。看悟空降妖除魔，历经磨难取真经。觉得皇天不负有心人…</p>\n</blockquote>\n<p>而今天，看到一段把西游记倒唱的视频，甚是惊讶！原来《西游记》的打开方式是倒放。网络上关于此说法也有不同版本，我便结合两个个人觉得比较合适的版本，摘写在此：</p>\n<p>佛教欲向东扩张，派唐僧师徒四人前往大唐传教。途中经历艰难险阻，遇到各种妖怪，且打来打去发现这些妖怪都是有后台的，无论做了什么坏事都不受惩罚。</p>\n<p>佛道相争，人心险恶。八戒和沙僧觉得太黑暗了，无奈，一个躲进了高老庄，一个钻进了流沙河，只有悟空坚持正义一路斩妖除魔护送师父东去传教。</p>\n<p>结果天庭对悟空实在忍无可忍，就和如来达成协议——“我们可以保证唐三藏平安到长安，不过你得把孙悟空这个反叛者给处理了”，如来同意了。阴谋之下，白龙重伤坠入山涧，悟空被压在了五行山下。此时唐三藏为了可以完成任务抛弃了孙悟空，只身来到长安，传经布道，最终被封为御弟。从此以后唐僧享尽人间富贵。</p>\n<p>五百年后，悟空终于从五指山下逃了出来，打上了天庭，大闹诸天神佛，无人可挡。玉帝无奈只得许诺让猪八戒化为人身，封为天蓬元帅，沙和尚封为卷帘大将，曾经的兄弟如今却刀兵相见。</p>\n<p>悟空心灰意冷，去寻菩提祖师解惑，然后他封印了修为，把如意金箍棒扔进了东海化作定海神针，回到花果山，陪着猴子猴孙过完了平凡的一生，身心华石堆，再无世间累。</p>\n<p><strong>牵丝戏改编歌词：</strong></p>\n<p>《记游西》</p>\n<p><em>----------------</em><br><em>佛争道&nbsp;&nbsp;&nbsp;&nbsp;欲称宇内</em><br><em>命师徒&nbsp;&nbsp;&nbsp;&nbsp;世间扬威</em><br><em>携经文&nbsp;&nbsp;&nbsp;&nbsp;东去</em><br><em>灵山脚下遇恶龟</em><br><em>铜台府&nbsp;&nbsp;&nbsp;&nbsp;寇员外魂归</em><br><em>-</em><br><em>月中精&nbsp;&nbsp;&nbsp;&nbsp;抛绣招赘</em><br><em>金平府&nbsp;&nbsp;&nbsp;&nbsp;假佛乱真</em><br><em>玉华州&nbsp;&nbsp;&nbsp;&nbsp;钉耙会</em><br><em>南山大王入轮回</em><br><em>金光寺&nbsp;&nbsp;&nbsp;&nbsp;九头盗国瑰</em><br><em>-</em><br><em>天君无端降罪</em><br><em>泣干郡中珠泪</em><br><em>金毛白鼻鼠&nbsp;&nbsp;&nbsp;&nbsp;洞中欲配</em><br><em>红鲤&nbsp;&nbsp;&nbsp;&nbsp;金吼作祟</em><br><em>狮驼&nbsp;&nbsp;&nbsp;&nbsp;群妖城中醉</em><br><em>问孽畜</em><br><em>你仗势&nbsp;&nbsp;&nbsp;&nbsp;与谁</em><br><em>-</em><br><em>西梁女国</em><br><em>娇娥似水</em><br><em>三尺烛台</em><br><em>圣心红尘坠</em><br><em>只恐&nbsp;&nbsp;&nbsp;&nbsp;佛陀假慈悲</em><br><em>殃及红颜玉消损</em><br><em>绝尘不敢回</em><br><em>蓦然心已碎</em><br><em>-</em><br><em>-</em><br><em>真与假&nbsp;&nbsp;&nbsp;&nbsp;颠倒乾坤</em><br><em>盘丝洞&nbsp;&nbsp;&nbsp;&nbsp;百目毒杯</em><br><em>车迟国&nbsp;&nbsp;&nbsp;&nbsp;斗法</em><br><em>三打戏吾尸魔鬼</em><br><em>莲花洞&nbsp;&nbsp;&nbsp;&nbsp;金银生是非</em><br><em>-</em><br><em>五庄道童多诡</em><br><em>四圣迷乱心扉</em><br><em>心火怎甘心扬汤止沸</em><br><em>看尽冷暖是非</em><br><em>落沙&nbsp;&nbsp;&nbsp;&nbsp;吃尽后来人</em><br><em>云栈里&nbsp;&nbsp;&nbsp;&nbsp;翘首独自悲</em><br><em>-</em><br><em>为护水族</em><br><em>泾河落罪</em><br><em>鹰愁涧中</em><br><em>白马&nbsp;&nbsp;&nbsp;&nbsp;心成灰</em><br><em>又斥劣猴心不轨</em><br><em>五行山中五百岁</em><br><em>一人掩泪去</em><br><em>终老入丘堆</em><br><em>-</em><br><em>狂战凌霄</em><br><em>平心中愤</em><br><em>道佛阴险</em><br><em>找来云沙谁</em><br><em>不忍阵前做敌对</em><br><em>自愿弃法深林归</em><br><em>-</em><br><em>身心化石堆</em><br><em>再无世间累</em><br><em>----------------</em></p>\n<p>B站视频链接：<a href=\"https://www.bilibili.com/video/av11933852/\" target=\"_blank\" rel=\"external\">https://www.bilibili.com/video/av11933852/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>小时候，最爱看《西游记》。看悟空降妖除魔，历经磨难取真经。觉得皇天不负有心人…</p>\n</blockquote>\n<p>而今天，看到一段把西游记倒唱的视频，甚是惊讶！原来《西游记》的打开方式是倒放。网络上关于此说法也有不同版本，我便结合两个个人觉得比较合适的版本，摘写在此：</p>\n<p>佛教欲向东扩张，派唐僧师徒四人前往大唐传教。途中经历艰难险阻，遇到各种妖怪，且打来打去发现这些妖怪都是有后台的，无论做了什么坏事都不受惩罚。</p>\n<p>佛道相争，人心险恶。八戒和沙僧觉得太黑暗了，无奈，一个躲进了高老庄，一个钻进了流沙河，只有悟空坚持正义一路斩妖除魔护送师父东去传教。</p>\n<p>结果天庭对悟空实在忍无可忍，就和如来达成协议——“我们可以保证唐三藏平安到长安，不过你得把孙悟空这个反叛者给处理了”，如来同意了。阴谋之下，白龙重伤坠入山涧，悟空被压在了五行山下。此时唐三藏为了可以完成任务抛弃了孙悟空，只身来到长安，传经布道，最终被封为御弟。从此以后唐僧享尽人间富贵。</p>\n<p>五百年后，悟空终于从五指山下逃了出来，打上了天庭，大闹诸天神佛，无人可挡。玉帝无奈只得许诺让猪八戒化为人身，封为天蓬元帅，沙和尚封为卷帘大将，曾经的兄弟如今却刀兵相见。</p>\n<p>悟空心灰意冷，去寻菩提祖师解惑，然后他封印了修为，把如意金箍棒扔进了东海化作定海神针，回到花果山，陪着猴子猴孙过完了平凡的一生，身心华石堆，再无世间累。</p>\n<p><strong>牵丝戏改编歌词：</strong></p>\n<p>《记游西》</p>\n<p><em>----------------</em><br><em>佛争道&nbsp;&nbsp;&nbsp;&nbsp;欲称宇内</em><br><em>命师徒&nbsp;&nbsp;&nbsp;&nbsp;世间扬威</em><br><em>携经文&nbsp;&nbsp;&nbsp;&nbsp;东去</em><br><em>灵山脚下遇恶龟</em><br><em>铜台府&nbsp;&nbsp;&nbsp;&nbsp;寇员外魂归</em><br><em>-</em><br><em>月中精&nbsp;&nbsp;&nbsp;&nbsp;抛绣招赘</em><br><em>金平府&nbsp;&nbsp;&nbsp;&nbsp;假佛乱真</em><br><em>玉华州&nbsp;&nbsp;&nbsp;&nbsp;钉耙会</em><br><em>南山大王入轮回</em><br><em>金光寺&nbsp;&nbsp;&nbsp;&nbsp;九头盗国瑰</em><br><em>-</em><br><em>天君无端降罪</em><br><em>泣干郡中珠泪</em><br><em>金毛白鼻鼠&nbsp;&nbsp;&nbsp;&nbsp;洞中欲配</em><br><em>红鲤&nbsp;&nbsp;&nbsp;&nbsp;金吼作祟</em><br><em>狮驼&nbsp;&nbsp;&nbsp;&nbsp;群妖城中醉</em><br><em>问孽畜</em><br><em>你仗势&nbsp;&nbsp;&nbsp;&nbsp;与谁</em><br><em>-</em><br><em>西梁女国</em><br><em>娇娥似水</em><br><em>三尺烛台</em><br><em>圣心红尘坠</em><br><em>只恐&nbsp;&nbsp;&nbsp;&nbsp;佛陀假慈悲</em><br><em>殃及红颜玉消损</em><br><em>绝尘不敢回</em><br><em>蓦然心已碎</em><br><em>-</em><br><em>-</em><br><em>真与假&nbsp;&nbsp;&nbsp;&nbsp;颠倒乾坤</em><br><em>盘丝洞&nbsp;&nbsp;&nbsp;&nbsp;百目毒杯</em><br><em>车迟国&nbsp;&nbsp;&nbsp;&nbsp;斗法</em><br><em>三打戏吾尸魔鬼</em><br><em>莲花洞&nbsp;&nbsp;&nbsp;&nbsp;金银生是非</em><br><em>-</em><br><em>五庄道童多诡</em><br><em>四圣迷乱心扉</em><br><em>心火怎甘心扬汤止沸</em><br><em>看尽冷暖是非</em><br><em>落沙&nbsp;&nbsp;&nbsp;&nbsp;吃尽后来人</em><br><em>云栈里&nbsp;&nbsp;&nbsp;&nbsp;翘首独自悲</em><br><em>-</em><br><em>为护水族</em><br><em>泾河落罪</em><br><em>鹰愁涧中</em><br><em>白马&nbsp;&nbsp;&nbsp;&nbsp;心成灰</em><br><em>又斥劣猴心不轨</em><br><em>五行山中五百岁</em><br><em>一人掩泪去</em><br><em>终老入丘堆</em><br><em>-</em><br><em>狂战凌霄</em><br><em>平心中愤</em><br><em>道佛阴险</em><br><em>找来云沙谁</em><br><em>不忍阵前做敌对</em><br><em>自愿弃法深林归</em><br><em>-</em><br><em>身心化石堆</em><br><em>再无世间累</em><br><em>----------------</em></p>\n<p>B站视频链接：<a href=\"https://www.bilibili.com/video/av11933852/\" target=\"_blank\" rel=\"external\">https://www.bilibili.com/video/av11933852/</a></p>\n"},{"title":"你不知道的js-学习笔记","date":"2017-07-14T04:48:40.000Z","_content":"\n占个坑~","source":"_posts/你不知道的js-学习笔记.md","raw":"---\ntitle: 你不知道的js-学习笔记\ndate: 2017-07-14 12:48:40\ntags:\n\t- 笔记\n---\n\n占个坑~","slug":"你不知道的js-学习笔记","published":1,"updated":"2017-07-18T09:02:58.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vs001duw2cm7spe6pd","content":"<p>占个坑~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>占个坑~</p>\n"},{"title":"前后端的数据交互问题分析","date":"2017-07-26T06:57:40.000Z","_content":"\n前后端数据交互的方式有很多种，比如后台是php\n1, 直接传值到页面节点中\n```js\n<div><?php echo '后台数据' ?></div>\n```\n\n2, 先赋值给js的变量，再通过js渲染到页面上\n```js\n<script>\n\tvar data  = {$data};\n\t$('.content').html(data.content);\n</script>\n```\n\n3, 通过AJAX请求数据\n```js\n<script>\n\tvar data;\n\t$.get('ajaxurl',function(res){ data = res; });\n</script>\n```\n\n4, 通过JSONP获取数据\n\n5, 通过h5的API：websocket，传递数据\n参考链接：[https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket](https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket)\n\n现在比较流行通过AJAX的方式获取数据，而websocket一般是用来客户端和服务器实时通信的。\n不管是通过哪种方式进行数据交互，传输的数据应该有一个规范的格式，并且最好是最终的数据（不需要前端再进行处理），数据的处理应该放在后台，前台的主要任务是布局和动画交互。","source":"_posts/前后端的数据交互问题分析.md","raw":"---\ntitle: 前后端的数据交互问题分析\ndate: 2017-07-26 14:57:40\ntags:\n\t- 思考\n---\n\n前后端数据交互的方式有很多种，比如后台是php\n1, 直接传值到页面节点中\n```js\n<div><?php echo '后台数据' ?></div>\n```\n\n2, 先赋值给js的变量，再通过js渲染到页面上\n```js\n<script>\n\tvar data  = {$data};\n\t$('.content').html(data.content);\n</script>\n```\n\n3, 通过AJAX请求数据\n```js\n<script>\n\tvar data;\n\t$.get('ajaxurl',function(res){ data = res; });\n</script>\n```\n\n4, 通过JSONP获取数据\n\n5, 通过h5的API：websocket，传递数据\n参考链接：[https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket](https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket)\n\n现在比较流行通过AJAX的方式获取数据，而websocket一般是用来客户端和服务器实时通信的。\n不管是通过哪种方式进行数据交互，传输的数据应该有一个规范的格式，并且最好是最终的数据（不需要前端再进行处理），数据的处理应该放在后台，前台的主要任务是布局和动画交互。","slug":"前后端的数据交互问题分析","published":1,"updated":"2017-07-28T00:48:17.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vv001guw2comtlyyct","content":"<p>前后端数据交互的方式有很多种，比如后台是php<br>1, 直接传值到页面节点中<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;<span class=\"xml\">&lt;?php echo '后台数据' ?&gt;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>2, 先赋值给js的变量，再通过js渲染到页面上<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">\t<span class=\"keyword\">var</span> data  = &#123;$data&#125;;</div><div class=\"line\">\t$(<span class=\"string\">'.content'</span>).html(data.content);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>3, 通过AJAX请求数据<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">\t<span class=\"keyword\">var</span> data;</div><div class=\"line\">\t$.get(<span class=\"string\">'ajaxurl'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123; data = res; &#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>4, 通过JSONP获取数据</p>\n<p>5, 通过h5的API：websocket，传递数据<br>参考链接：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket</a></p>\n<p>现在比较流行通过AJAX的方式获取数据，而websocket一般是用来客户端和服务器实时通信的。<br>不管是通过哪种方式进行数据交互，传输的数据应该有一个规范的格式，并且最好是最终的数据（不需要前端再进行处理），数据的处理应该放在后台，前台的主要任务是布局和动画交互。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前后端数据交互的方式有很多种，比如后台是php<br>1, 直接传值到页面节点中<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;<span class=\"xml\">&lt;?php echo '后台数据' ?&gt;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>2, 先赋值给js的变量，再通过js渲染到页面上<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">\t<span class=\"keyword\">var</span> data  = &#123;$data&#125;;</div><div class=\"line\">\t$(<span class=\"string\">'.content'</span>).html(data.content);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>3, 通过AJAX请求数据<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">\t<span class=\"keyword\">var</span> data;</div><div class=\"line\">\t$.get(<span class=\"string\">'ajaxurl'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123; data = res; &#125;);</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>\n<p>4, 通过JSONP获取数据</p>\n<p>5, 通过h5的API：websocket，传递数据<br>参考链接：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket</a></p>\n<p>现在比较流行通过AJAX的方式获取数据，而websocket一般是用来客户端和服务器实时通信的。<br>不管是通过哪种方式进行数据交互，传输的数据应该有一个规范的格式，并且最好是最终的数据（不需要前端再进行处理），数据的处理应该放在后台，前台的主要任务是布局和动画交互。</p>\n"},{"title":"关于法定纪念日不放假的思考","date":"2018-05-04T01:43:09.000Z","_content":"\n> 当企业不自觉遵守的法令，当纪念日只是一个普通的工作日，我们正在走向哪里？\n\n下面先摘抄一段政务院发布的**《全国年节及纪念日放假办法》**\n\n*1949年12月23日政务院发布　根据1999年9月18日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第一次修订　根据2007年12月14日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第二次修订　根据2013年12月11日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第三次修订*\n\n**第一条**&nbsp;&nbsp;&nbsp;&nbsp;为统一全国年节及纪念日的假期，制定本办法。\n**第二条**&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的节日：\n- 新年，放假1天(1月1日)；\n- 春节，放假3天(农历正月初一、初二、初三)；\n- 清明节，放假1天(农历清明当日)；\n- 劳动节，放假1天(5月1日)；\n- 端午节，放假1天(农历端午当日)；\n- 中秋节，放假1天(农历中秋当日)；\n- 国庆节，放假3天(10月1日、2日、3日)。\n\n**第三条**&nbsp;&nbsp;&nbsp;&nbsp;部分公民放假的节日及纪念日：\n- 妇女节(3月8日)，妇女放假半天；\n- 青年节(5月4日)，14周岁以上的青年放假半天；\n- 儿童节(6月1日)，不满14周岁的少年儿童放假1天；\n- 中国人民解放军建军纪念日(8月1日)，现役军人放假半天。\n\n**第四条**&nbsp;&nbsp;&nbsp;&nbsp;少数民族习惯的节日，由各少数民族聚居地区的地方人民政府，按照各该民族习惯，规定放假日期。\n**第五条**&nbsp;&nbsp;&nbsp;&nbsp;二七纪念日、五卅纪念日、七七抗战纪念日、九三抗战胜利纪念日、九一八纪念日、教师节、护士节、记者节、植树节等其他节日、纪念日，均不放假。\n**第六条**&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的假日，如果适逢星期六、星期日，应当在工作日补假。部分公民放假的假日，如果适逢星期六、星期日，则不补假。\n**第七条**&nbsp;&nbsp;&nbsp;&nbsp;本办法自公布之日起施行。\n\n\n法令是早已发布，可是又有多少企事业，多少老板、管理者真正的去执行？很少。\n当然这半天对一个老板来说，是可喜的；但对于一个国家来说，则是可悲的。为什么政府的法令不被执行？为什么不执行这法令的企业没有被处罚？有人说这只是一个倡议，如果这是一个倡议，那么同在这《办法》中的全体公民放假的节日就可以不放假了吗？还是因为这只是部分公民的假期？\n我想答案是：在国务院办公厅关于2018（2017/...）年部分节假日安排的通知中并没有提到部分公民放假的时间安排，所以，企事业单位就选择性的忽略这些假期。\n\n有些人一边指责他人，一边却压榨着祖国未来的掌权人；让他们害怕发言，一边压榨着他们，一边告诉他们，这都是为你好，你那么年轻，不努力赚钱怎么养家，怎么做到财务自由。\n是的，年轻是应该奋斗，应该有梦想。但年轻的人们也应该有一个好的榜样，甚至为了这个榜样去奋斗一生。\n\n无论这个世界怎样，我们一路走来，不是为了改变这个世界，而是不让这个世界改变我们。\n\n\\- 致 年轻的我们\n\n\n<!-- 一个人只是为了挣钱，就应该抛弃梦想、追求、正义吗？不应该。当他为了存活而放弃这些时，他就犹如行尸走肉一般了。在战争年代可能最大的梦想就是活下去，可在这和平年代呢？\n我们忘记了自己想要什么？只是知道努力挣钱，才不会活的想狗一样。才不会在这房价高昂，一切都看钱的日子中残喘。 -->","source":"_posts/关于法定纪念日不放假的思考.md","raw":"---\ntitle: 关于法定纪念日不放假的思考\ndate: 2018-05-04 09:43:09\ntags:\n  - 思考\n---\n\n> 当企业不自觉遵守的法令，当纪念日只是一个普通的工作日，我们正在走向哪里？\n\n下面先摘抄一段政务院发布的**《全国年节及纪念日放假办法》**\n\n*1949年12月23日政务院发布　根据1999年9月18日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第一次修订　根据2007年12月14日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第二次修订　根据2013年12月11日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第三次修订*\n\n**第一条**&nbsp;&nbsp;&nbsp;&nbsp;为统一全国年节及纪念日的假期，制定本办法。\n**第二条**&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的节日：\n- 新年，放假1天(1月1日)；\n- 春节，放假3天(农历正月初一、初二、初三)；\n- 清明节，放假1天(农历清明当日)；\n- 劳动节，放假1天(5月1日)；\n- 端午节，放假1天(农历端午当日)；\n- 中秋节，放假1天(农历中秋当日)；\n- 国庆节，放假3天(10月1日、2日、3日)。\n\n**第三条**&nbsp;&nbsp;&nbsp;&nbsp;部分公民放假的节日及纪念日：\n- 妇女节(3月8日)，妇女放假半天；\n- 青年节(5月4日)，14周岁以上的青年放假半天；\n- 儿童节(6月1日)，不满14周岁的少年儿童放假1天；\n- 中国人民解放军建军纪念日(8月1日)，现役军人放假半天。\n\n**第四条**&nbsp;&nbsp;&nbsp;&nbsp;少数民族习惯的节日，由各少数民族聚居地区的地方人民政府，按照各该民族习惯，规定放假日期。\n**第五条**&nbsp;&nbsp;&nbsp;&nbsp;二七纪念日、五卅纪念日、七七抗战纪念日、九三抗战胜利纪念日、九一八纪念日、教师节、护士节、记者节、植树节等其他节日、纪念日，均不放假。\n**第六条**&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的假日，如果适逢星期六、星期日，应当在工作日补假。部分公民放假的假日，如果适逢星期六、星期日，则不补假。\n**第七条**&nbsp;&nbsp;&nbsp;&nbsp;本办法自公布之日起施行。\n\n\n法令是早已发布，可是又有多少企事业，多少老板、管理者真正的去执行？很少。\n当然这半天对一个老板来说，是可喜的；但对于一个国家来说，则是可悲的。为什么政府的法令不被执行？为什么不执行这法令的企业没有被处罚？有人说这只是一个倡议，如果这是一个倡议，那么同在这《办法》中的全体公民放假的节日就可以不放假了吗？还是因为这只是部分公民的假期？\n我想答案是：在国务院办公厅关于2018（2017/...）年部分节假日安排的通知中并没有提到部分公民放假的时间安排，所以，企事业单位就选择性的忽略这些假期。\n\n有些人一边指责他人，一边却压榨着祖国未来的掌权人；让他们害怕发言，一边压榨着他们，一边告诉他们，这都是为你好，你那么年轻，不努力赚钱怎么养家，怎么做到财务自由。\n是的，年轻是应该奋斗，应该有梦想。但年轻的人们也应该有一个好的榜样，甚至为了这个榜样去奋斗一生。\n\n无论这个世界怎样，我们一路走来，不是为了改变这个世界，而是不让这个世界改变我们。\n\n\\- 致 年轻的我们\n\n\n<!-- 一个人只是为了挣钱，就应该抛弃梦想、追求、正义吗？不应该。当他为了存活而放弃这些时，他就犹如行尸走肉一般了。在战争年代可能最大的梦想就是活下去，可在这和平年代呢？\n我们忘记了自己想要什么？只是知道努力挣钱，才不会活的想狗一样。才不会在这房价高昂，一切都看钱的日子中残喘。 -->","slug":"关于法定纪念日不放假的思考","published":1,"updated":"2018-05-04T04:02:03.082Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069vv001iuw2cjyhr2q95","content":"<blockquote>\n<p>当企业不自觉遵守的法令，当纪念日只是一个普通的工作日，我们正在走向哪里？</p>\n</blockquote>\n<p>下面先摘抄一段政务院发布的<strong>《全国年节及纪念日放假办法》</strong></p>\n<p><em>1949年12月23日政务院发布　根据1999年9月18日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第一次修订　根据2007年12月14日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第二次修订　根据2013年12月11日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第三次修订</em></p>\n<p><strong>第一条</strong>&nbsp;&nbsp;&nbsp;&nbsp;为统一全国年节及纪念日的假期，制定本办法。<br><strong>第二条</strong>&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的节日：</p>\n<ul>\n<li>新年，放假1天(1月1日)；</li>\n<li>春节，放假3天(农历正月初一、初二、初三)；</li>\n<li>清明节，放假1天(农历清明当日)；</li>\n<li>劳动节，放假1天(5月1日)；</li>\n<li>端午节，放假1天(农历端午当日)；</li>\n<li>中秋节，放假1天(农历中秋当日)；</li>\n<li>国庆节，放假3天(10月1日、2日、3日)。</li>\n</ul>\n<p><strong>第三条</strong>&nbsp;&nbsp;&nbsp;&nbsp;部分公民放假的节日及纪念日：</p>\n<ul>\n<li>妇女节(3月8日)，妇女放假半天；</li>\n<li>青年节(5月4日)，14周岁以上的青年放假半天；</li>\n<li>儿童节(6月1日)，不满14周岁的少年儿童放假1天；</li>\n<li>中国人民解放军建军纪念日(8月1日)，现役军人放假半天。</li>\n</ul>\n<p><strong>第四条</strong>&nbsp;&nbsp;&nbsp;&nbsp;少数民族习惯的节日，由各少数民族聚居地区的地方人民政府，按照各该民族习惯，规定放假日期。<br><strong>第五条</strong>&nbsp;&nbsp;&nbsp;&nbsp;二七纪念日、五卅纪念日、七七抗战纪念日、九三抗战胜利纪念日、九一八纪念日、教师节、护士节、记者节、植树节等其他节日、纪念日，均不放假。<br><strong>第六条</strong>&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的假日，如果适逢星期六、星期日，应当在工作日补假。部分公民放假的假日，如果适逢星期六、星期日，则不补假。<br><strong>第七条</strong>&nbsp;&nbsp;&nbsp;&nbsp;本办法自公布之日起施行。</p>\n<p>法令是早已发布，可是又有多少企事业，多少老板、管理者真正的去执行？很少。<br>当然这半天对一个老板来说，是可喜的；但对于一个国家来说，则是可悲的。为什么政府的法令不被执行？为什么不执行这法令的企业没有被处罚？有人说这只是一个倡议，如果这是一个倡议，那么同在这《办法》中的全体公民放假的节日就可以不放假了吗？还是因为这只是部分公民的假期？<br>我想答案是：在国务院办公厅关于2018（2017/…）年部分节假日安排的通知中并没有提到部分公民放假的时间安排，所以，企事业单位就选择性的忽略这些假期。</p>\n<p>有些人一边指责他人，一边却压榨着祖国未来的掌权人；让他们害怕发言，一边压榨着他们，一边告诉他们，这都是为你好，你那么年轻，不努力赚钱怎么养家，怎么做到财务自由。<br>是的，年轻是应该奋斗，应该有梦想。但年轻的人们也应该有一个好的榜样，甚至为了这个榜样去奋斗一生。</p>\n<p>无论这个世界怎样，我们一路走来，不是为了改变这个世界，而是不让这个世界改变我们。</p>\n<p>- 致 年轻的我们</p>\n<!-- 一个人只是为了挣钱，就应该抛弃梦想、追求、正义吗？不应该。当他为了存活而放弃这些时，他就犹如行尸走肉一般了。在战争年代可能最大的梦想就是活下去，可在这和平年代呢？\n我们忘记了自己想要什么？只是知道努力挣钱，才不会活的想狗一样。才不会在这房价高昂，一切都看钱的日子中残喘。 -->","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>当企业不自觉遵守的法令，当纪念日只是一个普通的工作日，我们正在走向哪里？</p>\n</blockquote>\n<p>下面先摘抄一段政务院发布的<strong>《全国年节及纪念日放假办法》</strong></p>\n<p><em>1949年12月23日政务院发布　根据1999年9月18日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第一次修订　根据2007年12月14日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第二次修订　根据2013年12月11日《国务院关于修改〈全国年节及纪念日放假办法〉的决定》第三次修订</em></p>\n<p><strong>第一条</strong>&nbsp;&nbsp;&nbsp;&nbsp;为统一全国年节及纪念日的假期，制定本办法。<br><strong>第二条</strong>&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的节日：</p>\n<ul>\n<li>新年，放假1天(1月1日)；</li>\n<li>春节，放假3天(农历正月初一、初二、初三)；</li>\n<li>清明节，放假1天(农历清明当日)；</li>\n<li>劳动节，放假1天(5月1日)；</li>\n<li>端午节，放假1天(农历端午当日)；</li>\n<li>中秋节，放假1天(农历中秋当日)；</li>\n<li>国庆节，放假3天(10月1日、2日、3日)。</li>\n</ul>\n<p><strong>第三条</strong>&nbsp;&nbsp;&nbsp;&nbsp;部分公民放假的节日及纪念日：</p>\n<ul>\n<li>妇女节(3月8日)，妇女放假半天；</li>\n<li>青年节(5月4日)，14周岁以上的青年放假半天；</li>\n<li>儿童节(6月1日)，不满14周岁的少年儿童放假1天；</li>\n<li>中国人民解放军建军纪念日(8月1日)，现役军人放假半天。</li>\n</ul>\n<p><strong>第四条</strong>&nbsp;&nbsp;&nbsp;&nbsp;少数民族习惯的节日，由各少数民族聚居地区的地方人民政府，按照各该民族习惯，规定放假日期。<br><strong>第五条</strong>&nbsp;&nbsp;&nbsp;&nbsp;二七纪念日、五卅纪念日、七七抗战纪念日、九三抗战胜利纪念日、九一八纪念日、教师节、护士节、记者节、植树节等其他节日、纪念日，均不放假。<br><strong>第六条</strong>&nbsp;&nbsp;&nbsp;&nbsp;全体公民放假的假日，如果适逢星期六、星期日，应当在工作日补假。部分公民放假的假日，如果适逢星期六、星期日，则不补假。<br><strong>第七条</strong>&nbsp;&nbsp;&nbsp;&nbsp;本办法自公布之日起施行。</p>\n<p>法令是早已发布，可是又有多少企事业，多少老板、管理者真正的去执行？很少。<br>当然这半天对一个老板来说，是可喜的；但对于一个国家来说，则是可悲的。为什么政府的法令不被执行？为什么不执行这法令的企业没有被处罚？有人说这只是一个倡议，如果这是一个倡议，那么同在这《办法》中的全体公民放假的节日就可以不放假了吗？还是因为这只是部分公民的假期？<br>我想答案是：在国务院办公厅关于2018（2017/…）年部分节假日安排的通知中并没有提到部分公民放假的时间安排，所以，企事业单位就选择性的忽略这些假期。</p>\n<p>有些人一边指责他人，一边却压榨着祖国未来的掌权人；让他们害怕发言，一边压榨着他们，一边告诉他们，这都是为你好，你那么年轻，不努力赚钱怎么养家，怎么做到财务自由。<br>是的，年轻是应该奋斗，应该有梦想。但年轻的人们也应该有一个好的榜样，甚至为了这个榜样去奋斗一生。</p>\n<p>无论这个世界怎样，我们一路走来，不是为了改变这个世界，而是不让这个世界改变我们。</p>\n<p>- 致 年轻的我们</p>\n<!-- 一个人只是为了挣钱，就应该抛弃梦想、追求、正义吗？不应该。当他为了存活而放弃这些时，他就犹如行尸走肉一般了。在战争年代可能最大的梦想就是活下去，可在这和平年代呢？\n我们忘记了自己想要什么？只是知道努力挣钱，才不会活的想狗一样。才不会在这房价高昂，一切都看钱的日子中残喘。 -->"},{"title":"[我是搬运工]-js数组打乱-shuffle","date":"2017-08-28T00:53:50.000Z","_content":"\n最近在项目要用到一个函数，把数组打乱，结果竟然发现：js没有这么一个函数！！！震惊！！！\n\n然而旁边的陈同学却告诉我php里都内置了这样的函数shuffle，果然php是世界上最NB的语言~\n\n下面摘抄stackoverflow上面的一些精髓的方法\n\n方法一：(852赞)\n```js\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n// Used like so\nvar arr = [2, 11, 37, 42];\narr = shuffle(arr);\nconsole.log(arr);\n```\n方法二：(347赞)\n```js\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n```\n\n[传送门](https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array)\n","source":"_posts/我是搬运工-js数组打乱-shuffle.md","raw":"---\ntitle: '[我是搬运工]-js数组打乱-shuffle'\ndate: 2017-08-28 08:53:50\ntags:\n\t- 我是搬运工\n---\n\n最近在项目要用到一个函数，把数组打乱，结果竟然发现：js没有这么一个函数！！！震惊！！！\n\n然而旁边的陈同学却告诉我php里都内置了这样的函数shuffle，果然php是世界上最NB的语言~\n\n下面摘抄stackoverflow上面的一些精髓的方法\n\n方法一：(852赞)\n```js\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n// Used like so\nvar arr = [2, 11, 37, 42];\narr = shuffle(arr);\nconsole.log(arr);\n```\n方法二：(347赞)\n```js\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n```\n\n[传送门](https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array)\n","slug":"我是搬运工-js数组打乱-shuffle","published":1,"updated":"2017-08-28T01:03:32.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w0001kuw2cjqpx3ser","content":"<p>最近在项目要用到一个函数，把数组打乱，结果竟然发现：js没有这么一个函数！！！震惊！！！</p>\n<p>然而旁边的陈同学却告诉我php里都内置了这样的函数shuffle，果然php是世界上最NB的语言~</p>\n<p>下面摘抄stackoverflow上面的一些精髓的方法</p>\n<p>方法一：(852赞)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle</span>(<span class=\"params\">array</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> currentIndex = array.length, temporaryValue, randomIndex;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// While there remain elements to shuffle...</span></div><div class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">0</span> !== currentIndex) &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Pick a remaining element...</span></div><div class=\"line\">    randomIndex = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * currentIndex);</div><div class=\"line\">    currentIndex -= <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// And swap it with the current element.</span></div><div class=\"line\">    temporaryValue = array[currentIndex];</div><div class=\"line\">    array[currentIndex] = array[randomIndex];</div><div class=\"line\">    array[randomIndex] = temporaryValue;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> array;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Used like so</span></div><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">37</span>, <span class=\"number\">42</span>];</div><div class=\"line\">arr = shuffle(arr);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);</div></pre></td></tr></table></figure></p>\n<p>方法二：(347赞)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffleArray</span>(<span class=\"params\">array</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = array.length - <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * (i + <span class=\"number\">1</span>));</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = array[i];</div><div class=\"line\">        array[i] = array[j];</div><div class=\"line\">        array[j] = temp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\" target=\"_blank\" rel=\"external\">传送门</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近在项目要用到一个函数，把数组打乱，结果竟然发现：js没有这么一个函数！！！震惊！！！</p>\n<p>然而旁边的陈同学却告诉我php里都内置了这样的函数shuffle，果然php是世界上最NB的语言~</p>\n<p>下面摘抄stackoverflow上面的一些精髓的方法</p>\n<p>方法一：(852赞)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffle</span>(<span class=\"params\">array</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> currentIndex = array.length, temporaryValue, randomIndex;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// While there remain elements to shuffle...</span></div><div class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"number\">0</span> !== currentIndex) &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// Pick a remaining element...</span></div><div class=\"line\">    randomIndex = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * currentIndex);</div><div class=\"line\">    currentIndex -= <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// And swap it with the current element.</span></div><div class=\"line\">    temporaryValue = array[currentIndex];</div><div class=\"line\">    array[currentIndex] = array[randomIndex];</div><div class=\"line\">    array[randomIndex] = temporaryValue;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> array;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Used like so</span></div><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">11</span>, <span class=\"number\">37</span>, <span class=\"number\">42</span>];</div><div class=\"line\">arr = shuffle(arr);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr);</div></pre></td></tr></table></figure></p>\n<p>方法二：(347赞)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">shuffleArray</span>(<span class=\"params\">array</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = array.length - <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * (i + <span class=\"number\">1</span>));</div><div class=\"line\">        <span class=\"keyword\">var</span> temp = array[i];</div><div class=\"line\">        array[i] = array[j];</div><div class=\"line\">        array[j] = temp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\" target=\"_blank\" rel=\"external\">传送门</a></p>\n"},{"title":"[算法] - 人，狼，羊，白菜过河问题","date":"2018-03-09T15:51:47.000Z","_content":"\n> 每次只能带一样东西过桥，羊会吃白菜，狼会吃羊，但是狼不吃白菜，请问这个人要把这三样东西带过到河对岸？\n\n\n思路：\n\na表示初始岸，b表示目的岸\n1表示狼，2表示羊，3表示白菜\n\n每次移动，人带一种东西或者不带；\n每次移动，离开的一岸羊和狼或者白菜不能同时存在；\n如果想把三种东西带到b岸：\n-&nbsp;人从a到b，每次都要带一种东西过河；\n-&nbsp;人从b到a，尽量不带，如果不带不可以，则随机带一个；\n\n如果移动尝试失败，则换别的可能尝试，直到成功为止。\n\n\n\n代码：\n```js\n\nvar NC = {\n\ta: [1,2,3],\t\t// a表示初始的一边，1表示狼，2表示羊，3表示白菜\n\tb: [],\t\t\t// b表示另一边\n\tstatus: 'a',\n\ttimes: 1,\t\t// times尝试的次数\n\tstart: function () {\n\t\tthis.m('a', 'b', 0)\n\t},\n\tm: function (from, to, index) {\n\t\t// 从from到to，带from下标为index的东西，index为-1时表示不带东西\n\t\tconsole.log('第' + this.times + '次：初始值')\n\t\tconsole.log('a边:' ,this.a)\n\t\tconsole.log('b边:' ,this.b)\n\t\tif (index == -1) {\n\t\t\tconsole.log('人从：' + from + ' -> ' + to)\n\t\t}else{\n\t\t\tconsole.log('人尝试从 '+from+' 移动 ' + this[from][index] + ' 到 ' + to)\n\t\t}\n\t\tthis.times++\n\t\tvar r, arr = [], len = this[from].length, v\n\t\tif (index == -1) {\n\t\t\tarr = this['b']\n\t\t\tv = 0\n\t\t}else{\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tif (i != index) {\n\t\t\t\t\tarr.push(this[from][i])\n\t\t\t\t}else{\n\t\t\t\t\tv = this[from][i]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tr = this.checkFrom(arr)\n\t\tif (!r) {\n\t\t\tindex++;\n\t\t\tconsole.log('移动失败，进行下一次尝试')\n\t\t\tconsole.log('--------------------')\n\t\t\tthis.m(from, to, index)\n\t\t}else{\n\t\t\tr = this.checkTo(to, v)\n\t\t\tif (r) {\n\t\t\t\tthis.ms(from, to, v)\n\t\t\t}else{\n\t\t\t\tindex++;\n\t\t\t\tthis.m(from, to, index)\n\t\t\t}\n\t\t}\n\t},\n\tms: function (f, t, v) {\n\t\t// 从f到t，带v表示的东西\n\t\tvar arr = [], l = this[f].length;\n\t\tvar sf = [], index = -1;\n\t\tthis.status = this.status == 'a' ? 'b' : 'a'\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (this[f][i] != v) {\n\t\t\t\tsf.push(this[f][i])\n\t\t\t}else{\n\t\t\t\tthis[t].push(v);\n\t\t\t}\n\t\t}\n\t\tthis[f] = sf;\n\t\tif (this.b.length == 3) {\n\t\t\tthis.sucLog()\n\t\t\treturn false\n\t\t}\n\t\tthis.sucLog()\n\t\tconsole.log('--------------------')\n\t\tif (t != 'b') {\n\t\t\tindex = 0\n\t\t}\n\t\tthis.m(t, f, index)\n\t},\n\tcheckFrom: function (arr) {\n\t\t// 检查离开的一岸剩下的物体是否可以同时存在\n\t\tif (arr.length < 2) {\n\t\t\treturn true\n\t\t}else{\n\t\t\treturn Math.abs(arr[0] - arr[1]) != 1\n\t\t}\n\t},\n\tcheckTo: function (t, v) {\n\t\t// 检查是否与上一次重复带一个物体\n\t\tif (!v) {\n\t\t\treturn true\n\t\t}\n\t\t// 重复r为true\n\t\tvar r = (t == 'a' && this.ta == v) || (t == 'b' && this.tb == v)\n\t\tif (r) {\n\t\t\treturn false\n\t\t}else{\n\t\t\tif (t == 'a') {\n\t\t\t\tthis.ta = v\n\t\t\t}\n\t\t\tif (t == 'b') {\n\t\t\t\tthis.tb = v\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t},\n\tsucLog: function () {\n\t\t// 打印结果\n\t\tconsole.log('移动成功，结果为：')\n\t\tconsole.log('a边:' ,this.a)\n\t\tconsole.log('b边:' ,this.b)\n\t\tconsole.log('人在' + this.status + '边')\n\t}\n}\n\n```\n\n这是一种尝试的方法，还有一种方法：列出所有状态，用宽搜思想去遍历出所有的可能性。","source":"_posts/算法-人，狼，羊，白菜过河问题.md","raw":"---\ntitle: '[算法] - 人，狼，羊，白菜过河问题'\ndate: 2018-03-09 23:51:47\ntags:\n\t- 算法\n---\n\n> 每次只能带一样东西过桥，羊会吃白菜，狼会吃羊，但是狼不吃白菜，请问这个人要把这三样东西带过到河对岸？\n\n\n思路：\n\na表示初始岸，b表示目的岸\n1表示狼，2表示羊，3表示白菜\n\n每次移动，人带一种东西或者不带；\n每次移动，离开的一岸羊和狼或者白菜不能同时存在；\n如果想把三种东西带到b岸：\n-&nbsp;人从a到b，每次都要带一种东西过河；\n-&nbsp;人从b到a，尽量不带，如果不带不可以，则随机带一个；\n\n如果移动尝试失败，则换别的可能尝试，直到成功为止。\n\n\n\n代码：\n```js\n\nvar NC = {\n\ta: [1,2,3],\t\t// a表示初始的一边，1表示狼，2表示羊，3表示白菜\n\tb: [],\t\t\t// b表示另一边\n\tstatus: 'a',\n\ttimes: 1,\t\t// times尝试的次数\n\tstart: function () {\n\t\tthis.m('a', 'b', 0)\n\t},\n\tm: function (from, to, index) {\n\t\t// 从from到to，带from下标为index的东西，index为-1时表示不带东西\n\t\tconsole.log('第' + this.times + '次：初始值')\n\t\tconsole.log('a边:' ,this.a)\n\t\tconsole.log('b边:' ,this.b)\n\t\tif (index == -1) {\n\t\t\tconsole.log('人从：' + from + ' -> ' + to)\n\t\t}else{\n\t\t\tconsole.log('人尝试从 '+from+' 移动 ' + this[from][index] + ' 到 ' + to)\n\t\t}\n\t\tthis.times++\n\t\tvar r, arr = [], len = this[from].length, v\n\t\tif (index == -1) {\n\t\t\tarr = this['b']\n\t\t\tv = 0\n\t\t}else{\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tif (i != index) {\n\t\t\t\t\tarr.push(this[from][i])\n\t\t\t\t}else{\n\t\t\t\t\tv = this[from][i]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tr = this.checkFrom(arr)\n\t\tif (!r) {\n\t\t\tindex++;\n\t\t\tconsole.log('移动失败，进行下一次尝试')\n\t\t\tconsole.log('--------------------')\n\t\t\tthis.m(from, to, index)\n\t\t}else{\n\t\t\tr = this.checkTo(to, v)\n\t\t\tif (r) {\n\t\t\t\tthis.ms(from, to, v)\n\t\t\t}else{\n\t\t\t\tindex++;\n\t\t\t\tthis.m(from, to, index)\n\t\t\t}\n\t\t}\n\t},\n\tms: function (f, t, v) {\n\t\t// 从f到t，带v表示的东西\n\t\tvar arr = [], l = this[f].length;\n\t\tvar sf = [], index = -1;\n\t\tthis.status = this.status == 'a' ? 'b' : 'a'\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\tif (this[f][i] != v) {\n\t\t\t\tsf.push(this[f][i])\n\t\t\t}else{\n\t\t\t\tthis[t].push(v);\n\t\t\t}\n\t\t}\n\t\tthis[f] = sf;\n\t\tif (this.b.length == 3) {\n\t\t\tthis.sucLog()\n\t\t\treturn false\n\t\t}\n\t\tthis.sucLog()\n\t\tconsole.log('--------------------')\n\t\tif (t != 'b') {\n\t\t\tindex = 0\n\t\t}\n\t\tthis.m(t, f, index)\n\t},\n\tcheckFrom: function (arr) {\n\t\t// 检查离开的一岸剩下的物体是否可以同时存在\n\t\tif (arr.length < 2) {\n\t\t\treturn true\n\t\t}else{\n\t\t\treturn Math.abs(arr[0] - arr[1]) != 1\n\t\t}\n\t},\n\tcheckTo: function (t, v) {\n\t\t// 检查是否与上一次重复带一个物体\n\t\tif (!v) {\n\t\t\treturn true\n\t\t}\n\t\t// 重复r为true\n\t\tvar r = (t == 'a' && this.ta == v) || (t == 'b' && this.tb == v)\n\t\tif (r) {\n\t\t\treturn false\n\t\t}else{\n\t\t\tif (t == 'a') {\n\t\t\t\tthis.ta = v\n\t\t\t}\n\t\t\tif (t == 'b') {\n\t\t\t\tthis.tb = v\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t},\n\tsucLog: function () {\n\t\t// 打印结果\n\t\tconsole.log('移动成功，结果为：')\n\t\tconsole.log('a边:' ,this.a)\n\t\tconsole.log('b边:' ,this.b)\n\t\tconsole.log('人在' + this.status + '边')\n\t}\n}\n\n```\n\n这是一种尝试的方法，还有一种方法：列出所有状态，用宽搜思想去遍历出所有的可能性。","slug":"算法-人，狼，羊，白菜过河问题","published":1,"updated":"2018-03-09T16:32:16.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w1001nuw2c0vswwt8n","content":"<blockquote>\n<p>每次只能带一样东西过桥，羊会吃白菜，狼会吃羊，但是狼不吃白菜，请问这个人要把这三样东西带过到河对岸？</p>\n</blockquote>\n<p>思路：</p>\n<p>a表示初始岸，b表示目的岸<br>1表示狼，2表示羊，3表示白菜</p>\n<p>每次移动，人带一种东西或者不带；<br>每次移动，离开的一岸羊和狼或者白菜不能同时存在；<br>如果想把三种东西带到b岸：<br>-&nbsp;人从a到b，每次都要带一种东西过河；<br>-&nbsp;人从b到a，尽量不带，如果不带不可以，则随机带一个；</p>\n<p>如果移动尝试失败，则换别的可能尝试，直到成功为止。</p>\n<p>代码：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> NC = &#123;</div><div class=\"line\">\t<span class=\"attr\">a</span>: [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],\t\t<span class=\"comment\">// a表示初始的一边，1表示狼，2表示羊，3表示白菜</span></div><div class=\"line\">\tb: [],\t\t\t<span class=\"comment\">// b表示另一边</span></div><div class=\"line\">\tstatus: <span class=\"string\">'a'</span>,</div><div class=\"line\">\t<span class=\"attr\">times</span>: <span class=\"number\">1</span>,\t\t<span class=\"comment\">// times尝试的次数</span></div><div class=\"line\">\tstart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.m(<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"number\">0</span>)</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">m</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">from, to, index</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 从from到to，带from下标为index的东西，index为-1时表示不带东西</span></div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'第'</span> + <span class=\"keyword\">this</span>.times + <span class=\"string\">'次：初始值'</span>)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'a边:'</span> ,<span class=\"keyword\">this</span>.a)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'b边:'</span> ,<span class=\"keyword\">this</span>.b)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人从：'</span> + <span class=\"keyword\">from</span> + <span class=\"string\">' -&gt; '</span> + to)</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人尝试从 '</span>+<span class=\"keyword\">from</span>+<span class=\"string\">' 移动 '</span> + <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][index] + <span class=\"string\">' 到 '</span> + to)</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.times++</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> r, arr = [], len = <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>].length, v</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">\t\t\tarr = <span class=\"keyword\">this</span>[<span class=\"string\">'b'</span>]</div><div class=\"line\">\t\t\tv = <span class=\"number\">0</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i != index) &#123;</div><div class=\"line\">\t\t\t\t\tarr.push(<span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][i])</div><div class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\tv = <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][i]</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tr = <span class=\"keyword\">this</span>.checkFrom(arr)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!r) &#123;</div><div class=\"line\">\t\t\tindex++;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'移动失败，进行下一次尝试'</span>)</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'--------------------'</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.m(<span class=\"keyword\">from</span>, to, index)</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\tr = <span class=\"keyword\">this</span>.checkTo(to, v)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (r) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.ms(<span class=\"keyword\">from</span>, to, v)</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tindex++;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.m(<span class=\"keyword\">from</span>, to, index)</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">ms</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">f, t, v</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 从f到t，带v表示的东西</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> arr = [], l = <span class=\"keyword\">this</span>[f].length;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> sf = [], index = <span class=\"number\">-1</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = <span class=\"keyword\">this</span>.status == <span class=\"string\">'a'</span> ? <span class=\"string\">'b'</span> : <span class=\"string\">'a'</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; l; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[f][i] != v) &#123;</div><div class=\"line\">\t\t\t\tsf.push(<span class=\"keyword\">this</span>[f][i])</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>[t].push(v);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>[f] = sf;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.b.length == <span class=\"number\">3</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.sucLog()</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.sucLog()</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'--------------------'</span>)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (t != <span class=\"string\">'b'</span>) &#123;</div><div class=\"line\">\t\t\tindex = <span class=\"number\">0</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.m(t, f, index)</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">checkFrom</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arr</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 检查离开的一岸剩下的物体是否可以同时存在</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (arr.length &lt; <span class=\"number\">2</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.abs(arr[<span class=\"number\">0</span>] - arr[<span class=\"number\">1</span>]) != <span class=\"number\">1</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">checkTo</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">t, v</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 检查是否与上一次重复带一个物体</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!v) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 重复r为true</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> r = (t == <span class=\"string\">'a'</span> &amp;&amp; <span class=\"keyword\">this</span>.ta == v) || (t == <span class=\"string\">'b'</span> &amp;&amp; <span class=\"keyword\">this</span>.tb == v)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (r) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t == <span class=\"string\">'a'</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.ta = v</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t == <span class=\"string\">'b'</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.tb = v</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">sucLog</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 打印结果</span></div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'移动成功，结果为：'</span>)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'a边:'</span> ,<span class=\"keyword\">this</span>.a)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'b边:'</span> ,<span class=\"keyword\">this</span>.b)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人在'</span> + <span class=\"keyword\">this</span>.status + <span class=\"string\">'边'</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这是一种尝试的方法，还有一种方法：列出所有状态，用宽搜思想去遍历出所有的可能性。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>每次只能带一样东西过桥，羊会吃白菜，狼会吃羊，但是狼不吃白菜，请问这个人要把这三样东西带过到河对岸？</p>\n</blockquote>\n<p>思路：</p>\n<p>a表示初始岸，b表示目的岸<br>1表示狼，2表示羊，3表示白菜</p>\n<p>每次移动，人带一种东西或者不带；<br>每次移动，离开的一岸羊和狼或者白菜不能同时存在；<br>如果想把三种东西带到b岸：<br>-&nbsp;人从a到b，每次都要带一种东西过河；<br>-&nbsp;人从b到a，尽量不带，如果不带不可以，则随机带一个；</p>\n<p>如果移动尝试失败，则换别的可能尝试，直到成功为止。</p>\n<p>代码：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> NC = &#123;</div><div class=\"line\">\t<span class=\"attr\">a</span>: [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],\t\t<span class=\"comment\">// a表示初始的一边，1表示狼，2表示羊，3表示白菜</span></div><div class=\"line\">\tb: [],\t\t\t<span class=\"comment\">// b表示另一边</span></div><div class=\"line\">\tstatus: <span class=\"string\">'a'</span>,</div><div class=\"line\">\t<span class=\"attr\">times</span>: <span class=\"number\">1</span>,\t\t<span class=\"comment\">// times尝试的次数</span></div><div class=\"line\">\tstart: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.m(<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"number\">0</span>)</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">m</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">from, to, index</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 从from到to，带from下标为index的东西，index为-1时表示不带东西</span></div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'第'</span> + <span class=\"keyword\">this</span>.times + <span class=\"string\">'次：初始值'</span>)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'a边:'</span> ,<span class=\"keyword\">this</span>.a)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'b边:'</span> ,<span class=\"keyword\">this</span>.b)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人从：'</span> + <span class=\"keyword\">from</span> + <span class=\"string\">' -&gt; '</span> + to)</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人尝试从 '</span>+<span class=\"keyword\">from</span>+<span class=\"string\">' 移动 '</span> + <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][index] + <span class=\"string\">' 到 '</span> + to)</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.times++</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> r, arr = [], len = <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>].length, v</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (index == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">\t\t\tarr = <span class=\"keyword\">this</span>[<span class=\"string\">'b'</span>]</div><div class=\"line\">\t\t\tv = <span class=\"number\">0</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (i != index) &#123;</div><div class=\"line\">\t\t\t\t\tarr.push(<span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][i])</div><div class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\tv = <span class=\"keyword\">this</span>[<span class=\"keyword\">from</span>][i]</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tr = <span class=\"keyword\">this</span>.checkFrom(arr)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!r) &#123;</div><div class=\"line\">\t\t\tindex++;</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'移动失败，进行下一次尝试'</span>)</div><div class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'--------------------'</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.m(<span class=\"keyword\">from</span>, to, index)</div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\tr = <span class=\"keyword\">this</span>.checkTo(to, v)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (r) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.ms(<span class=\"keyword\">from</span>, to, v)</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tindex++;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.m(<span class=\"keyword\">from</span>, to, index)</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">ms</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">f, t, v</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 从f到t，带v表示的东西</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> arr = [], l = <span class=\"keyword\">this</span>[f].length;</div><div class=\"line\">\t\t<span class=\"keyword\">var</span> sf = [], index = <span class=\"number\">-1</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.status = <span class=\"keyword\">this</span>.status == <span class=\"string\">'a'</span> ? <span class=\"string\">'b'</span> : <span class=\"string\">'a'</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; l; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>[f][i] != v) &#123;</div><div class=\"line\">\t\t\t\tsf.push(<span class=\"keyword\">this</span>[f][i])</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>[t].push(v);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>[f] = sf;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.b.length == <span class=\"number\">3</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.sucLog()</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.sucLog()</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'--------------------'</span>)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (t != <span class=\"string\">'b'</span>) &#123;</div><div class=\"line\">\t\t\tindex = <span class=\"number\">0</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.m(t, f, index)</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">checkFrom</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">arr</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 检查离开的一岸剩下的物体是否可以同时存在</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (arr.length &lt; <span class=\"number\">2</span>) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.abs(arr[<span class=\"number\">0</span>] - arr[<span class=\"number\">1</span>]) != <span class=\"number\">1</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">checkTo</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">t, v</span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 检查是否与上一次重复带一个物体</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!v) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 重复r为true</span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> r = (t == <span class=\"string\">'a'</span> &amp;&amp; <span class=\"keyword\">this</span>.ta == v) || (t == <span class=\"string\">'b'</span> &amp;&amp; <span class=\"keyword\">this</span>.tb == v)</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (r) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t == <span class=\"string\">'a'</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.ta = v</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (t == <span class=\"string\">'b'</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.tb = v</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"attr\">sucLog</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 打印结果</span></div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'移动成功，结果为：'</span>)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'a边:'</span> ,<span class=\"keyword\">this</span>.a)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'b边:'</span> ,<span class=\"keyword\">this</span>.b)</div><div class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'人在'</span> + <span class=\"keyword\">this</span>.status + <span class=\"string\">'边'</span>)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这是一种尝试的方法，还有一种方法：列出所有状态，用宽搜思想去遍历出所有的可能性。</p>\n"},{"title":"前后端分离的思考","date":"2017-07-27T07:21:36.000Z","_content":"\n##### 什么是前后端分离\n有人说SPA（single page application）就是前后端分离，是的，不过我觉得SPA只是前后端分离的一种应用场景。\n或者换句话问：**前后端分离是什么？**\n是什么？是SPA？应该不能这样回答吧。\n前后端分离应该是前后端职责明确的划分，各司其职。\n* 前端负责V和C\n* 后端负责M\n\n在这里，应该明确划分，后端只负责把数据处理好然后返回给前端，而不需要前端再对数据处理。前端负责数据的展示，以及用户的交互，对于展示的逻辑后端不应再去涉足。更深一点说是架构上应该分离，最好是部署到不同的服务器上。\n\n##### 为什么要前后端分离\n\n1, 开发效率\n  前端开发依赖后端\n2, 前后端职责不清\n  前后端代码混杂，没有约束，且维护困难。\n3, 场景需求\n  有些项目可能是多端的，后端只写接口会方便各端调用，不需要针对不同端写重复的代码。\n\n##### 优点\n* 减轻服务器压力，服务器不需要再渲染页面，对于多端只需提供一套API即可。\n* 方便开发，前后端人员各司其职，不再被同步事件相互等待而耽误工程的开发。\n* 完全的前端组件化\n\n##### 缺点\n* 不利于SEO优化，\n\n后端只负责业务/数据接口，前端只负责展现/交互逻辑。后端可以对于同一块数据根据不同端的需求不同，根据不同的筛选条件返回不同的数据给客户端\n\n目前，有些公司在后端（java/php/..）和前端之间加了一层node，用做把数据的规整和请求的转发。本人尚不清楚此架构的具体意义和实现方式，不过有兴趣的同学可以查看资料进行学习。\n\n##### 我们是否需要进行前后端分离\n对于我们是否需要进行前后端分离，我觉得应该有很多考量。比如代码的维护，以及分离方式的架构，具体实现方式等等，当我们对此还不熟悉时，可以去尝试，但无论是否分离，尽可能的写出可维护性的代码，尽可能的进行网站优化都是我们应该做的。\n有机会就去学习和尝试新东西，我们才会在实践中慢慢成长~\n\n该篇文章参考了下面链接中内容，简单书写了自己的看法。\n参考链接：[http://blog.jobbole.com/65513/](http://blog.jobbole.com/65513/)","source":"_posts/前后端分离的思考.md","raw":"---\ntitle: 前后端分离的思考\ndate: 2017-07-27 15:21:36\ntags:\n\t- 思考\n---\n\n##### 什么是前后端分离\n有人说SPA（single page application）就是前后端分离，是的，不过我觉得SPA只是前后端分离的一种应用场景。\n或者换句话问：**前后端分离是什么？**\n是什么？是SPA？应该不能这样回答吧。\n前后端分离应该是前后端职责明确的划分，各司其职。\n* 前端负责V和C\n* 后端负责M\n\n在这里，应该明确划分，后端只负责把数据处理好然后返回给前端，而不需要前端再对数据处理。前端负责数据的展示，以及用户的交互，对于展示的逻辑后端不应再去涉足。更深一点说是架构上应该分离，最好是部署到不同的服务器上。\n\n##### 为什么要前后端分离\n\n1, 开发效率\n  前端开发依赖后端\n2, 前后端职责不清\n  前后端代码混杂，没有约束，且维护困难。\n3, 场景需求\n  有些项目可能是多端的，后端只写接口会方便各端调用，不需要针对不同端写重复的代码。\n\n##### 优点\n* 减轻服务器压力，服务器不需要再渲染页面，对于多端只需提供一套API即可。\n* 方便开发，前后端人员各司其职，不再被同步事件相互等待而耽误工程的开发。\n* 完全的前端组件化\n\n##### 缺点\n* 不利于SEO优化，\n\n后端只负责业务/数据接口，前端只负责展现/交互逻辑。后端可以对于同一块数据根据不同端的需求不同，根据不同的筛选条件返回不同的数据给客户端\n\n目前，有些公司在后端（java/php/..）和前端之间加了一层node，用做把数据的规整和请求的转发。本人尚不清楚此架构的具体意义和实现方式，不过有兴趣的同学可以查看资料进行学习。\n\n##### 我们是否需要进行前后端分离\n对于我们是否需要进行前后端分离，我觉得应该有很多考量。比如代码的维护，以及分离方式的架构，具体实现方式等等，当我们对此还不熟悉时，可以去尝试，但无论是否分离，尽可能的写出可维护性的代码，尽可能的进行网站优化都是我们应该做的。\n有机会就去学习和尝试新东西，我们才会在实践中慢慢成长~\n\n该篇文章参考了下面链接中内容，简单书写了自己的看法。\n参考链接：[http://blog.jobbole.com/65513/](http://blog.jobbole.com/65513/)","slug":"前后端分离的思考","published":1,"updated":"2017-07-28T05:33:29.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w3001puw2cwdpcg49i","content":"<h5 id=\"什么是前后端分离\"><a href=\"#什么是前后端分离\" class=\"headerlink\" title=\"什么是前后端分离\"></a>什么是前后端分离</h5><p>有人说SPA（single page application）就是前后端分离，是的，不过我觉得SPA只是前后端分离的一种应用场景。<br>或者换句话问：<strong>前后端分离是什么？</strong><br>是什么？是SPA？应该不能这样回答吧。<br>前后端分离应该是前后端职责明确的划分，各司其职。</p>\n<ul>\n<li>前端负责V和C</li>\n<li>后端负责M</li>\n</ul>\n<p>在这里，应该明确划分，后端只负责把数据处理好然后返回给前端，而不需要前端再对数据处理。前端负责数据的展示，以及用户的交互，对于展示的逻辑后端不应再去涉足。更深一点说是架构上应该分离，最好是部署到不同的服务器上。</p>\n<h5 id=\"为什么要前后端分离\"><a href=\"#为什么要前后端分离\" class=\"headerlink\" title=\"为什么要前后端分离\"></a>为什么要前后端分离</h5><p>1, 开发效率<br>  前端开发依赖后端<br>2, 前后端职责不清<br>  前后端代码混杂，没有约束，且维护困难。<br>3, 场景需求<br>  有些项目可能是多端的，后端只写接口会方便各端调用，不需要针对不同端写重复的代码。</p>\n<h5 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ul>\n<li>减轻服务器压力，服务器不需要再渲染页面，对于多端只需提供一套API即可。</li>\n<li>方便开发，前后端人员各司其职，不再被同步事件相互等待而耽误工程的开发。</li>\n<li>完全的前端组件化</li>\n</ul>\n<h5 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ul>\n<li>不利于SEO优化，</li>\n</ul>\n<p>后端只负责业务/数据接口，前端只负责展现/交互逻辑。后端可以对于同一块数据根据不同端的需求不同，根据不同的筛选条件返回不同的数据给客户端</p>\n<p>目前，有些公司在后端（java/php/..）和前端之间加了一层node，用做把数据的规整和请求的转发。本人尚不清楚此架构的具体意义和实现方式，不过有兴趣的同学可以查看资料进行学习。</p>\n<h5 id=\"我们是否需要进行前后端分离\"><a href=\"#我们是否需要进行前后端分离\" class=\"headerlink\" title=\"我们是否需要进行前后端分离\"></a>我们是否需要进行前后端分离</h5><p>对于我们是否需要进行前后端分离，我觉得应该有很多考量。比如代码的维护，以及分离方式的架构，具体实现方式等等，当我们对此还不熟悉时，可以去尝试，但无论是否分离，尽可能的写出可维护性的代码，尽可能的进行网站优化都是我们应该做的。<br>有机会就去学习和尝试新东西，我们才会在实践中慢慢成长~</p>\n<p>该篇文章参考了下面链接中内容，简单书写了自己的看法。<br>参考链接：<a href=\"http://blog.jobbole.com/65513/\" target=\"_blank\" rel=\"external\">http://blog.jobbole.com/65513/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"什么是前后端分离\"><a href=\"#什么是前后端分离\" class=\"headerlink\" title=\"什么是前后端分离\"></a>什么是前后端分离</h5><p>有人说SPA（single page application）就是前后端分离，是的，不过我觉得SPA只是前后端分离的一种应用场景。<br>或者换句话问：<strong>前后端分离是什么？</strong><br>是什么？是SPA？应该不能这样回答吧。<br>前后端分离应该是前后端职责明确的划分，各司其职。</p>\n<ul>\n<li>前端负责V和C</li>\n<li>后端负责M</li>\n</ul>\n<p>在这里，应该明确划分，后端只负责把数据处理好然后返回给前端，而不需要前端再对数据处理。前端负责数据的展示，以及用户的交互，对于展示的逻辑后端不应再去涉足。更深一点说是架构上应该分离，最好是部署到不同的服务器上。</p>\n<h5 id=\"为什么要前后端分离\"><a href=\"#为什么要前后端分离\" class=\"headerlink\" title=\"为什么要前后端分离\"></a>为什么要前后端分离</h5><p>1, 开发效率<br>  前端开发依赖后端<br>2, 前后端职责不清<br>  前后端代码混杂，没有约束，且维护困难。<br>3, 场景需求<br>  有些项目可能是多端的，后端只写接口会方便各端调用，不需要针对不同端写重复的代码。</p>\n<h5 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ul>\n<li>减轻服务器压力，服务器不需要再渲染页面，对于多端只需提供一套API即可。</li>\n<li>方便开发，前后端人员各司其职，不再被同步事件相互等待而耽误工程的开发。</li>\n<li>完全的前端组件化</li>\n</ul>\n<h5 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ul>\n<li>不利于SEO优化，</li>\n</ul>\n<p>后端只负责业务/数据接口，前端只负责展现/交互逻辑。后端可以对于同一块数据根据不同端的需求不同，根据不同的筛选条件返回不同的数据给客户端</p>\n<p>目前，有些公司在后端（java/php/..）和前端之间加了一层node，用做把数据的规整和请求的转发。本人尚不清楚此架构的具体意义和实现方式，不过有兴趣的同学可以查看资料进行学习。</p>\n<h5 id=\"我们是否需要进行前后端分离\"><a href=\"#我们是否需要进行前后端分离\" class=\"headerlink\" title=\"我们是否需要进行前后端分离\"></a>我们是否需要进行前后端分离</h5><p>对于我们是否需要进行前后端分离，我觉得应该有很多考量。比如代码的维护，以及分离方式的架构，具体实现方式等等，当我们对此还不熟悉时，可以去尝试，但无论是否分离，尽可能的写出可维护性的代码，尽可能的进行网站优化都是我们应该做的。<br>有机会就去学习和尝试新东西，我们才会在实践中慢慢成长~</p>\n<p>该篇文章参考了下面链接中内容，简单书写了自己的看法。<br>参考链接：<a href=\"http://blog.jobbole.com/65513/\" target=\"_blank\" rel=\"external\">http://blog.jobbole.com/65513/</a></p>\n"},{"title":"[故事汇]-因为山在那里","date":"2017-11-21T03:19:20.000Z","_content":"\n“你为什么要爬山？”\n“因为山就在那里。”\n\n这是乔治·马洛里在他爬山的时候被记者问到时的回答。\n\n生活中，我们也常常会被别人各种问到你为什么...，哪有那么多为什么？难道就不能心里有一点原始的冲动，喜欢或者是自由。\n\n如果再被别人问到为什么，刚好你又不想回答时，你可以问他：“你为什么要吃饭？”","source":"_posts/故事汇-你为什么要爬山.md","raw":"---\ntitle: '[故事汇]-因为山在那里'\ndate: 2017-11-21 11:19:20\ntags:\n\t- 故事汇\n---\n\n“你为什么要爬山？”\n“因为山就在那里。”\n\n这是乔治·马洛里在他爬山的时候被记者问到时的回答。\n\n生活中，我们也常常会被别人各种问到你为什么...，哪有那么多为什么？难道就不能心里有一点原始的冲动，喜欢或者是自由。\n\n如果再被别人问到为什么，刚好你又不想回答时，你可以问他：“你为什么要吃饭？”","slug":"故事汇-你为什么要爬山","published":1,"updated":"2018-03-02T09:05:03.795Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w4001suw2c6zi3kg1s","content":"<p>“你为什么要爬山？”<br>“因为山就在那里。”</p>\n<p>这是乔治·马洛里在他爬山的时候被记者问到时的回答。</p>\n<p>生活中，我们也常常会被别人各种问到你为什么…，哪有那么多为什么？难道就不能心里有一点原始的冲动，喜欢或者是自由。</p>\n<p>如果再被别人问到为什么，刚好你又不想回答时，你可以问他：“你为什么要吃饭？”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>“你为什么要爬山？”<br>“因为山就在那里。”</p>\n<p>这是乔治·马洛里在他爬山的时候被记者问到时的回答。</p>\n<p>生活中，我们也常常会被别人各种问到你为什么…，哪有那么多为什么？难道就不能心里有一点原始的冲动，喜欢或者是自由。</p>\n<p>如果再被别人问到为什么，刚好你又不想回答时，你可以问他：“你为什么要吃饭？”</p>\n"},{"title":"单页面的交互方式探索","date":"2017-07-27T06:44:00.000Z","_content":"\n* ajax+js+html(仅有一个页面)\n* ajax+jq+load+html(多个页面)\n\n对于第一种来说，页面中所有的dom节点，基本都是通过js动态生成的。\n二对于第二种而言，可以把不同的内容先分别写到不同的页面上，然后利用load方法加载不同模块的html文件。\n\n\n##### 好处\n* 去掉了页面的频繁刷新，加上优雅的提醒，将会很大提升用户的使用体验。\n* 所有数据都保存在一个全局变量/“次级全局变量”（能被大多数函数访问和修改），没有的页面间跳转传参的麻烦\n* 减轻服务器压力，服务器只需负责数据的计算和输出即可。\n\n\n##### 坏处\n* SEO优化麻烦\n* 浏览器的导航功能无法使用\n\n\n##### 部分问题的解决方式\n1，利用h5的pushState等新属性，修改history和url可以做SEO优化，但当打开页面时，对于不同的url需要做相应判断。(刚好浏览锤子手机网站看到#后面的参数才恍然想起，#后面的参数改变不刷新页面，但可以通过后面的参数判断应该显示哪一模块。当然这个是不利于SEO优化的)\n参考链接：[http://isux.tencent.com/seo-for-single-page-applications.html](http://isux.tencent.com/seo-for-single-page-applications.html)\n参考链接：[http://zhanzhang.baidu.com/college/articleinfo?id=294](http://zhanzhang.baidu.com/college/articleinfo?id=294)\n参考链接：[如何让搜索引擎抓取AJAX内容？](http://www.ruanyifeng.com/blog/2013/07/how_to_make_search_engines_find_ajax_content.html)","source":"_posts/单页面的交互方式探索.md","raw":"---\ntitle: 单页面的交互方式探索\ndate: 2017-07-27 14:44:00\ntags:\n\t- 思考\n---\n\n* ajax+js+html(仅有一个页面)\n* ajax+jq+load+html(多个页面)\n\n对于第一种来说，页面中所有的dom节点，基本都是通过js动态生成的。\n二对于第二种而言，可以把不同的内容先分别写到不同的页面上，然后利用load方法加载不同模块的html文件。\n\n\n##### 好处\n* 去掉了页面的频繁刷新，加上优雅的提醒，将会很大提升用户的使用体验。\n* 所有数据都保存在一个全局变量/“次级全局变量”（能被大多数函数访问和修改），没有的页面间跳转传参的麻烦\n* 减轻服务器压力，服务器只需负责数据的计算和输出即可。\n\n\n##### 坏处\n* SEO优化麻烦\n* 浏览器的导航功能无法使用\n\n\n##### 部分问题的解决方式\n1，利用h5的pushState等新属性，修改history和url可以做SEO优化，但当打开页面时，对于不同的url需要做相应判断。(刚好浏览锤子手机网站看到#后面的参数才恍然想起，#后面的参数改变不刷新页面，但可以通过后面的参数判断应该显示哪一模块。当然这个是不利于SEO优化的)\n参考链接：[http://isux.tencent.com/seo-for-single-page-applications.html](http://isux.tencent.com/seo-for-single-page-applications.html)\n参考链接：[http://zhanzhang.baidu.com/college/articleinfo?id=294](http://zhanzhang.baidu.com/college/articleinfo?id=294)\n参考链接：[如何让搜索引擎抓取AJAX内容？](http://www.ruanyifeng.com/blog/2013/07/how_to_make_search_engines_find_ajax_content.html)","slug":"单页面的交互方式探索","published":1,"updated":"2017-07-27T10:43:43.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w6001uuw2cusx3t8qx","content":"<ul>\n<li>ajax+js+html(仅有一个页面)</li>\n<li>ajax+jq+load+html(多个页面)</li>\n</ul>\n<p>对于第一种来说，页面中所有的dom节点，基本都是通过js动态生成的。<br>二对于第二种而言，可以把不同的内容先分别写到不同的页面上，然后利用load方法加载不同模块的html文件。</p>\n<h5 id=\"好处\"><a href=\"#好处\" class=\"headerlink\" title=\"好处\"></a>好处</h5><ul>\n<li>去掉了页面的频繁刷新，加上优雅的提醒，将会很大提升用户的使用体验。</li>\n<li>所有数据都保存在一个全局变量/“次级全局变量”（能被大多数函数访问和修改），没有的页面间跳转传参的麻烦</li>\n<li>减轻服务器压力，服务器只需负责数据的计算和输出即可。</li>\n</ul>\n<h5 id=\"坏处\"><a href=\"#坏处\" class=\"headerlink\" title=\"坏处\"></a>坏处</h5><ul>\n<li>SEO优化麻烦</li>\n<li>浏览器的导航功能无法使用</li>\n</ul>\n<h5 id=\"部分问题的解决方式\"><a href=\"#部分问题的解决方式\" class=\"headerlink\" title=\"部分问题的解决方式\"></a>部分问题的解决方式</h5><p>1，利用h5的pushState等新属性，修改history和url可以做SEO优化，但当打开页面时，对于不同的url需要做相应判断。(刚好浏览锤子手机网站看到#后面的参数才恍然想起，#后面的参数改变不刷新页面，但可以通过后面的参数判断应该显示哪一模块。当然这个是不利于SEO优化的)<br>参考链接：<a href=\"http://isux.tencent.com/seo-for-single-page-applications.html\" target=\"_blank\" rel=\"external\">http://isux.tencent.com/seo-for-single-page-applications.html</a><br>参考链接：<a href=\"http://zhanzhang.baidu.com/college/articleinfo?id=294\" target=\"_blank\" rel=\"external\">http://zhanzhang.baidu.com/college/articleinfo?id=294</a><br>参考链接：<a href=\"http://www.ruanyifeng.com/blog/2013/07/how_to_make_search_engines_find_ajax_content.html\" target=\"_blank\" rel=\"external\">如何让搜索引擎抓取AJAX内容？</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>ajax+js+html(仅有一个页面)</li>\n<li>ajax+jq+load+html(多个页面)</li>\n</ul>\n<p>对于第一种来说，页面中所有的dom节点，基本都是通过js动态生成的。<br>二对于第二种而言，可以把不同的内容先分别写到不同的页面上，然后利用load方法加载不同模块的html文件。</p>\n<h5 id=\"好处\"><a href=\"#好处\" class=\"headerlink\" title=\"好处\"></a>好处</h5><ul>\n<li>去掉了页面的频繁刷新，加上优雅的提醒，将会很大提升用户的使用体验。</li>\n<li>所有数据都保存在一个全局变量/“次级全局变量”（能被大多数函数访问和修改），没有的页面间跳转传参的麻烦</li>\n<li>减轻服务器压力，服务器只需负责数据的计算和输出即可。</li>\n</ul>\n<h5 id=\"坏处\"><a href=\"#坏处\" class=\"headerlink\" title=\"坏处\"></a>坏处</h5><ul>\n<li>SEO优化麻烦</li>\n<li>浏览器的导航功能无法使用</li>\n</ul>\n<h5 id=\"部分问题的解决方式\"><a href=\"#部分问题的解决方式\" class=\"headerlink\" title=\"部分问题的解决方式\"></a>部分问题的解决方式</h5><p>1，利用h5的pushState等新属性，修改history和url可以做SEO优化，但当打开页面时，对于不同的url需要做相应判断。(刚好浏览锤子手机网站看到#后面的参数才恍然想起，#后面的参数改变不刷新页面，但可以通过后面的参数判断应该显示哪一模块。当然这个是不利于SEO优化的)<br>参考链接：<a href=\"http://isux.tencent.com/seo-for-single-page-applications.html\" target=\"_blank\" rel=\"external\">http://isux.tencent.com/seo-for-single-page-applications.html</a><br>参考链接：<a href=\"http://zhanzhang.baidu.com/college/articleinfo?id=294\" target=\"_blank\" rel=\"external\">http://zhanzhang.baidu.com/college/articleinfo?id=294</a><br>参考链接：<a href=\"http://www.ruanyifeng.com/blog/2013/07/how_to_make_search_engines_find_ajax_content.html\" target=\"_blank\" rel=\"external\">如何让搜索引擎抓取AJAX内容？</a></p>\n"},{"title":"把sublime添加到右键菜单，方便文件右键sublime打开","date":"2017-11-19T15:47:33.000Z","_content":"\n> 最近重新装了系统（目前是win10），又把sublime装了一遍，在写项目时发现文件不支持右键打开，无奈在网上搜了一些教程，学习了一下。并在这里做一下记录，以便日后再次需要时，方便查找。\n\n#### 方法大致有两种：\n\n** 1, 直接修改注册表 **\n\nwin+R打开运行窗口，输入regedit打开注册表；找到HKEY_CLASSES_ROOT > * > shell，新建一个项[Edit with Sublime]（名字随意起），在该项下新建一个字符串值[icon]，修改该值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe,0” ，“,0”前的值为sublime执行文件.exe的路径。\n之后我们需要在该项下面再新建一个项[command]，直接修改其默认值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe %1”即可。\n\n其实如果注册表里HKEY_CLASSES_ROOT > * > shell下面有值的话，你可以参照原有值的方式去添加。\n\n** 第二种方法是把这些流程写成一个文件，运行一下，直接添加到注册表里。我本人并没有去尝试，不过有兴趣的可以尝试一下，关于往注册表中添加命令的教程网上有很多 **","source":"_posts/把sublime添加到右键菜单，方便文件右键sublime打开.md","raw":"---\ntitle: 把sublime添加到右键菜单，方便文件右键sublime打开\ndate: 2017-11-19 23:47:33\ntags:\n\t- Tips\n---\n\n> 最近重新装了系统（目前是win10），又把sublime装了一遍，在写项目时发现文件不支持右键打开，无奈在网上搜了一些教程，学习了一下。并在这里做一下记录，以便日后再次需要时，方便查找。\n\n#### 方法大致有两种：\n\n** 1, 直接修改注册表 **\n\nwin+R打开运行窗口，输入regedit打开注册表；找到HKEY_CLASSES_ROOT > * > shell，新建一个项[Edit with Sublime]（名字随意起），在该项下新建一个字符串值[icon]，修改该值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe,0” ，“,0”前的值为sublime执行文件.exe的路径。\n之后我们需要在该项下面再新建一个项[command]，直接修改其默认值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe %1”即可。\n\n其实如果注册表里HKEY_CLASSES_ROOT > * > shell下面有值的话，你可以参照原有值的方式去添加。\n\n** 第二种方法是把这些流程写成一个文件，运行一下，直接添加到注册表里。我本人并没有去尝试，不过有兴趣的可以尝试一下，关于往注册表中添加命令的教程网上有很多 **","slug":"把sublime添加到右键菜单，方便文件右键sublime打开","published":1,"updated":"2018-03-02T09:05:03.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w8001xuw2c0hkh8asg","content":"<blockquote>\n<p>最近重新装了系统（目前是win10），又把sublime装了一遍，在写项目时发现文件不支持右键打开，无奈在网上搜了一些教程，学习了一下。并在这里做一下记录，以便日后再次需要时，方便查找。</p>\n</blockquote>\n<h4 id=\"方法大致有两种：\"><a href=\"#方法大致有两种：\" class=\"headerlink\" title=\"方法大致有两种：\"></a>方法大致有两种：</h4><p><strong> 1, 直接修改注册表 </strong></p>\n<p>win+R打开运行窗口，输入regedit打开注册表；找到HKEY_CLASSES_ROOT &gt; * &gt; shell，新建一个项[Edit with Sublime]（名字随意起），在该项下新建一个字符串值[icon]，修改该值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe,0” ，“,0”前的值为sublime执行文件.exe的路径。<br>之后我们需要在该项下面再新建一个项[command]，直接修改其默认值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe %1”即可。</p>\n<p>其实如果注册表里HKEY_CLASSES_ROOT &gt; * &gt; shell下面有值的话，你可以参照原有值的方式去添加。</p>\n<p><strong> 第二种方法是把这些流程写成一个文件，运行一下，直接添加到注册表里。我本人并没有去尝试，不过有兴趣的可以尝试一下，关于往注册表中添加命令的教程网上有很多 </strong></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>最近重新装了系统（目前是win10），又把sublime装了一遍，在写项目时发现文件不支持右键打开，无奈在网上搜了一些教程，学习了一下。并在这里做一下记录，以便日后再次需要时，方便查找。</p>\n</blockquote>\n<h4 id=\"方法大致有两种：\"><a href=\"#方法大致有两种：\" class=\"headerlink\" title=\"方法大致有两种：\"></a>方法大致有两种：</h4><p><strong> 1, 直接修改注册表 </strong></p>\n<p>win+R打开运行窗口，输入regedit打开注册表；找到HKEY_CLASSES_ROOT &gt; * &gt; shell，新建一个项[Edit with Sublime]（名字随意起），在该项下新建一个字符串值[icon]，修改该值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe,0” ，“,0”前的值为sublime执行文件.exe的路径。<br>之后我们需要在该项下面再新建一个项[command]，直接修改其默认值的数据为“D:\\Program Files\\Sublime Text Build 3143\\sublime_text.exe %1”即可。</p>\n<p>其实如果注册表里HKEY_CLASSES_ROOT &gt; * &gt; shell下面有值的话，你可以参照原有值的方式去添加。</p>\n<p><strong> 第二种方法是把这些流程写成一个文件，运行一下，直接添加到注册表里。我本人并没有去尝试，不过有兴趣的可以尝试一下，关于往注册表中添加命令的教程网上有很多 </strong></p>\n"},{"title":"[基础] - JS之sort","date":"2018-05-07T15:19:25.000Z","_content":"\n> 虽然干前端很久了，但其实js的基础好多还都没有掌握。呢，在sort上卡住了...\n\n起因：今天写代码，需要用到排序，排数组对象的那种。\n\n就用了js的sort方法，我知道不传参数就是按从小到大排，可我以为传一个比较函数comparer(a,b)\n如果return a>b，就是从小到大排；否则就是从大小排。（ 很蠢吧~~ ）\n\n其实是：\n```js\narr.sort(comparer)\n```\ncomarer 可选。用来指定按某种顺序进行排列的函数。\n如果省略，元素按照转换为的字符串的各个字符的<u>Unicode位点</u>进行排序。\n如果没有省略，则会根据函数返回的值进行排序：\n大于0，则按从小到大排序；\n小于0，则按从大到小排序；\n等于0，不处理。\n```js\narr = [{a:2,b:2},{a:2,b:1},{a:1,b:2}]\n\narr.sort(function (x,y) {\n  return x.a-y.a\n})\n// 排序后的arr，后面两项由于比较时相等，便未做处理\n// [\n//  {a: 1, b: 2},\n//  {a: 2, b: 2},\n//  {a: 2, b: 1}\n// ]\n```\n\n并且，sort方法有返回值，返回值为被重新排序后的原数组。\n\n**注意：**\n如果没有使用comparer，对数字排序时需要注意，有可能会出现看似错误的排序：\n```js\narr = [1,3,10,2]\narr.sort()\n// [1, 10, 2, 3]\n```\n之所以会出现上面的情况，因为在比较时数字被转换成了字符串，而字符串‘1’的位置在‘2’，‘3’的前面\n\n所以，在用sort函数时，可以加一个comparer函数：\n```js\nfunction comparer(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n```\n如果是对数字比较，可以用下面简便的方式：\n```js\nfunction comparer(a, b) {\n  return a - b;  // 如果想要大的在前，可以return b - a;\n}\n```\n\n对象可以按照某个属性排序：(此实例摘自MDN)\n```js\nvar items = [\n  { name: 'Edward', value: 21 },\n  { name: 'Sharpe', value: 37 },\n  { name: 'And', value: 45 },\n  { name: 'The', value: -12 },\n  { name: 'Magnetic' },\n  { name: 'Zeros', value: 37 }\n];\n\n// sort by value\nitems.sort(function (a, b) {\n  return (a.value - b.value)\n});\n\n// sort by name\nitems.sort(function(a, b) {\n  var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n  var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  \n// names must be equal\n\n  return 0;\n});\n```\n\n在MDN上有提到，如果comparer函数的比较复杂且元素较多的时候，可以利用映射改善排序。\n也就是说comparer的两个参数a, b要进行一系列的运算后进行比较时，可能会导致很高的负载。其思路时，先对要比较的两个值进行处理，并做好映射关系。然后对处理后的值直接去比较，再跟据映射关系得到一个新的数组。实例如下：\n```js\n// 需要被排序的数组\nvar list = ['Delta', 'alpha', 'CHARLIE', 'bravo'];\n\n// 对需要排序的数字和位置的临时存储\nvar mapped = list.map(function(el, i) {\n  return { index: i, value: el.toLowerCase() };\n})\n\n// 按照多个值排序数组\nmapped.sort(function(a, b) {\n  return +(a.value > b.value) || +(a.value === b.value) - 1;\n});\n\n// 根据索引得到排序的结果\nvar result = mapped.map(function(el){\n  return list[el.index];\n});\n```\n\n这种说法，我没有去验证。不过我验证了元素较多的情况，我用了12万条数据，正常的比较耗时为75ms左右；用上面的方法，耗时为200ms左右。之所以这种方法更耗时，原因在于排序前后两次的map反而增加了处理时间，而中的sort方法并没有提高。\n\n所以，上面的方法是否真的可取，还是留给你自己去验证吧。","source":"_posts/基础-JS之sort.md","raw":"---\ntitle: '[基础] - JS之sort'\ndate: 2018-05-07 23:19:25\ntags: [js,笔记]\n---\n\n> 虽然干前端很久了，但其实js的基础好多还都没有掌握。呢，在sort上卡住了...\n\n起因：今天写代码，需要用到排序，排数组对象的那种。\n\n就用了js的sort方法，我知道不传参数就是按从小到大排，可我以为传一个比较函数comparer(a,b)\n如果return a>b，就是从小到大排；否则就是从大小排。（ 很蠢吧~~ ）\n\n其实是：\n```js\narr.sort(comparer)\n```\ncomarer 可选。用来指定按某种顺序进行排列的函数。\n如果省略，元素按照转换为的字符串的各个字符的<u>Unicode位点</u>进行排序。\n如果没有省略，则会根据函数返回的值进行排序：\n大于0，则按从小到大排序；\n小于0，则按从大到小排序；\n等于0，不处理。\n```js\narr = [{a:2,b:2},{a:2,b:1},{a:1,b:2}]\n\narr.sort(function (x,y) {\n  return x.a-y.a\n})\n// 排序后的arr，后面两项由于比较时相等，便未做处理\n// [\n//  {a: 1, b: 2},\n//  {a: 2, b: 2},\n//  {a: 2, b: 1}\n// ]\n```\n\n并且，sort方法有返回值，返回值为被重新排序后的原数组。\n\n**注意：**\n如果没有使用comparer，对数字排序时需要注意，有可能会出现看似错误的排序：\n```js\narr = [1,3,10,2]\narr.sort()\n// [1, 10, 2, 3]\n```\n之所以会出现上面的情况，因为在比较时数字被转换成了字符串，而字符串‘1’的位置在‘2’，‘3’的前面\n\n所以，在用sort函数时，可以加一个comparer函数：\n```js\nfunction comparer(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n```\n如果是对数字比较，可以用下面简便的方式：\n```js\nfunction comparer(a, b) {\n  return a - b;  // 如果想要大的在前，可以return b - a;\n}\n```\n\n对象可以按照某个属性排序：(此实例摘自MDN)\n```js\nvar items = [\n  { name: 'Edward', value: 21 },\n  { name: 'Sharpe', value: 37 },\n  { name: 'And', value: 45 },\n  { name: 'The', value: -12 },\n  { name: 'Magnetic' },\n  { name: 'Zeros', value: 37 }\n];\n\n// sort by value\nitems.sort(function (a, b) {\n  return (a.value - b.value)\n});\n\n// sort by name\nitems.sort(function(a, b) {\n  var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n  var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  \n// names must be equal\n\n  return 0;\n});\n```\n\n在MDN上有提到，如果comparer函数的比较复杂且元素较多的时候，可以利用映射改善排序。\n也就是说comparer的两个参数a, b要进行一系列的运算后进行比较时，可能会导致很高的负载。其思路时，先对要比较的两个值进行处理，并做好映射关系。然后对处理后的值直接去比较，再跟据映射关系得到一个新的数组。实例如下：\n```js\n// 需要被排序的数组\nvar list = ['Delta', 'alpha', 'CHARLIE', 'bravo'];\n\n// 对需要排序的数字和位置的临时存储\nvar mapped = list.map(function(el, i) {\n  return { index: i, value: el.toLowerCase() };\n})\n\n// 按照多个值排序数组\nmapped.sort(function(a, b) {\n  return +(a.value > b.value) || +(a.value === b.value) - 1;\n});\n\n// 根据索引得到排序的结果\nvar result = mapped.map(function(el){\n  return list[el.index];\n});\n```\n\n这种说法，我没有去验证。不过我验证了元素较多的情况，我用了12万条数据，正常的比较耗时为75ms左右；用上面的方法，耗时为200ms左右。之所以这种方法更耗时，原因在于排序前后两次的map反而增加了处理时间，而中的sort方法并没有提高。\n\n所以，上面的方法是否真的可取，还是留给你自己去验证吧。","slug":"基础-JS之sort","published":1,"updated":"2018-05-08T15:17:03.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069w9001zuw2cxvxfd0lr","content":"<blockquote>\n<p>虽然干前端很久了，但其实js的基础好多还都没有掌握。呢，在sort上卡住了…</p>\n</blockquote>\n<p>起因：今天写代码，需要用到排序，排数组对象的那种。</p>\n<p>就用了js的sort方法，我知道不传参数就是按从小到大排，可我以为传一个比较函数comparer(a,b)<br>如果return a&gt;b，就是从小到大排；否则就是从大小排。（ 很蠢吧~~ ）</p>\n<p>其实是：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr.sort(comparer)</div></pre></td></tr></table></figure></p>\n<p>comarer 可选。用来指定按某种顺序进行排列的函数。<br>如果省略，元素按照转换为的字符串的各个字符的<u>Unicode位点</u>进行排序。<br>如果没有省略，则会根据函数返回的值进行排序：<br>大于0，则按从小到大排序；<br>小于0，则按从大到小排序；<br>等于0，不处理。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr = [&#123;<span class=\"attr\">a</span>:<span class=\"number\">2</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"number\">2</span>,<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;]</div><div class=\"line\"></div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x,y</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> x.a-y.a</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 排序后的arr，后面两项由于比较时相等，便未做处理</span></div><div class=\"line\"><span class=\"comment\">// [</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 1, b: 2&#125;,</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 2, b: 2&#125;,</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 2, b: 1&#125;</span></div><div class=\"line\"><span class=\"comment\">// ]</span></div></pre></td></tr></table></figure></p>\n<p>并且，sort方法有返回值，返回值为被重新排序后的原数组。</p>\n<p><strong>注意：</strong><br>如果没有使用comparer，对数字排序时需要注意，有可能会出现看似错误的排序：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>]</div><div class=\"line\">arr.sort()</div><div class=\"line\"><span class=\"comment\">// [1, 10, 2, 3]</span></div></pre></td></tr></table></figure></p>\n<p>之所以会出现上面的情况，因为在比较时数字被转换成了字符串，而字符串‘1’的位置在‘2’，‘3’的前面</p>\n<p>所以，在用sort函数时，可以加一个comparer函数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">comparer</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (a &lt; b) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">if</span> (a &gt; b) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果是对数字比较，可以用下面简便的方式：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">comparer</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> a - b;  <span class=\"comment\">// 如果想要大的在前，可以return b - a;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>对象可以按照某个属性排序：(此实例摘自MDN)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> items = [</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Edward'</span>, <span class=\"attr\">value</span>: <span class=\"number\">21</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Sharpe'</span>, <span class=\"attr\">value</span>: <span class=\"number\">37</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'And'</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'The'</span>, <span class=\"attr\">value</span>: <span class=\"number\">-12</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Magnetic'</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Zeros'</span>, <span class=\"attr\">value</span>: <span class=\"number\">37</span> &#125;</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// sort by value</span></div><div class=\"line\">items.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> (a.value - b.value)</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// sort by name</span></div><div class=\"line\">items.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> nameA = a.name.toUpperCase(); <span class=\"comment\">// ignore upper and lowercase</span></div><div class=\"line\">  <span class=\"keyword\">var</span> nameB = b.name.toUpperCase(); <span class=\"comment\">// ignore upper and lowercase</span></div><div class=\"line\">  <span class=\"keyword\">if</span> (nameA &lt; nameB) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">if</span> (nameA &gt; nameB) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">// names must be equal</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>在MDN上有提到，如果comparer函数的比较复杂且元素较多的时候，可以利用映射改善排序。<br>也就是说comparer的两个参数a, b要进行一系列的运算后进行比较时，可能会导致很高的负载。其思路时，先对要比较的两个值进行处理，并做好映射关系。然后对处理后的值直接去比较，再跟据映射关系得到一个新的数组。实例如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 需要被排序的数组</span></div><div class=\"line\"><span class=\"keyword\">var</span> list = [<span class=\"string\">'Delta'</span>, <span class=\"string\">'alpha'</span>, <span class=\"string\">'CHARLIE'</span>, <span class=\"string\">'bravo'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 对需要排序的数字和位置的临时存储</span></div><div class=\"line\"><span class=\"keyword\">var</span> mapped = list.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el, i</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">index</span>: i, <span class=\"attr\">value</span>: el.toLowerCase() &#125;;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 按照多个值排序数组</span></div><div class=\"line\">mapped.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> +(a.value &gt; b.value) || +(a.value === b.value) - <span class=\"number\">1</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 根据索引得到排序的结果</span></div><div class=\"line\"><span class=\"keyword\">var</span> result = mapped.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> list[el.index];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>这种说法，我没有去验证。不过我验证了元素较多的情况，我用了12万条数据，正常的比较耗时为75ms左右；用上面的方法，耗时为200ms左右。之所以这种方法更耗时，原因在于排序前后两次的map反而增加了处理时间，而中的sort方法并没有提高。</p>\n<p>所以，上面的方法是否真的可取，还是留给你自己去验证吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>虽然干前端很久了，但其实js的基础好多还都没有掌握。呢，在sort上卡住了…</p>\n</blockquote>\n<p>起因：今天写代码，需要用到排序，排数组对象的那种。</p>\n<p>就用了js的sort方法，我知道不传参数就是按从小到大排，可我以为传一个比较函数comparer(a,b)<br>如果return a&gt;b，就是从小到大排；否则就是从大小排。（ 很蠢吧~~ ）</p>\n<p>其实是：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr.sort(comparer)</div></pre></td></tr></table></figure></p>\n<p>comarer 可选。用来指定按某种顺序进行排列的函数。<br>如果省略，元素按照转换为的字符串的各个字符的<u>Unicode位点</u>进行排序。<br>如果没有省略，则会根据函数返回的值进行排序：<br>大于0，则按从小到大排序；<br>小于0，则按从大到小排序；<br>等于0，不处理。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr = [&#123;<span class=\"attr\">a</span>:<span class=\"number\">2</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"number\">2</span>,<span class=\"attr\">b</span>:<span class=\"number\">1</span>&#125;,&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;]</div><div class=\"line\"></div><div class=\"line\">arr.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x,y</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> x.a-y.a</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">// 排序后的arr，后面两项由于比较时相等，便未做处理</span></div><div class=\"line\"><span class=\"comment\">// [</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 1, b: 2&#125;,</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 2, b: 2&#125;,</span></div><div class=\"line\"><span class=\"comment\">//  &#123;a: 2, b: 1&#125;</span></div><div class=\"line\"><span class=\"comment\">// ]</span></div></pre></td></tr></table></figure></p>\n<p>并且，sort方法有返回值，返回值为被重新排序后的原数组。</p>\n<p><strong>注意：</strong><br>如果没有使用comparer，对数字排序时需要注意，有可能会出现看似错误的排序：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">2</span>]</div><div class=\"line\">arr.sort()</div><div class=\"line\"><span class=\"comment\">// [1, 10, 2, 3]</span></div></pre></td></tr></table></figure></p>\n<p>之所以会出现上面的情况，因为在比较时数字被转换成了字符串，而字符串‘1’的位置在‘2’，‘3’的前面</p>\n<p>所以，在用sort函数时，可以加一个comparer函数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">comparer</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span> (a &lt; b) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">if</span> (a &gt; b) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果是对数字比较，可以用下面简便的方式：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">comparer</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> a - b;  <span class=\"comment\">// 如果想要大的在前，可以return b - a;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>对象可以按照某个属性排序：(此实例摘自MDN)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> items = [</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Edward'</span>, <span class=\"attr\">value</span>: <span class=\"number\">21</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Sharpe'</span>, <span class=\"attr\">value</span>: <span class=\"number\">37</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'And'</span>, <span class=\"attr\">value</span>: <span class=\"number\">45</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'The'</span>, <span class=\"attr\">value</span>: <span class=\"number\">-12</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Magnetic'</span> &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">'Zeros'</span>, <span class=\"attr\">value</span>: <span class=\"number\">37</span> &#125;</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// sort by value</span></div><div class=\"line\">items.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> (a.value - b.value)</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// sort by name</span></div><div class=\"line\">items.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> nameA = a.name.toUpperCase(); <span class=\"comment\">// ignore upper and lowercase</span></div><div class=\"line\">  <span class=\"keyword\">var</span> nameB = b.name.toUpperCase(); <span class=\"comment\">// ignore upper and lowercase</span></div><div class=\"line\">  <span class=\"keyword\">if</span> (nameA &lt; nameB) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">if</span> (nameA &gt; nameB) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  </div><div class=\"line\"><span class=\"comment\">// names must be equal</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>在MDN上有提到，如果comparer函数的比较复杂且元素较多的时候，可以利用映射改善排序。<br>也就是说comparer的两个参数a, b要进行一系列的运算后进行比较时，可能会导致很高的负载。其思路时，先对要比较的两个值进行处理，并做好映射关系。然后对处理后的值直接去比较，再跟据映射关系得到一个新的数组。实例如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 需要被排序的数组</span></div><div class=\"line\"><span class=\"keyword\">var</span> list = [<span class=\"string\">'Delta'</span>, <span class=\"string\">'alpha'</span>, <span class=\"string\">'CHARLIE'</span>, <span class=\"string\">'bravo'</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 对需要排序的数字和位置的临时存储</span></div><div class=\"line\"><span class=\"keyword\">var</span> mapped = list.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el, i</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">index</span>: i, <span class=\"attr\">value</span>: el.toLowerCase() &#125;;</div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 按照多个值排序数组</span></div><div class=\"line\">mapped.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> +(a.value &gt; b.value) || +(a.value === b.value) - <span class=\"number\">1</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 根据索引得到排序的结果</span></div><div class=\"line\"><span class=\"keyword\">var</span> result = mapped.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> list[el.index];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>这种说法，我没有去验证。不过我验证了元素较多的情况，我用了12万条数据，正常的比较耗时为75ms左右；用上面的方法，耗时为200ms左右。之所以这种方法更耗时，原因在于排序前后两次的map反而增加了处理时间，而中的sort方法并没有提高。</p>\n<p>所以，上面的方法是否真的可取，还是留给你自己去验证吧。</p>\n"},{"title":"走慢一点，等一等灵魂","date":"2017-07-03T00:49:58.000Z","_content":"\n不知不觉，毕业已经两个年头了。这两年里，自己进步不少，看招聘信息，发现3年是个坎。而我正在坎的这边，但已经开始飘飘然了~\n<!-- 其实3年不只是工龄上的坎，也是能力上的坎。 -->\n前段日子，自己一心想着可以找份更好的工作，觉得自己在这里是埋没了才能，但去面试了几家才发现，我在自己的舒适区待的太久了，以至于都忘记了努力。\n看着身边的小弟弟、小妹妹们，就想起当初的自己，在难以忍受的环境里学习、成长、努力，却不去抱怨，而现在能力比之前好点，待遇也不错了，反而觉得不能接受再次一点的待遇和不公。有句话说“如果忍受不了现在的境遇，就去改变它。”，而我现在即改变不了，却也不甘心忍受，不甘心忍受，却也没能离开，想想多少有点讽刺。\n其实，现在的境遇还是挺好的，只是我变了。可能是一路走来，太顺当~\n所以，告诫自己：走慢一点，等一等灵魂。","source":"_posts/走慢一点，等一等灵魂.md","raw":"---\ntitle: 走慢一点，等一等灵魂\ndate: 2017-07-03 08:49:58\ntags:\n\t- 思考\n---\n\n不知不觉，毕业已经两个年头了。这两年里，自己进步不少，看招聘信息，发现3年是个坎。而我正在坎的这边，但已经开始飘飘然了~\n<!-- 其实3年不只是工龄上的坎，也是能力上的坎。 -->\n前段日子，自己一心想着可以找份更好的工作，觉得自己在这里是埋没了才能，但去面试了几家才发现，我在自己的舒适区待的太久了，以至于都忘记了努力。\n看着身边的小弟弟、小妹妹们，就想起当初的自己，在难以忍受的环境里学习、成长、努力，却不去抱怨，而现在能力比之前好点，待遇也不错了，反而觉得不能接受再次一点的待遇和不公。有句话说“如果忍受不了现在的境遇，就去改变它。”，而我现在即改变不了，却也不甘心忍受，不甘心忍受，却也没能离开，想想多少有点讽刺。\n其实，现在的境遇还是挺好的，只是我变了。可能是一路走来，太顺当~\n所以，告诫自己：走慢一点，等一等灵魂。","slug":"走慢一点，等一等灵魂","published":1,"updated":"2017-07-27T10:43:46.813Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069wa0022uw2cltrq4e8r","content":"<p>不知不觉，毕业已经两个年头了。这两年里，自己进步不少，看招聘信息，发现3年是个坎。而我正在坎的这边，但已经开始飘飘然了~<br><!-- 其实3年不只是工龄上的坎，也是能力上的坎。 --><br>前段日子，自己一心想着可以找份更好的工作，觉得自己在这里是埋没了才能，但去面试了几家才发现，我在自己的舒适区待的太久了，以至于都忘记了努力。<br>看着身边的小弟弟、小妹妹们，就想起当初的自己，在难以忍受的环境里学习、成长、努力，却不去抱怨，而现在能力比之前好点，待遇也不错了，反而觉得不能接受再次一点的待遇和不公。有句话说“如果忍受不了现在的境遇，就去改变它。”，而我现在即改变不了，却也不甘心忍受，不甘心忍受，却也没能离开，想想多少有点讽刺。<br>其实，现在的境遇还是挺好的，只是我变了。可能是一路走来，太顺当~<br>所以，告诫自己：走慢一点，等一等灵魂。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>不知不觉，毕业已经两个年头了。这两年里，自己进步不少，看招聘信息，发现3年是个坎。而我正在坎的这边，但已经开始飘飘然了~<br><!-- 其实3年不只是工龄上的坎，也是能力上的坎。 --><br>前段日子，自己一心想着可以找份更好的工作，觉得自己在这里是埋没了才能，但去面试了几家才发现，我在自己的舒适区待的太久了，以至于都忘记了努力。<br>看着身边的小弟弟、小妹妹们，就想起当初的自己，在难以忍受的环境里学习、成长、努力，却不去抱怨，而现在能力比之前好点，待遇也不错了，反而觉得不能接受再次一点的待遇和不公。有句话说“如果忍受不了现在的境遇，就去改变它。”，而我现在即改变不了，却也不甘心忍受，不甘心忍受，却也没能离开，想想多少有点讽刺。<br>其实，现在的境遇还是挺好的，只是我变了。可能是一路走来，太顺当~<br>所以，告诫自己：走慢一点，等一等灵魂。</p>\n"},{"title":"认真学习AMD和CMD","date":"2018-04-23T05:46:26.000Z","_content":"\n> 一直都觉得AMD和CMD是很厉害的东西，想学习来着，却一直没认认真真的学习过，今天就好好的学习一下。做个记录...\n\n\n先摘写两句话：\nAMD 是 RequireJS 在推广过程中对模块定义的规范化产出。\nCMD 是 SeaJS 在推广过程中对模块定义的规范化产出。\n\n\n那它们是来干嘛的呢？\n\n这个我们可以简单聊一下前端的开发模式：\n对于一个小的项目而言：可能一两个人就够了，而前端的开发文件也不多。\n但是当一个项目足够大的时候：需要多个人维护和开发，并且有很多模块，如果还是按照上面的开发模式，那将是一场灾难。那么就需要每个人负责一块或者多块内容，也就需要所谓的“模块化”了。\n\n**简单的模块：**\n```js\nfunction fn () {\n  var name = 'fn';\n  var say = function () {\n    console.log('hello ' + name);\n  }\n  // ...\n}\n\nfn.say();\n\n需要注意的是：这里fn的name是可以被修改的。\n\n```\n\n**立即执行函数：**\n```js\nvar m = (function () {\n  var name = 'fn';\n  var say = function () {\n    console.log('hello ' + name);\n  };\n  return {say: say};\n  //...\n})();\n\nm.say();\n\n这里的name是不能被修改的。\n\n```\n\n然而，这样还是会有问题的。\n当小A在一个文件中定义的一个全局的sayHello，而小B在另一个文件中也定义了一个全局的sayHello，那就会有冲突了。\n\n为了避免：\n* 命名冲突\n* 全局变量冗杂\n* 依赖关系的复杂性\n* 便于开发等..\n\n我们就需要有一种能满足上面的要求的规范和方法。\n\n**CommonJS**\n2009年，美国程序员Ryan Dahl创造了node.js项目，将javascript语言用于服务器端编程。而这也标志着Javascript模块化编程的诞生。\n大牛云集的CommonJs社区发力，制定了Modules/1.0（http://wiki.commonjs.org/wiki/Modules/1.0）规范：\n1. 模块的标识应遵循的规则（书写规范）\n2. 定义全局函数require，通过传入模块标识来引入其他模块，执行的结果即为别的模块暴漏出来的API\n3. 如果被require函数引入的模块中也包含依赖，那么依次加载这些依赖\n4. 如果引入模块失败，那么require函数应该报一个异常\n5. 模块通过变量exports来向往暴漏API，exports只能是一个对象，暴漏的API须作为此对象的属性。\n\n此规范一出，立刻产生了良好的效果，由于其简单而直接，在nodejs中，这种模块化方案立刻被推广开了。\n\n示例如下：\n```js\n// a.js\nexports.add = function (x, y) {\n  return x + y;\n}\n```\n```js\n// b.js\nvar add = require('a').add;\n\nadd(3, 2); // 5\n```\n\n**CommonJS规范：**\n+ 每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。\n+ 模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。\n\n由于CommonJS是同步的，所以想要调用模块里的方法，就必须先加载模块。这在服务端是没有问题的，然而在浏览器却行不通。由于浏览器加载资源时是异步加载的，又不能保证网络的稳定性，所以传统的CommonJS模块在浏览器环境中无法正常加载。\n\n怎么办？找方法：\n1，开发一个服务端组件，对代码进行静态分析，将模块和它的依赖列表一起返回给客户端。当然这实现起来需要一定的技术方案，在此不做探讨。\n2，定义一套规范，用一个标准去约束开发，利用依赖列表和回调函数达到“异步模块定义”，这就是**AMD规范**。\n\nAMD也采用require()语句加载模块，但是不同于CommonJS，它要求两个参数：\n```js\nrequire([module], callback);\n```\n第一个参数[module]，是一个数组，里面的成员就是要加载的模块；第二个参数callback，则是加载成功之后的回调函数。\n上面的b.js改成AMD形式，就是下面这样：\n```js\nrequire(['a'], function (mod) {\n  mod.add(3, 2)\n})\n```\n目前，只有require.js实现了AMD规范。更多关于[require.js](http://requirejs.org/)可以参考官网。\n\n接下来聊一聊CMD是什么：\n\n**CMD** 是 sea.js 在推广过程中对模块定义的规范化产出。\n\nCMD规范：一个模块就是一个文件。\n书写格式如下：\n```js\ndefine(factory);\n```\ndefine 是一个全局函数，用来定义模块。\ndefine 接受 factory 参数，factory 可以是一个函数，也可以是一个对象或字符串。\nfactory 为对象、字符串时，表示模块的接口就是该对象、字符串。\nfactory 为函数时，表示是模块的构造方法。执行该构造方法，可以得到模块向外提供的接口。factory 方法在执行时，默认会传入三个参数：require、exports 和 module：\n```js\ndefine(function(require, exports, module) {\n  // 模块代码\n});\n```\nAMD和CMD的区别：\nAMD是前置依赖，CMD是就近依赖。\n\n至于那种方式更好，在此不做比较和分析，因为这两种技术都将过时，但还是可以去学习和借鉴的。技术在推动世界的进步，善于利用，也是一种技能。","source":"_posts/认真学习AMD和CMD.md","raw":"---\ntitle: 认真学习AMD和CMD\ndate: 2018-04-23 13:46:26\ntags:\n  - js\n---\n\n> 一直都觉得AMD和CMD是很厉害的东西，想学习来着，却一直没认认真真的学习过，今天就好好的学习一下。做个记录...\n\n\n先摘写两句话：\nAMD 是 RequireJS 在推广过程中对模块定义的规范化产出。\nCMD 是 SeaJS 在推广过程中对模块定义的规范化产出。\n\n\n那它们是来干嘛的呢？\n\n这个我们可以简单聊一下前端的开发模式：\n对于一个小的项目而言：可能一两个人就够了，而前端的开发文件也不多。\n但是当一个项目足够大的时候：需要多个人维护和开发，并且有很多模块，如果还是按照上面的开发模式，那将是一场灾难。那么就需要每个人负责一块或者多块内容，也就需要所谓的“模块化”了。\n\n**简单的模块：**\n```js\nfunction fn () {\n  var name = 'fn';\n  var say = function () {\n    console.log('hello ' + name);\n  }\n  // ...\n}\n\nfn.say();\n\n需要注意的是：这里fn的name是可以被修改的。\n\n```\n\n**立即执行函数：**\n```js\nvar m = (function () {\n  var name = 'fn';\n  var say = function () {\n    console.log('hello ' + name);\n  };\n  return {say: say};\n  //...\n})();\n\nm.say();\n\n这里的name是不能被修改的。\n\n```\n\n然而，这样还是会有问题的。\n当小A在一个文件中定义的一个全局的sayHello，而小B在另一个文件中也定义了一个全局的sayHello，那就会有冲突了。\n\n为了避免：\n* 命名冲突\n* 全局变量冗杂\n* 依赖关系的复杂性\n* 便于开发等..\n\n我们就需要有一种能满足上面的要求的规范和方法。\n\n**CommonJS**\n2009年，美国程序员Ryan Dahl创造了node.js项目，将javascript语言用于服务器端编程。而这也标志着Javascript模块化编程的诞生。\n大牛云集的CommonJs社区发力，制定了Modules/1.0（http://wiki.commonjs.org/wiki/Modules/1.0）规范：\n1. 模块的标识应遵循的规则（书写规范）\n2. 定义全局函数require，通过传入模块标识来引入其他模块，执行的结果即为别的模块暴漏出来的API\n3. 如果被require函数引入的模块中也包含依赖，那么依次加载这些依赖\n4. 如果引入模块失败，那么require函数应该报一个异常\n5. 模块通过变量exports来向往暴漏API，exports只能是一个对象，暴漏的API须作为此对象的属性。\n\n此规范一出，立刻产生了良好的效果，由于其简单而直接，在nodejs中，这种模块化方案立刻被推广开了。\n\n示例如下：\n```js\n// a.js\nexports.add = function (x, y) {\n  return x + y;\n}\n```\n```js\n// b.js\nvar add = require('a').add;\n\nadd(3, 2); // 5\n```\n\n**CommonJS规范：**\n+ 每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。\n+ 模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。\n\n由于CommonJS是同步的，所以想要调用模块里的方法，就必须先加载模块。这在服务端是没有问题的，然而在浏览器却行不通。由于浏览器加载资源时是异步加载的，又不能保证网络的稳定性，所以传统的CommonJS模块在浏览器环境中无法正常加载。\n\n怎么办？找方法：\n1，开发一个服务端组件，对代码进行静态分析，将模块和它的依赖列表一起返回给客户端。当然这实现起来需要一定的技术方案，在此不做探讨。\n2，定义一套规范，用一个标准去约束开发，利用依赖列表和回调函数达到“异步模块定义”，这就是**AMD规范**。\n\nAMD也采用require()语句加载模块，但是不同于CommonJS，它要求两个参数：\n```js\nrequire([module], callback);\n```\n第一个参数[module]，是一个数组，里面的成员就是要加载的模块；第二个参数callback，则是加载成功之后的回调函数。\n上面的b.js改成AMD形式，就是下面这样：\n```js\nrequire(['a'], function (mod) {\n  mod.add(3, 2)\n})\n```\n目前，只有require.js实现了AMD规范。更多关于[require.js](http://requirejs.org/)可以参考官网。\n\n接下来聊一聊CMD是什么：\n\n**CMD** 是 sea.js 在推广过程中对模块定义的规范化产出。\n\nCMD规范：一个模块就是一个文件。\n书写格式如下：\n```js\ndefine(factory);\n```\ndefine 是一个全局函数，用来定义模块。\ndefine 接受 factory 参数，factory 可以是一个函数，也可以是一个对象或字符串。\nfactory 为对象、字符串时，表示模块的接口就是该对象、字符串。\nfactory 为函数时，表示是模块的构造方法。执行该构造方法，可以得到模块向外提供的接口。factory 方法在执行时，默认会传入三个参数：require、exports 和 module：\n```js\ndefine(function(require, exports, module) {\n  // 模块代码\n});\n```\nAMD和CMD的区别：\nAMD是前置依赖，CMD是就近依赖。\n\n至于那种方式更好，在此不做比较和分析，因为这两种技术都将过时，但还是可以去学习和借鉴的。技术在推动世界的进步，善于利用，也是一种技能。","slug":"认真学习AMD和CMD","published":1,"updated":"2018-05-03T10:20:29.482Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjh2069wb0024uw2crhp7ie7z","content":"<blockquote>\n<p>一直都觉得AMD和CMD是很厉害的东西，想学习来着，却一直没认认真真的学习过，今天就好好的学习一下。做个记录…</p>\n</blockquote>\n<p>先摘写两句话：<br>AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。<br>CMD 是 SeaJS 在推广过程中对模块定义的规范化产出。</p>\n<p>那它们是来干嘛的呢？</p>\n<p>这个我们可以简单聊一下前端的开发模式：<br>对于一个小的项目而言：可能一两个人就够了，而前端的开发文件也不多。<br>但是当一个项目足够大的时候：需要多个人维护和开发，并且有很多模块，如果还是按照上面的开发模式，那将是一场灾难。那么就需要每个人负责一块或者多块内容，也就需要所谓的“模块化”了。</p>\n<p><strong>简单的模块：</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'fn'</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello '</span> + name);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">fn.say();</div><div class=\"line\"></div><div class=\"line\">需要注意的是：这里fn的name是可以被修改的。</div></pre></td></tr></table></figure></p>\n<p><strong>立即执行函数：</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> m = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'fn'</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello '</span> + name);</div><div class=\"line\">  &#125;;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;<span class=\"attr\">say</span>: say&#125;;</div><div class=\"line\">  <span class=\"comment\">//...</span></div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\">m.say();</div><div class=\"line\"></div><div class=\"line\">这里的name是不能被修改的。</div></pre></td></tr></table></figure></p>\n<p>然而，这样还是会有问题的。<br>当小A在一个文件中定义的一个全局的sayHello，而小B在另一个文件中也定义了一个全局的sayHello，那就会有冲突了。</p>\n<p>为了避免：</p>\n<ul>\n<li>命名冲突</li>\n<li>全局变量冗杂</li>\n<li>依赖关系的复杂性</li>\n<li>便于开发等..</li>\n</ul>\n<p>我们就需要有一种能满足上面的要求的规范和方法。</p>\n<p><strong>CommonJS</strong><br>2009年，美国程序员Ryan Dahl创造了node.js项目，将javascript语言用于服务器端编程。而这也标志着Javascript模块化编程的诞生。<br>大牛云集的CommonJs社区发力，制定了Modules/1.0（<a href=\"http://wiki.commonjs.org/wiki/Modules/1.0）规范：\" target=\"_blank\" rel=\"external\">http://wiki.commonjs.org/wiki/Modules/1.0）规范：</a></p>\n<ol>\n<li>模块的标识应遵循的规则（书写规范）</li>\n<li>定义全局函数require，通过传入模块标识来引入其他模块，执行的结果即为别的模块暴漏出来的API</li>\n<li>如果被require函数引入的模块中也包含依赖，那么依次加载这些依赖</li>\n<li>如果引入模块失败，那么require函数应该报一个异常</li>\n<li>模块通过变量exports来向往暴漏API，exports只能是一个对象，暴漏的API须作为此对象的属性。</li>\n</ol>\n<p>此规范一出，立刻产生了良好的效果，由于其简单而直接，在nodejs中，这种模块化方案立刻被推广开了。</p>\n<p>示例如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// a.js</span></div><div class=\"line\">exports.add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> x + y;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// b.js</span></div><div class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"built_in\">require</span>(<span class=\"string\">'a'</span>).add;</div><div class=\"line\"></div><div class=\"line\">add(<span class=\"number\">3</span>, <span class=\"number\">2</span>); <span class=\"comment\">// 5</span></div></pre></td></tr></table></figure>\n<p><strong>CommonJS规范：</strong></p>\n<ul>\n<li>每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。</li>\n<li>模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。</li>\n</ul>\n<p>由于CommonJS是同步的，所以想要调用模块里的方法，就必须先加载模块。这在服务端是没有问题的，然而在浏览器却行不通。由于浏览器加载资源时是异步加载的，又不能保证网络的稳定性，所以传统的CommonJS模块在浏览器环境中无法正常加载。</p>\n<p>怎么办？找方法：<br>1，开发一个服务端组件，对代码进行静态分析，将模块和它的依赖列表一起返回给客户端。当然这实现起来需要一定的技术方案，在此不做探讨。<br>2，定义一套规范，用一个标准去约束开发，利用依赖列表和回调函数达到“异步模块定义”，这就是<strong>AMD规范</strong>。</p>\n<p>AMD也采用require()语句加载模块，但是不同于CommonJS，它要求两个参数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>([<span class=\"built_in\">module</span>], callback);</div></pre></td></tr></table></figure></p>\n<p>第一个参数[module]，是一个数组，里面的成员就是要加载的模块；第二个参数callback，则是加载成功之后的回调函数。<br>上面的b.js改成AMD形式，就是下面这样：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">'a'</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">mod</span>) </span>&#123;</div><div class=\"line\">  mod.add(<span class=\"number\">3</span>, <span class=\"number\">2</span>)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>目前，只有require.js实现了AMD规范。更多关于<a href=\"http://requirejs.org/\" target=\"_blank\" rel=\"external\">require.js</a>可以参考官网。</p>\n<p>接下来聊一聊CMD是什么：</p>\n<p><strong>CMD</strong> 是 sea.js 在推广过程中对模块定义的规范化产出。</p>\n<p>CMD规范：一个模块就是一个文件。<br>书写格式如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">define(factory);</div></pre></td></tr></table></figure></p>\n<p>define 是一个全局函数，用来定义模块。<br>define 接受 factory 参数，factory 可以是一个函数，也可以是一个对象或字符串。<br>factory 为对象、字符串时，表示模块的接口就是该对象、字符串。<br>factory 为函数时，表示是模块的构造方法。执行该构造方法，可以得到模块向外提供的接口。factory 方法在执行时，默认会传入三个参数：require、exports 和 module：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require, exports, module</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 模块代码</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>AMD和CMD的区别：<br>AMD是前置依赖，CMD是就近依赖。</p>\n<p>至于那种方式更好，在此不做比较和分析，因为这两种技术都将过时，但还是可以去学习和借鉴的。技术在推动世界的进步，善于利用，也是一种技能。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>一直都觉得AMD和CMD是很厉害的东西，想学习来着，却一直没认认真真的学习过，今天就好好的学习一下。做个记录…</p>\n</blockquote>\n<p>先摘写两句话：<br>AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。<br>CMD 是 SeaJS 在推广过程中对模块定义的规范化产出。</p>\n<p>那它们是来干嘛的呢？</p>\n<p>这个我们可以简单聊一下前端的开发模式：<br>对于一个小的项目而言：可能一两个人就够了，而前端的开发文件也不多。<br>但是当一个项目足够大的时候：需要多个人维护和开发，并且有很多模块，如果还是按照上面的开发模式，那将是一场灾难。那么就需要每个人负责一块或者多块内容，也就需要所谓的“模块化”了。</p>\n<p><strong>简单的模块：</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'fn'</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello '</span> + name);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">fn.say();</div><div class=\"line\"></div><div class=\"line\">需要注意的是：这里fn的name是可以被修改的。</div></pre></td></tr></table></figure></p>\n<p><strong>立即执行函数：</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> m = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'fn'</span>;</div><div class=\"line\">  <span class=\"keyword\">var</span> say = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello '</span> + name);</div><div class=\"line\">  &#125;;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;<span class=\"attr\">say</span>: say&#125;;</div><div class=\"line\">  <span class=\"comment\">//...</span></div><div class=\"line\">&#125;)();</div><div class=\"line\"></div><div class=\"line\">m.say();</div><div class=\"line\"></div><div class=\"line\">这里的name是不能被修改的。</div></pre></td></tr></table></figure></p>\n<p>然而，这样还是会有问题的。<br>当小A在一个文件中定义的一个全局的sayHello，而小B在另一个文件中也定义了一个全局的sayHello，那就会有冲突了。</p>\n<p>为了避免：</p>\n<ul>\n<li>命名冲突</li>\n<li>全局变量冗杂</li>\n<li>依赖关系的复杂性</li>\n<li>便于开发等..</li>\n</ul>\n<p>我们就需要有一种能满足上面的要求的规范和方法。</p>\n<p><strong>CommonJS</strong><br>2009年，美国程序员Ryan Dahl创造了node.js项目，将javascript语言用于服务器端编程。而这也标志着Javascript模块化编程的诞生。<br>大牛云集的CommonJs社区发力，制定了Modules/1.0（<a href=\"http://wiki.commonjs.org/wiki/Modules/1.0）规范：\" target=\"_blank\" rel=\"external\">http://wiki.commonjs.org/wiki/Modules/1.0）规范：</a></p>\n<ol>\n<li>模块的标识应遵循的规则（书写规范）</li>\n<li>定义全局函数require，通过传入模块标识来引入其他模块，执行的结果即为别的模块暴漏出来的API</li>\n<li>如果被require函数引入的模块中也包含依赖，那么依次加载这些依赖</li>\n<li>如果引入模块失败，那么require函数应该报一个异常</li>\n<li>模块通过变量exports来向往暴漏API，exports只能是一个对象，暴漏的API须作为此对象的属性。</li>\n</ol>\n<p>此规范一出，立刻产生了良好的效果，由于其简单而直接，在nodejs中，这种模块化方案立刻被推广开了。</p>\n<p>示例如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// a.js</span></div><div class=\"line\">exports.add = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> x + y;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// b.js</span></div><div class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"built_in\">require</span>(<span class=\"string\">'a'</span>).add;</div><div class=\"line\"></div><div class=\"line\">add(<span class=\"number\">3</span>, <span class=\"number\">2</span>); <span class=\"comment\">// 5</span></div></pre></td></tr></table></figure>\n<p><strong>CommonJS规范：</strong></p>\n<ul>\n<li>每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类，都是私有的，对其他文件不可见。</li>\n<li>模块必须通过 module.exports 导出对外的变量或接口，通过 require() 来导入其他模块的输出到当前模块作用域中。</li>\n</ul>\n<p>由于CommonJS是同步的，所以想要调用模块里的方法，就必须先加载模块。这在服务端是没有问题的，然而在浏览器却行不通。由于浏览器加载资源时是异步加载的，又不能保证网络的稳定性，所以传统的CommonJS模块在浏览器环境中无法正常加载。</p>\n<p>怎么办？找方法：<br>1，开发一个服务端组件，对代码进行静态分析，将模块和它的依赖列表一起返回给客户端。当然这实现起来需要一定的技术方案，在此不做探讨。<br>2，定义一套规范，用一个标准去约束开发，利用依赖列表和回调函数达到“异步模块定义”，这就是<strong>AMD规范</strong>。</p>\n<p>AMD也采用require()语句加载模块，但是不同于CommonJS，它要求两个参数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>([<span class=\"built_in\">module</span>], callback);</div></pre></td></tr></table></figure></p>\n<p>第一个参数[module]，是一个数组，里面的成员就是要加载的模块；第二个参数callback，则是加载成功之后的回调函数。<br>上面的b.js改成AMD形式，就是下面这样：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">'a'</span>], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">mod</span>) </span>&#123;</div><div class=\"line\">  mod.add(<span class=\"number\">3</span>, <span class=\"number\">2</span>)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>目前，只有require.js实现了AMD规范。更多关于<a href=\"http://requirejs.org/\" target=\"_blank\" rel=\"external\">require.js</a>可以参考官网。</p>\n<p>接下来聊一聊CMD是什么：</p>\n<p><strong>CMD</strong> 是 sea.js 在推广过程中对模块定义的规范化产出。</p>\n<p>CMD规范：一个模块就是一个文件。<br>书写格式如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">define(factory);</div></pre></td></tr></table></figure></p>\n<p>define 是一个全局函数，用来定义模块。<br>define 接受 factory 参数，factory 可以是一个函数，也可以是一个对象或字符串。<br>factory 为对象、字符串时，表示模块的接口就是该对象、字符串。<br>factory 为函数时，表示是模块的构造方法。执行该构造方法，可以得到模块向外提供的接口。factory 方法在执行时，默认会传入三个参数：require、exports 和 module：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">define(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">require, exports, module</span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// 模块代码</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>AMD和CMD的区别：<br>AMD是前置依赖，CMD是就近依赖。</p>\n<p>至于那种方式更好，在此不做比较和分析，因为这两种技术都将过时，但还是可以去学习和借鉴的。技术在推动世界的进步，善于利用，也是一种技能。</p>\n"},{"title":"Life-without-love-之滴滴","date":"2018-05-11T13:44:55.000Z","_content":"\n生而为人，请你务必善良。\n\n<p style=\"color: #fff;\">平台利益为大，不知底线为何？为他人负责，不是告诉别人要注意安全。<br/>凶手之恶，实为人神共愤，处百死不能消逝者家人愤。<br/>再有地域炮者，何事都有他，细数各地卑劣，而其最为人所不齿。<br/>造谣者，蹭热度者，吃人血馒头的“销售精英”...，最大的恶，不仅是灾难，还有消费死者和灾难。</p>","source":"_posts/Life-without-love-之滴滴.md","raw":"---\ntitle: Life-without-love-之滴滴\ndate: 2018-05-11 21:44:55\ntags:\n  - lwl\n---\n\n生而为人，请你务必善良。\n\n<p style=\"color: #fff;\">平台利益为大，不知底线为何？为他人负责，不是告诉别人要注意安全。<br/>凶手之恶，实为人神共愤，处百死不能消逝者家人愤。<br/>再有地域炮者，何事都有他，细数各地卑劣，而其最为人所不齿。<br/>造谣者，蹭热度者，吃人血馒头的“销售精英”...，最大的恶，不仅是灾难，还有消费死者和灾难。</p>","slug":"Life-without-love-之滴滴","published":1,"updated":"2018-05-11T14:18:23.278Z","_id":"cjh20k9lm002huw2c0d6di6sn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>生而为人，请你务必善良。</p>\n<p style=\"color: #fff;\">平台利益为大，不知底线为何？为他人负责，不是告诉别人要注意安全。<br>凶手之恶，实为人神共愤，处百死不能消逝者家人愤。<br>再有地域炮者，何事都有他，细数各地卑劣，而其最为人所不齿。<br>造谣者，蹭热度者，吃人血馒头的“销售精英”…，最大的恶，不仅是灾难，还有消费死者和灾难。</p>","site":{"data":{}},"excerpt":"","more":"<p>生而为人，请你务必善良。</p>\n<p style=\"color: #fff;\">平台利益为大，不知底线为何？为他人负责，不是告诉别人要注意安全。<br>凶手之恶，实为人神共愤，处百死不能消逝者家人愤。<br>再有地域炮者，何事都有他，细数各地卑劣，而其最为人所不齿。<br>造谣者，蹭热度者，吃人血馒头的“销售精英”…，最大的恶，不仅是灾难，还有消费死者和灾难。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjh2069v10008uw2cxysmqwan","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069v5000cuw2ciu94tgim"},{"post_id":"cjh2069uo0001uw2c0hfz10vv","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069v6000euw2cp9wrfxwq"},{"post_id":"cjh2069v5000duw2ctgiyhx7x","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069v8000huw2c9zj9vg9k"},{"post_id":"cjh2069uy0006uw2cqg2dtg5v","tag_id":"cjh2069v4000buw2c7rr9w1yb","_id":"cjh2069v9000juw2csh25l7cr"},{"post_id":"cjh2069v3000auw2cu7pm1n3o","tag_id":"cjh2069v7000guw2ckped5o5u","_id":"cjh2069vb000nuw2c42gjdrmg"},{"post_id":"cjh2069va000muw2cvqrlo08t","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069vd000puw2ct6d9dgbb"},{"post_id":"cjh2069v6000fuw2cfk0nv2co","tag_id":"cjh2069va000luw2c4mu392qm","_id":"cjh2069vf000suw2cqb2gw52z"},{"post_id":"cjh2069v8000iuw2cmj37wa9d","tag_id":"cjh2069vd000quw2clih9ltv4","_id":"cjh2069vh000wuw2c3nzy0rk2"},{"post_id":"cjh2069vi000xuw2c63ywlix8","tag_id":"cjh2069vd000quw2clih9ltv4","_id":"cjh2069vk0010uw2cey1lekhd"},{"post_id":"cjh2069vi000xuw2c63ywlix8","tag_id":"cjh2069vh000vuw2csnuga4yz","_id":"cjh2069vn0012uw2czy0wi66n"},{"post_id":"cjh2069vj000yuw2cq19zorr7","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069vn0015uw2cpryjdn2e"},{"post_id":"cjh2069vj000yuw2cq19zorr7","tag_id":"cjh2069vd000quw2clih9ltv4","_id":"cjh2069vp0017uw2c45tz9ylq"},{"post_id":"cjh2069vm0011uw2ceubwxw5f","tag_id":"cjh2069va000luw2c4mu392qm","_id":"cjh2069vq001auw2cyj8px6kv"},{"post_id":"cjh2069vb000ouw2cbe1hrkf9","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069vs001cuw2cth8rtczm"},{"post_id":"cjh2069vb000ouw2cbe1hrkf9","tag_id":"cjh2069vh000vuw2csnuga4yz","_id":"cjh2069vu001euw2cgnl6i53f"},{"post_id":"cjh2069vb000ouw2cbe1hrkf9","tag_id":"cjh2069vd000quw2clih9ltv4","_id":"cjh2069vv001huw2ct65vvbq0"},{"post_id":"cjh2069vd000ruw2ci1ihq7z8","tag_id":"cjh2069vn0014uw2c0cy5yprd","_id":"cjh2069vv001juw2c7p3w4kl1"},{"post_id":"cjh2069vp0018uw2co7c7cjhn","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069w1001muw2c9d891izu"},{"post_id":"cjh2069vn0013uw2copg4baq9","tag_id":"cjh2069vp0019uw2ciotslode","_id":"cjh2069w2001ouw2ct5mpx3us"},{"post_id":"cjh2069vs001duw2cm7spe6pd","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069w4001ruw2c0qmcyor5"},{"post_id":"cjh2069vr001buw2cm2senvro","tag_id":"cjh2069vu001fuw2cgvied0v7","_id":"cjh2069w4001tuw2cxkowytx0"},{"post_id":"cjh2069vv001guw2comtlyyct","tag_id":"cjh2069w1001luw2cqrf6la9k","_id":"cjh2069w7001wuw2crdyhdale"},{"post_id":"cjh2069w3001puw2cwdpcg49i","tag_id":"cjh2069w1001luw2cqrf6la9k","_id":"cjh2069w8001yuw2cubwtxias"},{"post_id":"cjh2069w4001suw2c6zi3kg1s","tag_id":"cjh2069vu001fuw2cgvied0v7","_id":"cjh2069w90021uw2c2jfkt256"},{"post_id":"cjh2069vv001iuw2cjyhr2q95","tag_id":"cjh2069w1001luw2cqrf6la9k","_id":"cjh2069wa0023uw2citv20y6c"},{"post_id":"cjh2069w6001uuw2cusx3t8qx","tag_id":"cjh2069w1001luw2cqrf6la9k","_id":"cjh2069wb0025uw2cce8bcu26"},{"post_id":"cjh2069w0001kuw2cjqpx3ser","tag_id":"cjh2069w7001vuw2ccvdms7mu","_id":"cjh2069wd0027uw2cqwbdr3r2"},{"post_id":"cjh2069wa0022uw2cltrq4e8r","tag_id":"cjh2069w1001luw2cqrf6la9k","_id":"cjh2069wd0028uw2cqnx0aq6y"},{"post_id":"cjh2069w1001nuw2c0vswwt8n","tag_id":"cjh2069w90020uw2c3zpla286","_id":"cjh2069wd002auw2cldygnfwu"},{"post_id":"cjh2069w8001xuw2c0hkh8asg","tag_id":"cjh2069wb0026uw2cww8hlx07","_id":"cjh2069wd002buw2cum1xt7z3"},{"post_id":"cjh2069w9001zuw2cxvxfd0lr","tag_id":"cjh2069wd0029uw2cvpw3r7ta","_id":"cjh2069wf002duw2c0ugm7nim"},{"post_id":"cjh2069w9001zuw2cxvxfd0lr","tag_id":"cjh2069uy0004uw2chtkegjn9","_id":"cjh2069wg002euw2c6xqzpyw6"},{"post_id":"cjh2069wb0024uw2crhp7ie7z","tag_id":"cjh2069wd0029uw2cvpw3r7ta","_id":"cjh2069wg002fuw2cuw2hmcn0"},{"post_id":"cjh2069vf000tuw2cgce0clhm","tag_id":"cjh2069va000luw2c4mu392qm","_id":"cjh2086nf002guw2co91ltbtv"},{"post_id":"cjh20k9lm002huw2c0d6di6sn","tag_id":"cjh2069v4000buw2c7rr9w1yb","_id":"cjh20ki42002iuw2copf06uyi"}],"Tag":[{"name":"笔记","_id":"cjh2069uy0004uw2chtkegjn9"},{"name":"lwl","_id":"cjh2069v4000buw2c7rr9w1yb"},{"name":"tips","_id":"cjh2069v7000guw2ckped5o5u"},{"name":"python","_id":"cjh2069va000luw2c4mu392qm"},{"name":"vue","_id":"cjh2069vd000quw2clih9ltv4"},{"name":"webpack","_id":"cjh2069vh000vuw2csnuga4yz"},{"name":"公告","_id":"cjh2069vn0014uw2c0cy5yprd"},{"name":"html","_id":"cjh2069vp0019uw2ciotslode"},{"name":"故事汇","_id":"cjh2069vu001fuw2cgvied0v7"},{"name":"思考","_id":"cjh2069w1001luw2cqrf6la9k"},{"name":"我是搬运工","_id":"cjh2069w7001vuw2ccvdms7mu"},{"name":"算法","_id":"cjh2069w90020uw2c3zpla286"},{"name":"Tips","_id":"cjh2069wb0026uw2cww8hlx07"},{"name":"js","_id":"cjh2069wd0029uw2cvpw3r7ta"}]}}